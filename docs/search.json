{"version": "0.9.5", "fields": ["qualname", "fullname", "doc"], "ref": "fullname", "documentStore": {"docs": {"arc": {"fullname": "arc", "modulename": "arc", "qualname": "", "type": "module", "doc": "<h1 id=\"arc-a-regular-cli\">ARC: A Regular CLI</h1>\n\n<p>A tool for building declartive, and highly extendable CLI systems for Python 3.9</p>\n\n<h1 id=\"arc-features\">ARC Features</h1>\n\n<ul>\n<li>Automatic type convertsion</li>\n<li>Command Namespacing</li>\n<li>Help Documentation Generation</li>\n<li>User-extension via Dynamic namespace loading</li>\n</ul>\n\n<h1 id=\"docs\">Docs</h1>\n\n<ul>\n<li><a href=\"http://arc.seanrcollings.com\">Docs</a></li>\n<li><a href=\"https://github.com/seanrcollings/arc/wiki\">Wiki</a></li>\n<li><a href=\"https://github.com/seanrcollings/arc/wiki/Changelog\">Changelog</a></li>\n</ul>\n\n<h1 id=\"installation\">Installation</h1>\n\n<pre><code>$ pip install arc-cli\n</code></pre>\n\n<p>Clone for development</p>\n\n<pre><code>$ git clone https://github.com/seanrcollings/arc\n$ poetry install\n</code></pre>\n\n<h1 id=\"quick-start\">Quick Start</h1>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello, World!&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python example.py hello\nHello, World!\n</code></pre>\n\n<p>Reference <a href=\"https://github.com/seanrcollings/arc/wiki\">getting started</a> for more info</p>\n\n<h1 id=\"tests\">Tests</h1>\n\n<p>Tests are written with <code>pytest</code></p>\n\n<pre><code>$ pytest\n</code></pre>\n"}, "arc.application": {"fullname": "arc.application", "modulename": "arc.application", "qualname": "", "type": "module", "doc": "<p>Code for the <code>arc</code> executable</p>\n\n<p>Check <code>arc --help</code> for available commands</p>\n"}, "arc.application.application": {"fullname": "arc.application.application", "modulename": "arc.application.application", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.application.application.OpenEnum": {"fullname": "arc.application.application.OpenEnum", "modulename": "arc.application.application", "qualname": "OpenEnum", "type": "class", "doc": "<p>An enumeration.</p>\n"}, "arc.application.application.OpenEnum.SOURCE": {"fullname": "arc.application.application.OpenEnum.SOURCE", "modulename": "arc.application.application", "qualname": "OpenEnum.SOURCE", "type": "variable", "doc": "<p></p>\n"}, "arc.application.application.OpenEnum.WIKI": {"fullname": "arc.application.application.OpenEnum.WIKI", "modulename": "arc.application.application", "qualname": "OpenEnum.WIKI", "type": "variable", "doc": "<p></p>\n"}, "arc.application.application.OpenEnum.DOCS": {"fullname": "arc.application.application.OpenEnum.DOCS", "modulename": "arc.application.application", "qualname": "OpenEnum.DOCS", "type": "variable", "doc": "<p></p>\n"}, "arc.application.application.InitEnum": {"fullname": "arc.application.application.InitEnum", "modulename": "arc.application.application", "qualname": "InitEnum", "type": "class", "doc": "<p>An enumeration.</p>\n"}, "arc.application.application.InitEnum.POETRY": {"fullname": "arc.application.application.InitEnum.POETRY", "modulename": "arc.application.application", "qualname": "InitEnum.POETRY", "type": "variable", "doc": "<p></p>\n"}, "arc.application.application.classify": {"fullname": "arc.application.application.classify", "modulename": "arc.application.application", "qualname": "classify", "type": "function", "doc": "<p></p>\n", "parameters": ["string"], "funcdef": "def"}, "arc.application.application.color_print": {"fullname": "arc.application.application.color_print", "modulename": "arc.application.application", "qualname": "color_print", "type": "function", "doc": "<p></p>\n", "parameters": ["message"], "funcdef": "def"}, "arc.application.templates": {"fullname": "arc.application.templates", "modulename": "arc.application.templates", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.autoload": {"fullname": "arc.autoload", "modulename": "arc.autoload", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.autoload.Autoload": {"fullname": "arc.autoload.Autoload", "modulename": "arc.autoload", "qualname": "Autoload", "type": "class", "doc": "<p></p>\n"}, "arc.autoload.Autoload.__init__": {"fullname": "arc.autoload.Autoload.__init__", "modulename": "arc.autoload", "qualname": "Autoload.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "paths", "parent"], "funcdef": "def"}, "arc.autoload.Autoload.load": {"fullname": "arc.autoload.Autoload.load", "modulename": "arc.autoload", "qualname": "Autoload.load", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.autoload.Autoload.path": {"fullname": "arc.autoload.Autoload.path", "modulename": "arc.autoload", "qualname": "Autoload.path", "type": "function", "doc": "<p></p>\n", "parameters": ["filepath"], "funcdef": "def"}, "arc.callbacks": {"fullname": "arc.callbacks", "modulename": "arc.callbacks", "qualname": "", "type": "module", "doc": "<p>The callback system provides an easy way to:</p>\n\n<ul>\n<li>Share logic between commands</li>\n<li>Perfrom validation on input data</li>\n<li>Modify data before sending it to the function</li>\n</ul>\n\n<h1 id=\"creating-a-callback\">Creating a callback</h1>\n\n<p>Callbacks are created by using special decorators exported by <code>arc.callbacks</code> these are:</p>\n\n<ul>\n<li><code>before</code> - Executed before the command executes, recieves all the arguments to be sent to the command as an argument</li>\n<li><code>after</code> - Executed after the command executes, recieves the return value of the command</li>\n<li><code>around</code> - Executes both before and after the command via the <code>yield</code> keyword.</li>\n</ul>\n\n<p>After creating the callback with the specific decorator, it can be added to a command simply by decorating that command with it.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span>\n\n<span class=\"nd\">@callbacks</span><span class=\"o\">.</span><span class=\"n\">before</span>\n<span class=\"k\">def</span> <span class=\"nf\">before_example</span><span class=\"p\">(</span><span class=\"n\">arguments</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I&#39;m executing before&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@callbacks</span><span class=\"o\">.</span><span class=\"n\">after</span>\n<span class=\"k\">def</span> <span class=\"nf\">after_example</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I&#39;m executing after&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@callbacks</span><span class=\"o\">.</span><span class=\"n\">around</span>\n<span class=\"k\">def</span> <span class=\"nf\">around_example</span><span class=\"p\">(</span><span class=\"n\">arguments</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I&#39;m starting now&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">yield</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I&#39;m ending now&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@before_example</span>\n<span class=\"nd\">@after_example</span>\n<span class=\"nd\">@around_example</span>\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello there!&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p>If you execute this, you should see something similar to:</p>\n\n<pre><code>$ python3 example.py command\nI'm executing before &lt;------ before_example()\nI'm starting now  &lt; ----------------\nHello there! &lt;---- the Command     | - around_example()\nI'm ending now &lt;--------------------\nI'm executing after &lt;------ after_example()\n</code></pre>\n"}, "arc.callbacks.actions": {"fullname": "arc.callbacks.actions", "modulename": "arc.callbacks.actions", "qualname": "", "type": "module", "doc": "<p>Callbacks that perform some action on a type, should be treated with caution</p>\n"}, "arc.callbacks.actions.open_file": {"fullname": "arc.callbacks.actions.open_file", "modulename": "arc.callbacks.actions", "qualname": "open_file", "type": "function", "doc": "<p>Attempts to open the file given as the provided argument.\nIs not inherited by subcommands</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>argument (str):</strong>  Name of the argument to attempt to open as a file</li>\n<li><strong>mode (str, optional):</strong>  Mode to open the file in. Defaults to \"r\" (read).</li>\n</ul>\n\n<p>All other arguments are passed to the <code>open()</code> call</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ActionError:</strong>  If the provided path is not a file</li>\n</ul>\n", "parameters": ["argument", "mode", "args", "kwargs"], "funcdef": "def"}, "arc.callbacks.callbacks": {"fullname": "arc.callbacks.callbacks", "modulename": "arc.callbacks.callbacks", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.callbacks.callbacks.register_wrapper": {"fullname": "arc.callbacks.callbacks.register_wrapper", "modulename": "arc.callbacks.callbacks", "qualname": "register_wrapper", "type": "function", "doc": "<p></p>\n", "parameters": ["when", "func", "kwargs"], "funcdef": "def"}, "arc.callbacks.callbacks.callback": {"fullname": "arc.callbacks.callbacks.callback", "modulename": "arc.callbacks.callbacks", "qualname": "callback", "type": "function", "doc": "<p>Wraps a function so it can be used as\na command callback</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>when (CallbackTime):</strong>  When the callback should fire (before, after, or around)</li>\n</ul>\n", "parameters": ["when", "options"], "funcdef": "def"}, "arc.callbacks.callbacks.callback_helper": {"fullname": "arc.callbacks.callbacks.callback_helper", "modulename": "arc.callbacks.callbacks", "qualname": "callback_helper", "type": "function", "doc": "<p>Acts as an intermediary between the actual\n<code>callback</code> function and the other callback helpers.\nAllows the decorators to be called in either of these two ways</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@before</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"nd\">@before</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["when", "func", "inherit"], "funcdef": "def"}, "arc.callbacks.callbacks.before": {"fullname": "arc.callbacks.callbacks.before", "modulename": "arc.callbacks.callbacks", "qualname": "before", "type": "function", "doc": "<p></p>\n", "parameters": ["args", "kwargs"], "funcdef": "def"}, "arc.callbacks.callbacks.after": {"fullname": "arc.callbacks.callbacks.after", "modulename": "arc.callbacks.callbacks", "qualname": "after", "type": "function", "doc": "<p></p>\n", "parameters": ["args", "kwargs"], "funcdef": "def"}, "arc.callbacks.callbacks.around": {"fullname": "arc.callbacks.callbacks.around", "modulename": "arc.callbacks.callbacks", "qualname": "around", "type": "function", "doc": "<p></p>\n", "parameters": ["args", "kwargs"], "funcdef": "def"}, "arc.callbacks.callbacks.skip": {"fullname": "arc.callbacks.callbacks.skip", "modulename": "arc.callbacks.callbacks", "qualname": "skip", "type": "function", "doc": "<p>Removes callbacks from command</p>\n", "parameters": ["skip_callbacks"], "funcdef": "def"}, "arc.callbacks.validators": {"fullname": "arc.callbacks.validators", "modulename": "arc.callbacks.validators", "qualname": "", "type": "module", "doc": "<p>Callbacks that check the validitiy of some type. Upon fail, should raise a ValidationError</p>\n"}, "arc.callbacks.validators.in_range": {"fullname": "arc.callbacks.validators.in_range", "modulename": "arc.callbacks.validators", "qualname": "in_range", "type": "function", "doc": "<p>Asserts that arg is between smallest and largest</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>arg (str):</strong>  Argument to check</li>\n<li><strong>smallest (int):</strong>  Smallest possible value for <code>arg</code></li>\n<li><strong>largest (int):</strong>  Largest value possible for <code>arg</code></li>\n</ul>\n", "parameters": ["arg", "smallest", "largest"], "funcdef": "def"}, "arc.callbacks.validators.valid_path": {"fullname": "arc.callbacks.validators.valid_path", "modulename": "arc.callbacks.validators", "qualname": "valid_path", "type": "function", "doc": "<p>Asserts that ars is a valid filepath</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>arg (str):</strong>  Argument to check.\nIt's value may be any type that <code>str(value)</code> resolves to a valid filepath</li>\n</ul>\n", "parameters": ["arg"], "funcdef": "def"}, "arc.cli": {"fullname": "arc.cli", "modulename": "arc.cli", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.cli.CLI": {"fullname": "arc.cli.CLI", "modulename": "arc.cli", "qualname": "CLI", "type": "class", "doc": "<p>Core class for arc</p>\n"}, "arc.cli.CLI.__init__": {"fullname": "arc.cli.CLI.__init__", "modulename": "arc.cli", "qualname": "CLI.__init__", "type": "function", "doc": "<p>Creates a CLI object.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  name of the CLI, will be used in the help command.</li>\n<li><strong>function:</strong>  function that defines the CLI's default behavior.\nIdentical to calling <code>@cli.base()</code>.</li>\n<li><strong>arcfile:</strong>  arc config file to load. defaults to ./.arc</li>\n<li><strong>context:</strong>  dictionary of key value pairs to pass to children as context</li>\n<li><strong>version:</strong>  Version string to display with <code>--version</code></li>\n</ul>\n", "parameters": ["self", "name", "function", "parsing_method", "arcfile", "context", "version"], "funcdef": "def"}, "arc.cli.CLI.default_action": {"fullname": "arc.cli.CLI.default_action", "modulename": "arc.cli", "qualname": "CLI.default_action", "type": "variable", "doc": "<p></p>\n"}, "arc.cli.CLI.command": {"fullname": "arc.cli.CLI.command", "modulename": "arc.cli", "qualname": "CLI.command", "type": "function", "doc": "<p>Alias for <code>Command.subcommand</code></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Command: The subcommand's command object</p>\n</blockquote>\n", "parameters": ["self", "args", "kwargs"], "funcdef": "def"}, "arc.cli.CLI.base": {"fullname": "arc.cli.CLI.base", "modulename": "arc.cli", "qualname": "CLI.base", "type": "function", "doc": "<p>Define The CLI's default behavior\nwhen not given a specific command. Has the same interface\nas <code>Command.subcommand</code></p>\n", "parameters": ["self", "name", "parse_method", "kwargs"], "funcdef": "def"}, "arc.cli.CLI.missing_command": {"fullname": "arc.cli.CLI.missing_command", "modulename": "arc.cli", "qualname": "CLI.missing_command", "type": "function", "doc": "<p>Handles default arguments</p>\n\n<h1 id=\"arguments\">Arguments</h1>\n\n<pre><code>--help     shows this help\n--version  displays the version\n</code></pre>\n", "parameters": ["self", "help", "version", "kwargs"], "funcdef": "def"}, "arc.cli.CLI.autocomplete": {"fullname": "arc.cli.CLI.autocomplete", "modulename": "arc.cli", "qualname": "CLI.autocomplete", "type": "function", "doc": "<p>Enables autocompletion support for this CLI</p>\n\n<p><strong>Currently disabled</strong></p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>completions_for:</strong>  command for the shell to run autocompletions against.\nThis will default the name of the CLI, which should generally be the name of\nthe executable being built. It's useful to set this during testing, if you're\nnot actually installing a binary locally in development</li>\n<li><strong>completions_from:</strong>  command for the shell to run to generate the\nautocompletions</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li>NotImplementedError</li>\n</ul>\n", "parameters": ["self", "completions_for", "completions_from"], "funcdef": "def"}, "arc.cli.CLI.autoload": {"fullname": "arc.cli.CLI.autoload", "modulename": "arc.cli", "qualname": "CLI.autoload", "type": "function", "doc": "<p>Attempts to autoload command objects\ninto the CLI from the provided paths</p>\n", "parameters": ["self", "paths"], "funcdef": "def"}, "arc.cli.CLI.helper": {"fullname": "arc.cli.CLI.helper", "modulename": "arc.cli", "qualname": "CLI.helper", "type": "function", "doc": "<p>Displays information for a given command\nBy default, shows help for the top-level command.\nTo see a specific command's information, provide\na command name (some:command:name)</p>\n", "parameters": ["self", "command_name"], "funcdef": "def"}, "arc.cli.ArcFormatter": {"fullname": "arc.cli.ArcFormatter", "modulename": "arc.cli", "qualname": "ArcFormatter", "type": "class", "doc": "<p>Formatter instances are used to convert a LogRecord to text.</p>\n\n<p>Formatters need to know how a LogRecord is constructed. They are\nresponsible for converting a LogRecord to (usually) a string which can\nbe interpreted by either a human or an external system. The base Formatter\nallows a formatting string to be specified. If none is supplied, the\nstyle-dependent default value, \"%(message)s\", \"{message}\", or\n\"${message}\", is used.</p>\n\n<p>The Formatter can be initialized with a format string which makes use of\nknowledge of the LogRecord attributes - e.g. the default value mentioned\nabove makes use of the fact that the user's message and arguments are pre-\nformatted into a LogRecord's message attribute. Currently, the useful\nattributes in a LogRecord are described by:</p>\n\n<p>%(name)s            Name of the logger (logging channel)\n%(levelno)s         Numeric logging level for the message (DEBUG, INFO,\n                    WARNING, ERROR, CRITICAL)\n%(levelname)s       Text logging level for the message (\"DEBUG\", \"INFO\",\n                    \"WARNING\", \"ERROR\", \"CRITICAL\")\n%(pathname)s        Full pathname of the source file where the logging\n                    call was issued (if available)\n%(filename)s        Filename portion of pathname\n%(module)s          Module (name portion of filename)\n%(lineno)d          Source line number where the logging call was issued\n                    (if available)\n%(funcName)s        Function name\n%(created)f         Time when the LogRecord was created (time.time()\n                    return value)\n%(asctime)s         Textual time when the LogRecord was created\n%(msecs)d           Millisecond portion of the creation time\n%(relativeCreated)d Time in milliseconds when the LogRecord was created,\n                    relative to the time the logging module was loaded\n                    (typically at application startup time)\n%(thread)d          Thread ID (if available)\n%(threadName)s      Thread name (if available)\n%(process)d         Process ID (if available)\n%(message)s         The result of record.getMessage(), computed just as\n                    the record is emitted</p>\n"}, "arc.cli.ArcFormatter.prefixes": {"fullname": "arc.cli.ArcFormatter.prefixes", "modulename": "arc.cli", "qualname": "ArcFormatter.prefixes", "type": "variable", "doc": "<p></p>\n"}, "arc.cli.ArcFormatter.format": {"fullname": "arc.cli.ArcFormatter.format", "modulename": "arc.cli", "qualname": "ArcFormatter.format", "type": "function", "doc": "<p>Format the specified record as text.</p>\n\n<p>The record's attribute dictionary is used as the operand to a\nstring formatting operation which yields the returned string.\nBefore formatting the dictionary, a couple of preparatory steps\nare carried out. The message attribute of the record is computed\nusing LogRecord.getMessage(). If the formatting string uses the\ntime (as determined by a call to usesTime(), formatTime() is\ncalled to format the event time. If there is exception information,\nit is formatted using formatException() and appended to the message.</p>\n", "parameters": ["self", "record"], "funcdef": "def"}, "arc.color": {"fullname": "arc.color", "modulename": "arc.color", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.color.Color": {"fullname": "arc.color.Color", "modulename": "arc.color", "qualname": "Color", "type": "class", "doc": "<p>Color class, extends str</p>\n"}, "arc.color.Color.__init__": {"fullname": "arc.color.Color.__init__", "modulename": "arc.color", "qualname": "Color.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "code", "_args"], "funcdef": "def"}, "arc.color.Color.ESCAPE": {"fullname": "arc.color.Color.ESCAPE", "modulename": "arc.color", "qualname": "Color.ESCAPE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.Color.bright": {"fullname": "arc.color.Color.bright", "modulename": "arc.color", "qualname": "Color.bright", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg": {"fullname": "arc.color.fg", "modulename": "arc.color", "qualname": "fg", "type": "class", "doc": "<p>Foreground colors</p>\n"}, "arc.color.fg.__init__": {"fullname": "arc.color.fg.__init__", "modulename": "arc.color", "qualname": "fg.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.color.fg.BLACK": {"fullname": "arc.color.fg.BLACK", "modulename": "arc.color", "qualname": "fg.BLACK", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.RED": {"fullname": "arc.color.fg.RED", "modulename": "arc.color", "qualname": "fg.RED", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.GREEN": {"fullname": "arc.color.fg.GREEN", "modulename": "arc.color", "qualname": "fg.GREEN", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.YELLOW": {"fullname": "arc.color.fg.YELLOW", "modulename": "arc.color", "qualname": "fg.YELLOW", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.BLUE": {"fullname": "arc.color.fg.BLUE", "modulename": "arc.color", "qualname": "fg.BLUE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.MAGENTA": {"fullname": "arc.color.fg.MAGENTA", "modulename": "arc.color", "qualname": "fg.MAGENTA", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.CYAN": {"fullname": "arc.color.fg.CYAN", "modulename": "arc.color", "qualname": "fg.CYAN", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.WHITE": {"fullname": "arc.color.fg.WHITE", "modulename": "arc.color", "qualname": "fg.WHITE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.GREY": {"fullname": "arc.color.fg.GREY", "modulename": "arc.color", "qualname": "fg.GREY", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.ARC_BLUE": {"fullname": "arc.color.fg.ARC_BLUE", "modulename": "arc.color", "qualname": "fg.ARC_BLUE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.fg.rgb": {"fullname": "arc.color.fg.rgb", "modulename": "arc.color", "qualname": "fg.rgb", "type": "function", "doc": "<p>Returns the <strong>foreground</strong> ansi escape\nsequence for the provided rgb values</p>\n", "parameters": ["red", "green", "blue"], "funcdef": "def"}, "arc.color.fg.hex": {"fullname": "arc.color.fg.hex", "modulename": "arc.color", "qualname": "fg.hex", "type": "function", "doc": "<p>Returns the <strong>foreground</strong> ansi escape\nsequence for the provided hex values</p>\n", "parameters": ["hex_code"], "funcdef": "def"}, "arc.color.bg": {"fullname": "arc.color.bg", "modulename": "arc.color", "qualname": "bg", "type": "class", "doc": "<p>Background colors</p>\n"}, "arc.color.bg.__init__": {"fullname": "arc.color.bg.__init__", "modulename": "arc.color", "qualname": "bg.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.color.bg.BLACK": {"fullname": "arc.color.bg.BLACK", "modulename": "arc.color", "qualname": "bg.BLACK", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.RED": {"fullname": "arc.color.bg.RED", "modulename": "arc.color", "qualname": "bg.RED", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.GREEN": {"fullname": "arc.color.bg.GREEN", "modulename": "arc.color", "qualname": "bg.GREEN", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.YELLOW": {"fullname": "arc.color.bg.YELLOW", "modulename": "arc.color", "qualname": "bg.YELLOW", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.BLUE": {"fullname": "arc.color.bg.BLUE", "modulename": "arc.color", "qualname": "bg.BLUE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.MAGENTA": {"fullname": "arc.color.bg.MAGENTA", "modulename": "arc.color", "qualname": "bg.MAGENTA", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.CYAN": {"fullname": "arc.color.bg.CYAN", "modulename": "arc.color", "qualname": "bg.CYAN", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.WHITE": {"fullname": "arc.color.bg.WHITE", "modulename": "arc.color", "qualname": "bg.WHITE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.GREY": {"fullname": "arc.color.bg.GREY", "modulename": "arc.color", "qualname": "bg.GREY", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.ARC_BLUE": {"fullname": "arc.color.bg.ARC_BLUE", "modulename": "arc.color", "qualname": "bg.ARC_BLUE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.bg.rgb": {"fullname": "arc.color.bg.rgb", "modulename": "arc.color", "qualname": "bg.rgb", "type": "function", "doc": "<p>Returns the <strong>background</strong> ansi escape\nsequence for the provided rgb values</p>\n", "parameters": ["red", "green", "blue"], "funcdef": "def"}, "arc.color.bg.hex": {"fullname": "arc.color.bg.hex", "modulename": "arc.color", "qualname": "bg.hex", "type": "function", "doc": "<p>Returns the <strong>\"background\"</strong> ansi escape\nsequence for the provided hex value</p>\n", "parameters": ["hex_code"], "funcdef": "def"}, "arc.color.effects": {"fullname": "arc.color.effects", "modulename": "arc.color", "qualname": "effects", "type": "class", "doc": "<p>Other effects</p>\n"}, "arc.color.effects.__init__": {"fullname": "arc.color.effects.__init__", "modulename": "arc.color", "qualname": "effects.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.color.effects.CLEAR": {"fullname": "arc.color.effects.CLEAR", "modulename": "arc.color", "qualname": "effects.CLEAR", "type": "variable", "doc": "<p></p>\n"}, "arc.color.effects.BOLD": {"fullname": "arc.color.effects.BOLD", "modulename": "arc.color", "qualname": "effects.BOLD", "type": "variable", "doc": "<p></p>\n"}, "arc.color.effects.ITALIC": {"fullname": "arc.color.effects.ITALIC", "modulename": "arc.color", "qualname": "effects.ITALIC", "type": "variable", "doc": "<p></p>\n"}, "arc.color.effects.UNDERLINE": {"fullname": "arc.color.effects.UNDERLINE", "modulename": "arc.color", "qualname": "effects.UNDERLINE", "type": "variable", "doc": "<p></p>\n"}, "arc.color.effects.STRIKETHROUGH": {"fullname": "arc.color.effects.STRIKETHROUGH", "modulename": "arc.color", "qualname": "effects.STRIKETHROUGH", "type": "variable", "doc": "<p></p>\n"}, "arc.command": {"fullname": "arc.command", "modulename": "arc.command", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.command.namespace": {"fullname": "arc.command.namespace", "modulename": "arc.command", "qualname": "namespace", "type": "function", "doc": "<p>Creates a Command namespace.</p>\n\n<p>Namespaces are autoloadable with <code>cli.autoload()</code></p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  name of the namespace / command</li>\n<li><strong>function:</strong>  optional function to be used\nwhen calling the namespace directly, defaults to no_op</li>\n<li><strong>command_type:</strong>  Type of the command, defaults to KEYWORD</li>\n<li><strong>context:</strong>  dict of context values to be used in this namespace and below</li>\n</ul>\n", "parameters": ["name", "function", "parsing_method", "kwargs"], "funcdef": "def"}, "arc.command.argument": {"fullname": "arc.command.argument", "modulename": "arc.command.argument", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.command.argument.Argument": {"fullname": "arc.command.argument.Argument", "modulename": "arc.command.argument", "qualname": "Argument", "type": "class", "doc": "<p></p>\n"}, "arc.command.argument.Argument.__init__": {"fullname": "arc.command.argument.Argument.__init__", "modulename": "arc.command.argument", "qualname": "Argument.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "annotation", "default", "hidden", "aliases"], "funcdef": "def"}, "arc.command.argument.Argument.name": {"fullname": "arc.command.argument.Argument.name", "modulename": "arc.command.argument", "qualname": "Argument.name", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument.Argument.convert": {"fullname": "arc.command.argument.Argument.convert", "modulename": "arc.command.argument", "qualname": "Argument.convert", "type": "function", "doc": "<p>Converts the provided value to the expected value of the argument</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.command.argument.Argument.is_flag": {"fullname": "arc.command.argument.Argument.is_flag", "modulename": "arc.command.argument", "qualname": "Argument.is_flag", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.command.argument.Argument.is_optional": {"fullname": "arc.command.argument.Argument.is_optional", "modulename": "arc.command.argument", "qualname": "Argument.is_optional", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.command.argument_parser": {"fullname": "arc.command.argument_parser", "modulename": "arc.command.argument_parser", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.command.argument_parser.ArgumentParser": {"fullname": "arc.command.argument_parser.ArgumentParser", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser", "type": "class", "doc": "<p>Base class for ArgumentParsers</p>\n\n<p>Handles analyzing the provided function signature to generate\nThe Argument data structure</p>\n\n<p>Attempts to match provided data to <code>cls.matchers</code> regexes. If it finds a match,\nit'll pass control over to the match handler (<code>handle_&lt;matcher-name&gt;</code>). This class\nshould not be used to parse anything, as it does not provide any matchers or handlers\nof it's own.</p>\n"}, "arc.command.argument_parser.ArgumentParser.__init__": {"fullname": "arc.command.argument_parser.ArgumentParser.__init__", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "function", "arg_aliases"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.args": {"fullname": "arc.command.argument_parser.ArgumentParser.args", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.args", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.ArgumentParser.get_matchers": {"fullname": "arc.command.argument_parser.ArgumentParser.get_matchers", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.get_matchers", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.parse": {"fullname": "arc.command.argument_parser.ArgumentParser.parse", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.parse", "type": "function", "doc": "<p>Parses the provided command-line arguments into\na dictionary of arguments to be passed to a python\nfunction</p>\n", "parameters": ["self", "cli_args", "context"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.handle_match": {"fullname": "arc.command.argument_parser.ArgumentParser.handle_match", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.handle_match", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "match", "name"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.fill_unmatched": {"fullname": "arc.command.argument_parser.ArgumentParser.fill_unmatched", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.fill_unmatched", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "matched_args", "context"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.build_args": {"fullname": "arc.command.argument_parser.ArgumentParser.build_args", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.build_args", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "function", "arg_aliases"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"fullname": "arc.command.argument_parser.ArgumentParser.arg_hook", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.arg_hook", "type": "function", "doc": "<p>Callback to assert that the param being processed\nis valid for this given parser. Default implementation\ndoesn't do anything</p>\n", "parameters": ["self", "param", "meta"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.get_or_raise": {"fullname": "arc.command.argument_parser.ArgumentParser.get_or_raise", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.get_or_raise", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "key", "message"], "funcdef": "def"}, "arc.command.argument_parser.ArgumentParser.get_match_values": {"fullname": "arc.command.argument_parser.ArgumentParser.get_match_values", "modulename": "arc.command.argument_parser", "qualname": "ArgumentParser.get_match_values", "type": "function", "doc": "<p></p>\n", "parameters": ["match"], "funcdef": "def"}, "arc.command.argument_parser.FlagParser": {"fullname": "arc.command.argument_parser.FlagParser", "modulename": "arc.command.argument_parser", "qualname": "FlagParser", "type": "class", "doc": "<p>Class to handle parsing out the <code>--flags</code> or <code>-f</code></p>\n"}, "arc.command.argument_parser.FlagParser.matchers": {"fullname": "arc.command.argument_parser.FlagParser.matchers", "modulename": "arc.command.argument_parser", "qualname": "FlagParser.matchers", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.FlagParser.handle_flag": {"fullname": "arc.command.argument_parser.FlagParser.handle_flag", "modulename": "arc.command.argument_parser", "qualname": "FlagParser.handle_flag", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "flag"], "funcdef": "def"}, "arc.command.argument_parser.KeyArg": {"fullname": "arc.command.argument_parser.KeyArg", "modulename": "arc.command.argument_parser", "qualname": "KeyArg", "type": "class", "doc": "<p>dict() -> new empty dictionary\ndict(mapping) -> new dictionary initialized from a mapping object's\n    (key, value) pairs\ndict(iterable) -> new dictionary initialized as if via:\n    d = {}\n    for k, v in iterable:\n        d[k] = v\ndict(**kwargs) -> new dictionary initialized with the name=value pairs\n    in the keyword argument list.  For example:  dict(one=1, two=2)</p>\n"}, "arc.command.argument_parser.KeyArg.name": {"fullname": "arc.command.argument_parser.KeyArg.name", "modulename": "arc.command.argument_parser", "qualname": "KeyArg.name", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.KeyArg.value": {"fullname": "arc.command.argument_parser.KeyArg.value", "modulename": "arc.command.argument_parser", "qualname": "KeyArg.value", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.KeywordParser": {"fullname": "arc.command.argument_parser.KeywordParser", "modulename": "arc.command.argument_parser", "qualname": "KeywordParser", "type": "class", "doc": "<p>Class to handle parsing out the <code>--flags</code> or <code>-f</code></p>\n"}, "arc.command.argument_parser.KeywordParser.matchers": {"fullname": "arc.command.argument_parser.KeywordParser.matchers", "modulename": "arc.command.argument_parser", "qualname": "KeywordParser.matchers", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"fullname": "arc.command.argument_parser.KeywordParser.handle_keyword_argument", "modulename": "arc.command.argument_parser", "qualname": "KeywordParser.handle_keyword_argument", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "argument"], "funcdef": "def"}, "arc.command.argument_parser.KeywordParser.arg_hook": {"fullname": "arc.command.argument_parser.KeywordParser.arg_hook", "modulename": "arc.command.argument_parser", "qualname": "KeywordParser.arg_hook", "type": "function", "doc": "<p>Callback to assert that the param being processed\nis valid for this given parser. Default implementation\ndoesn't do anything</p>\n", "parameters": ["self", "param", "meta"], "funcdef": "def"}, "arc.command.argument_parser.PositionalParser": {"fullname": "arc.command.argument_parser.PositionalParser", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser", "type": "class", "doc": "<p>Class to handle parsing out the <code>--flags</code> or <code>-f</code></p>\n"}, "arc.command.argument_parser.PositionalParser.__init__": {"fullname": "arc.command.argument_parser.PositionalParser.__init__", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "args", "kwargs"], "funcdef": "def"}, "arc.command.argument_parser.PositionalParser.matchers": {"fullname": "arc.command.argument_parser.PositionalParser.matchers", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser.matchers", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.PositionalParser.current_pos": {"fullname": "arc.command.argument_parser.PositionalParser.current_pos", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser.current_pos", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.PositionalParser.var_args": {"fullname": "arc.command.argument_parser.PositionalParser.var_args", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser.var_args", "type": "variable", "doc": "<p></p>\n"}, "arc.command.argument_parser.PositionalParser.parse": {"fullname": "arc.command.argument_parser.PositionalParser.parse", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser.parse", "type": "function", "doc": "<p>Parses the provided command-line arguments into\na dictionary of arguments to be passed to a python\nfunction</p>\n", "parameters": ["self", "args"], "funcdef": "def"}, "arc.command.argument_parser.PositionalParser.handle_positional_argument": {"fullname": "arc.command.argument_parser.PositionalParser.handle_positional_argument", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser.handle_positional_argument", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.command.argument_parser.PositionalParser.arg_hook": {"fullname": "arc.command.argument_parser.PositionalParser.arg_hook", "modulename": "arc.command.argument_parser", "qualname": "PositionalParser.arg_hook", "type": "function", "doc": "<p>Callback to assert that the param being processed\nis valid for this given parser. Default implementation\ndoesn't do anything</p>\n", "parameters": ["self", "param", "meta"], "funcdef": "def"}, "arc.command.argument_parser.RawParser": {"fullname": "arc.command.argument_parser.RawParser", "modulename": "arc.command.argument_parser", "qualname": "RawParser", "type": "class", "doc": "<p>Base class for ArgumentParsers</p>\n\n<p>Handles analyzing the provided function signature to generate\nThe Argument data structure</p>\n\n<p>Attempts to match provided data to <code>cls.matchers</code> regexes. If it finds a match,\nit'll pass control over to the match handler (<code>handle_&lt;matcher-name&gt;</code>). This class\nshould not be used to parse anything, as it does not provide any matchers or handlers\nof it's own.</p>\n"}, "arc.command.argument_parser.ParsingMethod": {"fullname": "arc.command.argument_parser.ParsingMethod", "modulename": "arc.command.argument_parser", "qualname": "ParsingMethod", "type": "class", "doc": "<p></p>\n"}, "arc.command.argument_parser.ParsingMethod.__init__": {"fullname": "arc.command.argument_parser.ParsingMethod.__init__", "modulename": "arc.command.argument_parser", "qualname": "ParsingMethod.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"fullname": "arc.command.argument_parser.ParsingMethod.KEYWORD", "modulename": "arc.command.argument_parser", "qualname": "ParsingMethod.KEYWORD", "type": "class", "doc": "<p>Class to handle parsing out the <code>--flags</code> or <code>-f</code></p>\n"}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"fullname": "arc.command.argument_parser.ParsingMethod.POSITIONAL", "modulename": "arc.command.argument_parser", "qualname": "ParsingMethod.POSITIONAL", "type": "class", "doc": "<p>Class to handle parsing out the <code>--flags</code> or <code>-f</code></p>\n"}, "arc.command.argument_parser.ParsingMethod.RAW": {"fullname": "arc.command.argument_parser.ParsingMethod.RAW", "modulename": "arc.command.argument_parser", "qualname": "ParsingMethod.RAW", "type": "class", "doc": "<p>Base class for ArgumentParsers</p>\n\n<p>Handles analyzing the provided function signature to generate\nThe Argument data structure</p>\n\n<p>Attempts to match provided data to <code>cls.matchers</code> regexes. If it finds a match,\nit'll pass control over to the match handler (<code>handle_&lt;matcher-name&gt;</code>). This class\nshould not be used to parse anything, as it does not provide any matchers or handlers\nof it's own.</p>\n"}, "arc.command.argument_parser.ParsingMethod.FLAG": {"fullname": "arc.command.argument_parser.ParsingMethod.FLAG", "modulename": "arc.command.argument_parser", "qualname": "ParsingMethod.FLAG", "type": "class", "doc": "<p>Class to handle parsing out the <code>--flags</code> or <code>-f</code></p>\n"}, "arc.command.command": {"fullname": "arc.command.command", "modulename": "arc.command.command", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.command.command.Command": {"fullname": "arc.command.command.Command", "modulename": "arc.command.command", "qualname": "Command", "type": "class", "doc": "<p></p>\n"}, "arc.command.command.Command.__init__": {"fullname": "arc.command.command.Command.__init__", "modulename": "arc.command.command", "qualname": "Command.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name", "function", "parser", "context", "arg_aliases"], "funcdef": "def"}, "arc.command.command.Command.subcommands": {"fullname": "arc.command.command.Command.subcommands", "modulename": "arc.command.command", "qualname": "Command.subcommands", "type": "variable", "doc": "<p></p>\n"}, "arc.command.command.Command.subcommand_aliases": {"fullname": "arc.command.command.Command.subcommand_aliases", "modulename": "arc.command.command", "qualname": "Command.subcommand_aliases", "type": "variable", "doc": "<p></p>\n"}, "arc.command.command.Command.parser": {"fullname": "arc.command.command.Command.parser", "modulename": "arc.command.command", "qualname": "Command.parser", "type": "variable", "doc": "<p></p>\n"}, "arc.command.command.Command.function": {"fullname": "arc.command.command.Command.function", "modulename": "arc.command.command", "qualname": "Command.function", "type": "variable", "doc": "<p></p>\n"}, "arc.command.command.Command.run": {"fullname": "arc.command.command.Command.run", "modulename": "arc.command.command", "qualname": "Command.run", "type": "function", "doc": "<p>External interface to execute a command</p>\n", "parameters": ["self", "_cli_namespace", "cli_args", "context"], "funcdef": "def"}, "arc.command.command.Command.subcommand": {"fullname": "arc.command.command.Command.subcommand", "modulename": "arc.command.command", "qualname": "Command.subcommand", "type": "function", "doc": "<p>Create and install a subcommands</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name (Union[str, list[str], tuple[str, ...]], optional):</strong>  The name to reference\nthis subcommand by. Can optionally be a <code>list</code> of names. In this case,\nthe first in the list will be treated as the \"true\" name, and the others\nwill be treated as aliases. If no value is provided, <code>function.__name__</code> is used</li>\n<li><strong>parsing_method (type[ArgumentParser], optional):</strong>  The way to parse this command's\narguments. <code>ParsingMethod</code> contains constants to reference for each method.\nDefaults to the parsing method of <code>self</code>.</li>\n<li><strong>context (dict[str, Any], optional):</strong>  Special data that will be\npassed to this command (and any subcommands) at runtime. Defaults to None.</li>\n<li><strong>arg_aliases (dict[str, Union[Iterable[str], str]], optional):</strong>  Secondary names\nthat arguments can be referred to by. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Command: the subcommand created</p>\n</blockquote>\n", "parameters": ["self", "name", "parsing_method", "context", "arg_aliases"], "funcdef": "def"}, "arc.command.command.Command.base": {"fullname": "arc.command.command.Command.base", "modulename": "arc.command.command", "qualname": "Command.base", "type": "function", "doc": "<p>Decorator to replace the function\nof the current command</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.command.command.Command.install_commands": {"fullname": "arc.command.command.Command.install_commands", "modulename": "arc.command.command", "qualname": "Command.install_commands", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "commands"], "funcdef": "def"}, "arc.command.command.Command.install_command": {"fullname": "arc.command.command.Command.install_command", "modulename": "arc.command.command", "qualname": "Command.install_command", "type": "function", "doc": "<p>Installs a command object as a subcommand\nof the current object</p>\n", "parameters": ["self", "command"], "funcdef": "def"}, "arc.command.command.Command.handle_command_aliases": {"fullname": "arc.command.command.Command.handle_command_aliases", "modulename": "arc.command.command", "qualname": "Command.handle_command_aliases", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "command_name"], "funcdef": "def"}, "arc.command.command.Command.ensure_function": {"fullname": "arc.command.command.Command.ensure_function", "modulename": "arc.command.command", "qualname": "Command.ensure_function", "type": "function", "doc": "<p>Decorator to insure that multiple commands\ncan be created for the same function.</p>\n", "parameters": ["wrapped"], "funcdef": "def"}, "arc.command.command_executor": {"fullname": "arc.command.command_executor", "modulename": "arc.command.command_executor", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.command.command_executor.CommandExecutor": {"fullname": "arc.command.command_executor.CommandExecutor", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor", "type": "class", "doc": "<p>Handles the execution of a commands's function</p>\n"}, "arc.command.command_executor.CommandExecutor.__init__": {"fullname": "arc.command.command_executor.CommandExecutor.__init__", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "function"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.function": {"fullname": "arc.command.command_executor.CommandExecutor.function", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.function", "type": "variable", "doc": "<p></p>\n"}, "arc.command.command_executor.CommandExecutor.callbacks": {"fullname": "arc.command.command_executor.CommandExecutor.callbacks", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.callbacks", "type": "variable", "doc": "<p></p>\n"}, "arc.command.command_executor.CommandExecutor.non_inheritable": {"fullname": "arc.command.command_executor.CommandExecutor.non_inheritable", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.non_inheritable", "type": "variable", "doc": "<p></p>\n"}, "arc.command.command_executor.CommandExecutor.execute": {"fullname": "arc.command.command_executor.CommandExecutor.execute", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.execute", "type": "function", "doc": "<p>Executes the command's functions</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>arguments (dict[str, Any]):</strong>  Arguments parsed by an <code>ArgumentParser</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Any: What the command's function returns</p>\n</blockquote>\n", "parameters": ["self", "arguments"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"fullname": "arc.command.command_executor.CommandExecutor.inheritable_callbacks", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.inheritable_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.register_callbacks": {"fullname": "arc.command.command_executor.CommandExecutor.register_callbacks", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.register_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "kwargs"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.register_callback": {"fullname": "arc.command.command_executor.CommandExecutor.register_callback", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.register_callback", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "when", "call", "inherit"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.before_callbacks": {"fullname": "arc.command.command_executor.CommandExecutor.before_callbacks", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.before_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "arguments"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.after_callbacks": {"fullname": "arc.command.command_executor.CommandExecutor.after_callbacks", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.after_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.start_around_callbacks": {"fullname": "arc.command.command_executor.CommandExecutor.start_around_callbacks", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.start_around_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "arguments"], "funcdef": "def"}, "arc.command.command_executor.CommandExecutor.end_around_callbacks": {"fullname": "arc.command.command_executor.CommandExecutor.end_around_callbacks", "modulename": "arc.command.command_executor", "qualname": "CommandExecutor.end_around_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.command.context": {"fullname": "arc.command.context", "modulename": "arc.command.context", "qualname": "", "type": "module", "doc": "<h1 id=\"arc-context\">ARC Context</h1>\n\n<p>ARC context enables you to pass data into your function through an argument, without exposing that argument to the external interface.</p>\n\n<p>Context is a dictionary of key-value pairs that you pass when creating the CLI, a namespace, or subcommand. ARC knows what argument to map the context to by specifying the type of the argument to be <code>Context</code></p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span><span class=\"p\">,</span> <span class=\"n\">Context</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">context_example</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">Context</span><span class=\"p\">):</span> <span class=\"c1\"># ctx could be replaced with anything</span>\n     <span class=\"c1\"># can be accessed like a dictionary or an attribute</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">])</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py context_example\n1\n1\n</code></pre>\n\n<p>Note that you cannot overwite the value of <code>ctx</code> from the command line</p>\n\n<pre><code>$ python3 example.py context_example ctx=2\nOption 'ctx' not recognized\n</code></pre>\n\n<h2 id=\"context-propagation\">Context Propagation</h2>\n\n<p>Context can be declared at any level of command decleration, and is passed down from parent commands. At each level, the parent's context and the current context are merged, with the current context taking precedent over the parent's context if keys overlap.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span><span class=\"p\">,</span> <span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">namespace</span>\n\n<span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">namespace</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;test2&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span> <span class=\"c1\"># declare the namespace&#39;s context</span>\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n<span class=\"c1\"># when it&#39;s installed, it</span>\n<span class=\"c1\"># inherits it&#39;s parents context, so foo&#39;s context</span>\n<span class=\"c1\"># would be : {&#39;test&#39;: 1, &#39;test2&#39;: 2}</span>\n<span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">install_command</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># this also inherit&#39;s it&#39;s parent&#39;s context</span>\n<span class=\"c1\"># but overwrites a key</span>\n<span class=\"nd\">@foo</span><span class=\"o\">.</span><span class=\"n\">subcommand</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;test&quot;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">context_example</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">Context</span><span class=\"p\">):</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">test2</span><span class=\"p\">)</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py foo:context_example\n5\n2\n</code></pre>\n\n<h2 id=\"context-inheritance\">Context Inheritance</h2>\n\n<p>Context can also be subclassed for additional functionality.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span><span class=\"p\">,</span> <span class=\"n\">Context</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyContext</span><span class=\"p\">(</span><span class=\"n\">Context</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">punch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;ORA ORA, </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DIO&quot;</span><span class=\"p\">})</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">punch</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">MyContext</span><span class=\"p\">):</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">punch</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py punch\nORA ORA, DIO\n</code></pre>\n\n<h3 id=\"typing\">Typing</h3>\n\n<p>Context Inheritance is also useful for typing your context object for type checkers like <code>mypy</code></p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span><span class=\"p\">,</span> <span class=\"n\">Context</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyContext</span><span class=\"p\">(</span><span class=\"n\">Context</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">(</span><span class=\"n\">contex</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DIO&quot;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">greet</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">MyContext</span><span class=\"p\">):</span>\n    <span class=\"c1\"># mypy will recognize the type of ctx.name</span>\n    <span class=\"c1\"># as string, so the following line will not</span>\n    <span class=\"c1\"># result in an error</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello &quot;</span> <span class=\"o\">+</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre></div>\n"}, "arc.command.context.Context": {"fullname": "arc.command.context.Context", "modulename": "arc.command.context", "qualname": "Context", "type": "class", "doc": "<p>Context object, extends <code>dict</code></p>\n"}, "arc.command.helpers": {"fullname": "arc.command.helpers", "modulename": "arc.command.helpers", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.command.helpers.ParamProxy": {"fullname": "arc.command.helpers.ParamProxy", "modulename": "arc.command.helpers", "qualname": "ParamProxy", "type": "class", "doc": "<p></p>\n"}, "arc.command.helpers.ParamProxy.__init__": {"fullname": "arc.command.helpers.ParamProxy.__init__", "modulename": "arc.command.helpers", "qualname": "ParamProxy.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "param", "annotation"], "funcdef": "def"}, "arc.command.helpers.ArgBuilder": {"fullname": "arc.command.helpers.ArgBuilder", "modulename": "arc.command.helpers", "qualname": "ArgBuilder", "type": "class", "doc": "<p></p>\n"}, "arc.command.helpers.ArgBuilder.__init__": {"fullname": "arc.command.helpers.ArgBuilder.__init__", "modulename": "arc.command.helpers", "qualname": "ArgBuilder.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "function", "arg_aliases"], "funcdef": "def"}, "arc.command.helpers.ArgBuilder.args": {"fullname": "arc.command.helpers.ArgBuilder.args", "modulename": "arc.command.helpers", "qualname": "ArgBuilder.args", "type": "variable", "doc": "<p></p>\n"}, "arc.command.helpers.ArgBuilder.add_arg": {"fullname": "arc.command.helpers.ArgBuilder.add_arg", "modulename": "arc.command.helpers", "qualname": "ArgBuilder.add_arg", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "param"], "funcdef": "def"}, "arc.command.helpers.ArgBuilder.is_hidden_arg": {"fullname": "arc.command.helpers.ArgBuilder.is_hidden_arg", "modulename": "arc.command.helpers", "qualname": "ArgBuilder.is_hidden_arg", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "param"], "funcdef": "def"}, "arc.command.helpers.ArgBuilder.get_meta": {"fullname": "arc.command.helpers.ArgBuilder.get_meta", "modulename": "arc.command.helpers", "qualname": "ArgBuilder.get_meta", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "kwargs"], "funcdef": "def"}, "arc.config": {"fullname": "arc.config", "modulename": "arc.config", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.config.ConfigBase": {"fullname": "arc.config.ConfigBase", "modulename": "arc.config", "qualname": "ConfigBase", "type": "class", "doc": "<p></p>\n"}, "arc.config.ConfigBase.__init__": {"fullname": "arc.config.ConfigBase.__init__", "modulename": "arc.config", "qualname": "ConfigBase.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.config.ConfigBase.ENV_PREFIX": {"fullname": "arc.config.ConfigBase.ENV_PREFIX", "modulename": "arc.config", "qualname": "ConfigBase.ENV_PREFIX", "type": "variable", "doc": "<p></p>\n"}, "arc.config.ConfigBase.last_loaded": {"fullname": "arc.config.ConfigBase.last_loaded", "modulename": "arc.config", "qualname": "ConfigBase.last_loaded", "type": "variable", "doc": "<p></p>\n"}, "arc.config.ConfigBase.from_file": {"fullname": "arc.config.ConfigBase.from_file", "modulename": "arc.config", "qualname": "ConfigBase.from_file", "type": "function", "doc": "<p>Load configuration attributes from a file</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>filename:</strong>  the file to read</li>\n<li><strong>required:</strong>  whether or not a missing file raises an exception</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ArcError:</strong>  if required is <code>True</code> and the file does not exist</li>\n</ul>\n", "parameters": ["self", "filename", "required"], "funcdef": "def"}, "arc.config.ConfigBase.from_env": {"fullname": "arc.config.ConfigBase.from_env", "modulename": "arc.config", "qualname": "ConfigBase.from_env", "type": "function", "doc": "<p>Loads configuration attributes from environment variables</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>prefix:</strong>  an optional common prefix for all env configuration options.\nFor example, if the attribute is <code>mode</code> the prefix is <code>arc_</code> and the\nenviroment variable would be expected to be <code>arc_mode</code></li>\n<li><strong>upper:</strong>  whether to assume that the environment variable is uppercase, defaults\nto <code>True</code></li>\n</ul>\n", "parameters": ["self", "prefix", "upper"], "funcdef": "def"}, "arc.config.ConfigBase.parse": {"fullname": "arc.config.ConfigBase.parse", "modulename": "arc.config", "qualname": "ConfigBase.parse", "type": "function", "doc": "<p>Parses the configuration file</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>lines (list[str]):</strong>  Lines of the file</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>errors.ArcError:</strong>  If the config does not follow a <code>key=value</code> format</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p><code>dict[str, any]</code>: Dictionary of key-value pairs loaded</p>\n</blockquote>\n", "parameters": ["self", "lines"], "funcdef": "def"}, "arc.config.ConfigBase.set_values": {"fullname": "arc.config.ConfigBase.set_values", "modulename": "arc.config", "qualname": "ConfigBase.set_values", "type": "function", "doc": "<p>Handles setting the parsed config data</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>parsed (dict):</strong>  Data returned by <code>parse()</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>errors.ArcError:</strong>  If an item in the dictionary doesn't exist on the config object</li>\n</ul>\n", "parameters": ["self", "parsed"], "funcdef": "def"}, "arc.config.ConfigBase.post_load": {"fullname": "arc.config.ConfigBase.post_load", "modulename": "arc.config", "qualname": "ConfigBase.post_load", "type": "function", "doc": "<p>Executed after a loading a config from file or from env\nfor post-load setup</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.config.Config": {"fullname": "arc.config.Config", "modulename": "arc.config", "qualname": "Config", "type": "class", "doc": "<p>Arc Config object. All arguments have default values,\nso the configuration file is not required by default</p>\n"}, "arc.config.Config.__init__": {"fullname": "arc.config.Config.__init__", "modulename": "arc.config", "qualname": "Config.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "namespace_sep", "arg_assignment", "flag_denoter", "short_flag_denoter", "mode"], "funcdef": "def"}, "arc.config.Config.ENV_PREFIX": {"fullname": "arc.config.Config.ENV_PREFIX", "modulename": "arc.config", "qualname": "Config.ENV_PREFIX", "type": "variable", "doc": "<p></p>\n"}, "arc.config.Config.namespace_sep": {"fullname": "arc.config.Config.namespace_sep", "modulename": "arc.config", "qualname": "Config.namespace_sep", "type": "variable", "doc": "<p>Character to seperate command names: <code>parent:child:granchild</code></p>\n"}, "arc.config.Config.arg_assignment": {"fullname": "arc.config.Config.arg_assignment", "modulename": "arc.config", "qualname": "Config.arg_assignment", "type": "variable", "doc": "<p>Character to seperate argument names from argument values\nwhen parsing via keyword <code>name=value</code></p>\n"}, "arc.config.Config.flag_denoter": {"fullname": "arc.config.Config.flag_denoter", "modulename": "arc.config", "qualname": "Config.flag_denoter", "type": "variable", "doc": "<p>Characters the proceed a flag argument: <code>--flag</code></p>\n"}, "arc.config.Config.short_flag_denoter": {"fullname": "arc.config.Config.short_flag_denoter", "modulename": "arc.config", "qualname": "Config.short_flag_denoter", "type": "variable", "doc": "<p>Characters that proceed a shortened flag <code>-f</code></p>\n"}, "arc.config.Config.mode": {"fullname": "arc.config.Config.mode", "modulename": "arc.config", "qualname": "Config.mode", "type": "variable", "doc": "<p>The current mode of the application, possible values:</p>\n\n<ul>\n<li>production</li>\n<li>development</li>\n<li>test</li>\n</ul>\n"}, "arc.config.Config.mode_map": {"fullname": "arc.config.Config.mode_map", "modulename": "arc.config", "qualname": "Config.mode_map", "type": "variable", "doc": "<p></p>\n"}, "arc.config.config": {"fullname": "arc.config.config", "modulename": "arc.config", "qualname": "config", "type": "variable", "doc": "<p></p>\n"}, "arc.convert": {"fullname": "arc.convert", "modulename": "arc.convert", "qualname": "", "type": "module", "doc": "<h1 id=\"data-types\">Data Types</h1>\n\n<h2 id=\"use\">Use</h2>\n\n<p>Typically, you don't want numbers, booleans, lists, represented as just strings. Arc provides type conversions that will convert the input to your desired type before passing it on to the command. If you've used Flask before, it's URL converters work in essentially the same way. If no type is specified, the input will be left as a string</p>\n\n<p>Check <a href=\"https://github.com/seanrcollings/arc/blob/master/examples/converters.py\">examples/converters.py</a> for full examples</p>\n\n<h1 id=\"builtins\">Builtins</h1>\n\n<p>Arc supports type conversion to these builtin types:</p>\n\n<ul>\n<li><code>int</code></li>\n<li><code>float</code></li>\n<li><code>bool</code></li>\n<li><code>bytes</code></li>\n<li><code>list</code></li>\n<li><code>set</code></li>\n<li><code>tuple</code></li>\n</ul>\n\n<h2 id=\"examples\">Examples</h2>\n\n<h3 id=\"int-conversion\">Int Conversion</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">subcommand</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">number_type</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Prints the type of a number&#39;&#39;&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">))</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py number_type number=5\n&lt;class 'int'&gt;\n</code></pre>\n\n<h3 id=\"float-converion\">Float Converion</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">subcommand</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">float_type</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Prints the type of a float&#39;&#39;&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">))</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py float_type number=5.3\n&lt;class 'float'&gt;\n</code></pre>\n\n<h3 id=\"list-conversion\">List conversion</h3>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">subcommand</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">list_type</span><span class=\"p\">(</span><span class=\"n\">numbers</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Prints the type of a float&#39;&#39;&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">numbers</span><span class=\"p\">)</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py list_type numbers=1,2,3\n&lt;class 'list'&gt;\n[\"1\", \"2\", \"3\"]\n</code></pre>\n\n<p>Collection Types can also be typed generically, to enable each element to be converted. Replace <code>list</code> with <code>list[int]</code> in the example above and then each item will be a integer, rather than a string. This works for <code>set</code> and <code>tuple</code> as well.</p>\n\n<h1 id=\"standard-lib-types\">Standard Lib Types</h1>\n\n<h2 id=\"union-type\">Union Type</h2>\n\n<p>The union type is used to specify that an argument has two or more possible types.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Union</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">subcommand</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">union_type</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Prints the type of a float&#39;&#39;&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">))</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py union_type number=5.3\n&lt;class 'int'&gt;\n\n$ python3 example.py union_type number=somestring\n&lt;class 'str'&gt;\n</code></pre>\n\n<p>Arc will attempt to convert to each type within the union, from left to right, and the first one to succeed will be passed to the command. If none succeed, an error will be raised.</p>\n\n<h2 id=\"path-type\">Path Type</h2>\n\n<p>The Path conversion doesn't perform any validation, but it just offers the convenience of working with path objects rather than strings.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">paint</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">as_posix</span><span class=\"p\">())</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h2 id=\"enum-type\">Enum Type</h2>\n\n<p>You can use the Python standard library Enum to define a specific subset of acceptable values to an argument.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;red&quot;</span>\n    <span class=\"n\">YELLOW</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yellow&quot;</span>\n    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;green&quot;</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">paint</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">Color</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">color</span> <span class=\"o\">==</span> <span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;You painted the walls the bloodiest of reds&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">color</span> <span class=\"o\">==</span> <span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">YELLOW</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;You painted the walls the most fabulous yellow&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;You painted the walls the deepest of blues&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<pre><code>$ python3 example.py paint color=red\nYou painted the walls the bloodiest of reds\n</code></pre>\n\n<p>Since red is a defined value on the <code>Color</code> enumeration.</p>\n\n<h2 id=\"literal-type\">Literal Type</h2>\n\n<p>The literal type can also be used to define a limited subset of values that are acceptable.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Literal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">pick_pain</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s2\">&quot;red&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;green&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;blue&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;yellow&quot;</span><span class=\"p\">]):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;You picked </span><span class=\"si\">{</span><span class=\"n\">color</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h1 id=\"custom-types\">Custom Types</h1>\n\n<h2 id=\"file-type\">File Type</h2>\n\n<p>A file type will take in a file path and return a file handler object</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc.types</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">file_test</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">READ</span><span class=\"p\">]):</span>\n    <span class=\"c1\"># file will be of custom type File, but has the</span>\n    <span class=\"c1\"># same interface as the TextIOWrapper returned by open()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">())</span>\n</code></pre></div>\n\n<p>The format for a File types is File[<FILE_MODE>] with the available file modes being:</p>\n\n<ul>\n<li>READ</li>\n<li>WRITE</li>\n<li>APPEND</li>\n<li>CREATE</li>\n</ul>\n\n<p>Arc should handle the file cleanup process, however if you want to control when the file closes, you can with <code>file.close()</code>. Additionally, the file object implements <code>__enter__</code> and <code>__exit__</code> so can be used as a context manager.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc.types</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">file_test</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">File</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">READ</span><span class=\"p\">]):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">())</span>\n    <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># OR</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">file</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># With either approach, file will defintely be closed at this point</span>\n\n<span class=\"c1\"># unless something goes horribly wrong, once the function finishes execution ARC will close the file for you though.</span>\n</code></pre></div>\n\n<h2 id=\"range-type\">Range Type</h2>\n\n<p>The range type can assure that the user's input is within a specific value range</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Literal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc.types</span> <span class=\"kn\">import</span> <span class=\"n\">Range</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">range_test</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Range</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">Litearl</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]]):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">val</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>The above example will only allows values between 1 and 10 (like the builtin this is inclusive on the minimum end and exclusive on the maximum end). While the type of <code>value</code> will be Range, Range is a subclass of <code>int</code> and so can be treated as such.</p>\n\n<p>There are a couple of useful methods to note on the Range.</p>\n\n<ul>\n<li><code>range</code> - returns a builtin <code>range()</code> with the provided minimums and maximums</li>\n<li><code>range_with_picked</code> - Generator that returns a tuple pair of the value and whether or not that value was the one picked by the user.</li>\n</ul>\n\n<h2 id=\"validpath-type\">ValidPath Type</h2>\n\n<p>Acts like a <code>pathlib.Path</code> object, but validates that the path exists first</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc.types</span> <span class=\"kn\">import</span> <span class=\"n\">ValidPath</span>\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">paint</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">ValidPath</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">as_posix</span><span class=\"p\">())</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h2 id=\"input-data-type-converter-functions\">Input Data Type Converter Functions</h2>\n\n<p>Arc also allows you to use it's converter functionality when gathering user input from within a command</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">arc</span> <span class=\"kn\">import</span> <span class=\"n\">CLI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arc.convert.input</span> <span class=\"kn\">import</span> <span class=\"n\">convert_to_int</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">CLI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">subcommand</span><span class=\"p\">(</span><span class=\"s2\">&quot;example&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n  <span class=\"n\">cool_number</span> <span class=\"o\">=</span> <span class=\"n\">convert_to_int</span><span class=\"p\">(</span><span class=\"s2\">&quot;Please enter a number: &quot;</span><span class=\"p\">)</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">cool_number</span><span class=\"p\">))</span> <span class=\"c1\"># &#39;&lt;class : int&gt;&#39;</span>\n\n<span class=\"n\">cli</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p>Note that all convereters in <code>Config.converter</code> will have a function associated with it. This includes all custom converters. The functions will be named <code>convert_to_&lt;indicator&gt;</code></p>\n\n<p>Note that if the command defines a custom converter, it's respective input function will need to be imported after it is added to <code>Config.converter</code> otherwise it doesn't yet exist to import.</p>\n"}, "arc.convert.convert": {"fullname": "arc.convert.convert", "modulename": "arc.convert", "qualname": "convert", "type": "function", "doc": "<p>Converts the provided string to the provided type</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>value:</strong>  value to convert</li>\n<li><strong>kind:</strong>  type to attempt the convertion to</li>\n<li><strong>name:</strong>  optional descriptive name of the argument</li>\n</ul>\n", "parameters": ["value", "kind", "name"], "funcdef": "def"}, "arc.convert.converters": {"fullname": "arc.convert.converters", "modulename": "arc.convert.converters", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.convert.converters.arc_converters": {"fullname": "arc.convert.converters.arc_converters", "modulename": "arc.convert.converters.arc_converters", "qualname": "", "type": "module", "doc": "<p>Converters For Special Arc Types</p>\n"}, "arc.convert.converters.arc_converters.FileConverter": {"fullname": "arc.convert.converters.arc_converters.FileConverter", "modulename": "arc.convert.converters.arc_converters", "qualname": "FileConverter", "type": "class", "doc": "<p>Converts a string to a file handler object\n/path/to/a/file</p>\n"}, "arc.convert.converters.arc_converters.FileConverter.convert": {"fullname": "arc.convert.converters.arc_converters.FileConverter.convert", "modulename": "arc.convert.converters.arc_converters", "qualname": "FileConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.arc_converters.RangeConverter": {"fullname": "arc.convert.converters.arc_converters.RangeConverter", "modulename": "arc.convert.converters.arc_converters", "qualname": "RangeConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"fullname": "arc.convert.converters.arc_converters.RangeConverter.convert", "modulename": "arc.convert.converters.arc_converters", "qualname": "RangeConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.arc_converters.RangeConverter.range": {"fullname": "arc.convert.converters.arc_converters.RangeConverter.range", "modulename": "arc.convert.converters.arc_converters", "qualname": "RangeConverter.range", "type": "variable", "doc": "<p></p>\n"}, "arc.convert.converters.arc_converters.ValidPathConverter": {"fullname": "arc.convert.converters.arc_converters.ValidPathConverter", "modulename": "arc.convert.converters.arc_converters", "qualname": "ValidPathConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"fullname": "arc.convert.converters.arc_converters.ValidPathConverter.convert", "modulename": "arc.convert.converters.arc_converters", "qualname": "ValidPathConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.base_converter": {"fullname": "arc.convert.converters.base_converter", "modulename": "arc.convert.converters.base_converter", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.convert.converters.base_converter.BaseConverter": {"fullname": "arc.convert.converters.base_converter.BaseConverter", "modulename": "arc.convert.converters.base_converter", "qualname": "BaseConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.base_converter.BaseConverter.annotation": {"fullname": "arc.convert.converters.base_converter.BaseConverter.annotation", "modulename": "arc.convert.converters.base_converter", "qualname": "BaseConverter.annotation", "type": "variable", "doc": "<p></p>\n"}, "arc.convert.converters.base_converter.BaseConverter.convert": {"fullname": "arc.convert.converters.base_converter.BaseConverter.convert", "modulename": "arc.convert.converters.base_converter", "qualname": "BaseConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.builtin_converters": {"fullname": "arc.convert.converters.builtin_converters", "modulename": "arc.convert.converters.builtin_converters", "qualname": "", "type": "module", "doc": "<p>Converters for basic builtin types\nThis module does not include the converters for things like <code>list</code> or <code>tuple</code>\nbecause those converters also handle their generic form (<code>list[int]</code>) and are\nplaced in <code>generic_convertrs.py</code></p>\n"}, "arc.convert.converters.builtin_converters.EmptyConverter": {"fullname": "arc.convert.converters.builtin_converters.EmptyConverter", "modulename": "arc.convert.converters.builtin_converters", "qualname": "EmptyConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"fullname": "arc.convert.converters.builtin_converters.EmptyConverter.convert", "modulename": "arc.convert.converters.builtin_converters", "qualname": "EmptyConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.builtin_converters.StringConverter": {"fullname": "arc.convert.converters.builtin_converters.StringConverter", "modulename": "arc.convert.converters.builtin_converters", "qualname": "StringConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"fullname": "arc.convert.converters.builtin_converters.StringConverter.convert", "modulename": "arc.convert.converters.builtin_converters", "qualname": "StringConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.builtin_converters.IntConverter": {"fullname": "arc.convert.converters.builtin_converters.IntConverter", "modulename": "arc.convert.converters.builtin_converters", "qualname": "IntConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"fullname": "arc.convert.converters.builtin_converters.IntConverter.convert", "modulename": "arc.convert.converters.builtin_converters", "qualname": "IntConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.builtin_converters.FloatConverter": {"fullname": "arc.convert.converters.builtin_converters.FloatConverter", "modulename": "arc.convert.converters.builtin_converters", "qualname": "FloatConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"fullname": "arc.convert.converters.builtin_converters.FloatConverter.convert", "modulename": "arc.convert.converters.builtin_converters", "qualname": "FloatConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.builtin_converters.BytesConverter": {"fullname": "arc.convert.converters.builtin_converters.BytesConverter", "modulename": "arc.convert.converters.builtin_converters", "qualname": "BytesConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"fullname": "arc.convert.converters.builtin_converters.BytesConverter.convert", "modulename": "arc.convert.converters.builtin_converters", "qualname": "BytesConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.builtin_converters.BoolConverter": {"fullname": "arc.convert.converters.builtin_converters.BoolConverter", "modulename": "arc.convert.converters.builtin_converters", "qualname": "BoolConverter", "type": "class", "doc": "<p>Converts a string to a boolean\nTrue / true - True\nFalse / false - False</p>\n"}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"fullname": "arc.convert.converters.builtin_converters.BoolConverter.convert", "modulename": "arc.convert.converters.builtin_converters", "qualname": "BoolConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.converter_mapping": {"fullname": "arc.convert.converters.converter_mapping", "modulename": "arc.convert.converters.converter_mapping", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.convert.converters.converter_mapping.converter_mapping": {"fullname": "arc.convert.converters.converter_mapping.converter_mapping", "modulename": "arc.convert.converters.converter_mapping", "qualname": "converter_mapping", "type": "variable", "doc": "<p></p>\n"}, "arc.convert.converters.converter_mapping.register": {"fullname": "arc.convert.converters.converter_mapping.register", "modulename": "arc.convert.converters.converter_mapping", "qualname": "register", "type": "function", "doc": "<p>Registers decorated <code>cls</code> as the converter for <code>kind</code></p>\n", "parameters": ["kinds"], "funcdef": "def"}, "arc.convert.converters.converter_mapping.get_converter": {"fullname": "arc.convert.converters.converter_mapping.get_converter", "modulename": "arc.convert.converters.converter_mapping", "qualname": "get_converter", "type": "function", "doc": "<p></p>\n", "parameters": ["kind"], "funcdef": "def"}, "arc.convert.converters.generic_converters": {"fullname": "arc.convert.converters.generic_converters", "modulename": "arc.convert.converters.generic_converters", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.convert.converters.generic_converters.GenericConverter": {"fullname": "arc.convert.converters.generic_converters.GenericConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "GenericConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.UnionConverter": {"fullname": "arc.convert.converters.generic_converters.UnionConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "UnionConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"fullname": "arc.convert.converters.generic_converters.UnionConverter.convert", "modulename": "arc.convert.converters.generic_converters", "qualname": "UnionConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.generic_converters.LiteralConverter": {"fullname": "arc.convert.converters.generic_converters.LiteralConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "LiteralConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"fullname": "arc.convert.converters.generic_converters.LiteralConverter.args", "modulename": "arc.convert.converters.generic_converters", "qualname": "LiteralConverter.args", "type": "variable", "doc": "<p></p>\n"}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"fullname": "arc.convert.converters.generic_converters.LiteralConverter.convert", "modulename": "arc.convert.converters.generic_converters", "qualname": "LiteralConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.generic_converters.CollectionConverter": {"fullname": "arc.convert.converters.generic_converters.CollectionConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "CollectionConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"fullname": "arc.convert.converters.generic_converters.CollectionConverter.convert_to", "modulename": "arc.convert.converters.generic_converters", "qualname": "CollectionConverter.convert_to", "type": "variable", "doc": "<p></p>\n"}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"fullname": "arc.convert.converters.generic_converters.CollectionConverter.convert", "modulename": "arc.convert.converters.generic_converters", "qualname": "CollectionConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"fullname": "arc.convert.converters.generic_converters.CollectionConverter.basic_convert", "modulename": "arc.convert.converters.generic_converters", "qualname": "CollectionConverter.basic_convert", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "items"], "funcdef": "def"}, "arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"fullname": "arc.convert.converters.generic_converters.CollectionConverter.generic_convert", "modulename": "arc.convert.converters.generic_converters", "qualname": "CollectionConverter.generic_convert", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "items"], "funcdef": "def"}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"fullname": "arc.convert.converters.generic_converters.MutableCollectionConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "MutableCollectionConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"fullname": "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert", "modulename": "arc.convert.converters.generic_converters", "qualname": "MutableCollectionConverter.generic_convert", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "items"], "funcdef": "def"}, "arc.convert.converters.generic_converters.ListConverter": {"fullname": "arc.convert.converters.generic_converters.ListConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "ListConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"fullname": "arc.convert.converters.generic_converters.ListConverter.convert_to", "modulename": "arc.convert.converters.generic_converters", "qualname": "ListConverter.convert_to", "type": "class", "doc": "<p>Built-in mutable sequence.</p>\n\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.</p>\n"}, "arc.convert.converters.generic_converters.SetConverter": {"fullname": "arc.convert.converters.generic_converters.SetConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "SetConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"fullname": "arc.convert.converters.generic_converters.SetConverter.convert_to", "modulename": "arc.convert.converters.generic_converters", "qualname": "SetConverter.convert_to", "type": "class", "doc": "<p>set() -> new empty set object\nset(iterable) -> new set object</p>\n\n<p>Build an unordered collection of unique elements.</p>\n"}, "arc.convert.converters.generic_converters.TupleConverter": {"fullname": "arc.convert.converters.generic_converters.TupleConverter", "modulename": "arc.convert.converters.generic_converters", "qualname": "TupleConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"fullname": "arc.convert.converters.generic_converters.TupleConverter.convert_to", "modulename": "arc.convert.converters.generic_converters", "qualname": "TupleConverter.convert_to", "type": "class", "doc": "<p>Built-in immutable sequence.</p>\n\n<p>If no argument is given, the constructor returns an empty tuple.\nIf iterable is specified the tuple is initialized from iterable's items.</p>\n\n<p>If the argument is a tuple, the return value is the same object.</p>\n"}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"fullname": "arc.convert.converters.generic_converters.TupleConverter.generic_convert", "modulename": "arc.convert.converters.generic_converters", "qualname": "TupleConverter.generic_convert", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "items"], "funcdef": "def"}, "arc.convert.converters.lib_converters": {"fullname": "arc.convert.converters.lib_converters", "modulename": "arc.convert.converters.lib_converters", "qualname": "", "type": "module", "doc": "<p>Converters for types in the Standard Library</p>\n"}, "arc.convert.converters.lib_converters.EnumConverter": {"fullname": "arc.convert.converters.lib_converters.EnumConverter", "modulename": "arc.convert.converters.lib_converters", "qualname": "EnumConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"fullname": "arc.convert.converters.lib_converters.EnumConverter.convert", "modulename": "arc.convert.converters.lib_converters", "qualname": "EnumConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.converters.lib_converters.PathConverter": {"fullname": "arc.convert.converters.lib_converters.PathConverter", "modulename": "arc.convert.converters.lib_converters", "qualname": "PathConverter", "type": "class", "doc": "<p>Base Converter, all converters must inherit from this converter</p>\n"}, "arc.convert.converters.lib_converters.PathConverter.convert": {"fullname": "arc.convert.converters.lib_converters.PathConverter.convert", "modulename": "arc.convert.converters.lib_converters", "qualname": "PathConverter.convert", "type": "function", "doc": "<p>Method that converts the string sent, to it's desired type.</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.convert.input": {"fullname": "arc.convert.input", "modulename": "arc.convert.input", "qualname": "", "type": "module", "doc": "<p>Provides helper functions to trigger each arc Converter.\n<strong>Will be removed in favor of a wrapper around <code>convert.convert()</code></strong></p>\n"}, "arc.convert.input.base_input_func": {"fullname": "arc.convert.input.base_input_func", "modulename": "arc.convert.input", "qualname": "base_input_func", "type": "function", "doc": "<p></p>\n", "parameters": ["prompt", "converter"], "funcdef": "def"}, "arc.convert.input.input_to_TextIO": {"fullname": "arc.convert.input.input_to_TextIO", "modulename": "arc.convert.input", "qualname": "input_to_TextIO", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_IO": {"fullname": "arc.convert.input.input_to_IO", "modulename": "arc.convert.input", "qualname": "input_to_IO", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_BinaryIO": {"fullname": "arc.convert.input.input_to_BinaryIO", "modulename": "arc.convert.input", "qualname": "input_to_BinaryIO", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_str": {"fullname": "arc.convert.input.input_to_str", "modulename": "arc.convert.input", "qualname": "input_to_str", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_int": {"fullname": "arc.convert.input.input_to_int", "modulename": "arc.convert.input", "qualname": "input_to_int", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_float": {"fullname": "arc.convert.input.input_to_float", "modulename": "arc.convert.input", "qualname": "input_to_float", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_bytes": {"fullname": "arc.convert.input.input_to_bytes", "modulename": "arc.convert.input", "qualname": "input_to_bytes", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_bool": {"fullname": "arc.convert.input.input_to_bool", "modulename": "arc.convert.input", "qualname": "input_to_bool", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_Enum": {"fullname": "arc.convert.input.input_to_Enum", "modulename": "arc.convert.input", "qualname": "input_to_Enum", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_Path": {"fullname": "arc.convert.input.input_to_Path", "modulename": "arc.convert.input", "qualname": "input_to_Path", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_File": {"fullname": "arc.convert.input.input_to_File", "modulename": "arc.convert.input", "qualname": "input_to_File", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_Range": {"fullname": "arc.convert.input.input_to_Range", "modulename": "arc.convert.input", "qualname": "input_to_Range", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_ValidPath": {"fullname": "arc.convert.input.input_to_ValidPath", "modulename": "arc.convert.input", "qualname": "input_to_ValidPath", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_list": {"fullname": "arc.convert.input.input_to_list", "modulename": "arc.convert.input", "qualname": "input_to_list", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_set": {"fullname": "arc.convert.input.input_to_set", "modulename": "arc.convert.input", "qualname": "input_to_set", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.convert.input.input_to_tuple": {"fullname": "arc.convert.input.input_to_tuple", "modulename": "arc.convert.input", "qualname": "input_to_tuple", "type": "function", "doc": "<p></p>\n", "parameters": ["p", "c"], "funcdef": "def"}, "arc.errors": {"fullname": "arc.errors", "modulename": "arc.errors", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.errors.ArcError": {"fullname": "arc.errors.ArcError", "modulename": "arc.errors", "qualname": "ArcError", "type": "class", "doc": "<p>Base Arc Exception</p>\n"}, "arc.errors.ArcError.__init__": {"fullname": "arc.errors.ArcError.__init__", "modulename": "arc.errors", "qualname": "ArcError.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "args"], "funcdef": "def"}, "arc.errors.ExecutionError": {"fullname": "arc.errors.ExecutionError", "modulename": "arc.errors", "qualname": "ExecutionError", "type": "class", "doc": "<p>Raised if there is a problem during the execution of a command</p>\n"}, "arc.errors.NoOpError": {"fullname": "arc.errors.NoOpError", "modulename": "arc.errors", "qualname": "NoOpError", "type": "class", "doc": "<p>Sepcial Execution to raise when\nthe specific namespace CANT be executed</p>\n"}, "arc.errors.CommandError": {"fullname": "arc.errors.CommandError", "modulename": "arc.errors", "qualname": "CommandError", "type": "class", "doc": "<p>Raised when there is an error in the creation of a command</p>\n"}, "arc.errors.ValidationError": {"fullname": "arc.errors.ValidationError", "modulename": "arc.errors", "qualname": "ValidationError", "type": "class", "doc": "<p>Raised when there is an error in validating command input or in a validator callback</p>\n"}, "arc.errors.ActionError": {"fullname": "arc.errors.ActionError", "modulename": "arc.errors", "qualname": "ActionError", "type": "class", "doc": "<p>Raised when a action callback fails to execute</p>\n"}, "arc.errors.TokenizerError": {"fullname": "arc.errors.TokenizerError", "modulename": "arc.errors", "qualname": "TokenizerError", "type": "class", "doc": "<p>Base Arc Exception</p>\n"}, "arc.errors.TokenizerError.__init__": {"fullname": "arc.errors.TokenizerError.__init__", "modulename": "arc.errors", "qualname": "TokenizerError.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "token", "mode"], "funcdef": "def"}, "arc.errors.ParserError": {"fullname": "arc.errors.ParserError", "modulename": "arc.errors", "qualname": "ParserError", "type": "class", "doc": "<p>Raised when there is an error parsing the token stream</p>\n"}, "arc.errors.ConversionError": {"fullname": "arc.errors.ConversionError", "modulename": "arc.errors", "qualname": "ConversionError", "type": "class", "doc": "<p>Raised if a type conversion fails</p>\n"}, "arc.errors.ConversionError.__init__": {"fullname": "arc.errors.ConversionError.__init__", "modulename": "arc.errors", "qualname": "ConversionError.__init__", "type": "function", "doc": "<p>Initializes the conversion errors\n:param value: the value attempting to be converted\n:param expected: string describing what the value should be\n:param helper_text: any additional helper text for the user</p>\n", "parameters": ["self", "value", "expected", "helper_text"], "funcdef": "def"}, "arc.help_text": {"fullname": "arc.help_text", "modulename": "arc.help_text", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.help_text.display_help": {"fullname": "arc.help_text.display_help", "modulename": "arc.help_text", "qualname": "display_help", "type": "function", "doc": "<p></p>\n", "parameters": ["root", "command", "namespace"], "funcdef": "def"}, "arc.help_text.generate_help": {"fullname": "arc.help_text.generate_help", "modulename": "arc.help_text", "qualname": "generate_help", "type": "function", "doc": "<p></p>\n", "parameters": ["root", "command", "namespace"], "funcdef": "def"}, "arc.present": {"fullname": "arc.present", "modulename": "arc.present", "qualname": "", "type": "module", "doc": "<p>Provides a series of helper utilities for displaying information to the user</p>\n"}, "arc.present.box": {"fullname": "arc.present.box", "modulename": "arc.present.box", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.present.box.Box": {"fullname": "arc.present.box.Box", "modulename": "arc.present.box", "qualname": "Box", "type": "class", "doc": "<p>Presenter for creating a Box around provided text</p>\n\n<p>Examples:</p>\n\n<pre><code>    print(Box('some cool text', padding=2, justify='center')) -&gt;\n\n    \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n    \u2502                    \u2502\n    \u2502                    \u2502\n    \u2502   some cool text   \u2502\n    \u2502                    \u2502\n    \u2502                    \u2502\n    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>\n\n<p>Will accept colorized strings</p>\n"}, "arc.present.box.Box.__init__": {"fullname": "arc.present.box.Box.__init__", "modulename": "arc.present.box", "qualname": "Box.__init__", "type": "function", "doc": "<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>string:</strong>  String to surround with a box - May be colored</li>\n<li><strong>border:</strong>  Border style, either 'regular' or 'heavy' defaults to 'regular</li>\n<li><strong>padding:</strong>  Dictionary containing the padding of each side of the string\ndefaults to: <code>{\"top\": 0, \"left\": 0, \"bottom\": 0, \"right\": 0}</code>\nIf all sides are going to have the same padding, can just pass\nin that integer, rather than the entire dictionary</li>\n<li><strong>justify:</strong>  how to justify the text (left, center, right). Defaults to left</li>\n<li><strong>color:</strong>  What color the border should be. Defaults to white.\nUse <code>arc.color.fg</code> constants</li>\n</ul>\n", "parameters": ["self", "string", "border", "padding", "justify", "color"], "funcdef": "def"}, "arc.present.box.Box.border": {"fullname": "arc.present.box.Box.border", "modulename": "arc.present.box", "qualname": "Box.border", "type": "variable", "doc": "<p>Dictionary containting the border stylings</p>\n"}, "arc.present.box.Box.horizontal_border": {"fullname": "arc.present.box.Box.horizontal_border", "modulename": "arc.present.box", "qualname": "Box.horizontal_border", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "width", "side"], "funcdef": "def"}, "arc.present.box.Box.format_line": {"fullname": "arc.present.box.Box.format_line", "modulename": "arc.present.box", "qualname": "Box.format_line", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "line", "width", "cleaned"], "funcdef": "def"}, "arc.present.box.Box.pad_line": {"fullname": "arc.present.box.Box.pad_line", "modulename": "arc.present.box", "qualname": "Box.pad_line", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "line"], "funcdef": "def"}, "arc.present.data": {"fullname": "arc.present.data", "modulename": "arc.present.data", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.present.loaders": {"fullname": "arc.present.loaders", "modulename": "arc.present.loaders", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.present.loaders.Styler": {"fullname": "arc.present.loaders.Styler", "modulename": "arc.present.loaders", "qualname": "Styler", "type": "class", "doc": "<p>Base Class for Stylers</p>\n"}, "arc.present.loaders.Styler.__init__": {"fullname": "arc.present.loaders.Styler.__init__", "modulename": "arc.present.loaders", "qualname": "Styler.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.present.loaders.Styler.style_full": {"fullname": "arc.present.loaders.Styler.style_full", "modulename": "arc.present.loaders", "qualname": "Styler.style_full", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "string", "index", "loader"], "funcdef": "def"}, "arc.present.loaders.Styler.style_empty": {"fullname": "arc.present.loaders.Styler.style_empty", "modulename": "arc.present.loaders", "qualname": "Styler.style_empty", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "string", "index", "loader"], "funcdef": "def"}, "arc.present.loaders.default": {"fullname": "arc.present.loaders.default", "modulename": "arc.present.loaders", "qualname": "default", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Transiton": {"fullname": "arc.present.loaders.Transiton", "modulename": "arc.present.loaders", "qualname": "Transiton", "type": "class", "doc": "<p>Base Class for Stylers</p>\n"}, "arc.present.loaders.Transiton.__init__": {"fullname": "arc.present.loaders.Transiton.__init__", "modulename": "arc.present.loaders", "qualname": "Transiton.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "from_c", "to_c"], "funcdef": "def"}, "arc.present.loaders.Transiton.style_full": {"fullname": "arc.present.loaders.Transiton.style_full", "modulename": "arc.present.loaders", "qualname": "Transiton.style_full", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "string", "index", "loader"], "funcdef": "def"}, "arc.present.loaders.Loader": {"fullname": "arc.present.loaders.Loader", "modulename": "arc.present.loaders", "qualname": "Loader", "type": "class", "doc": "<p></p>\n"}, "arc.present.loaders.Loader.__init__": {"fullname": "arc.present.loaders.Loader.__init__", "modulename": "arc.present.loaders", "qualname": "Loader.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "start", "segments", "format_str", "styler"], "funcdef": "def"}, "arc.present.loaders.Loader.progress": {"fullname": "arc.present.loaders.Loader.progress", "modulename": "arc.present.loaders", "qualname": "Loader.progress", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Loader.segments": {"fullname": "arc.present.loaders.Loader.segments", "modulename": "arc.present.loaders", "qualname": "Loader.segments", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Loader.format_str": {"fullname": "arc.present.loaders.Loader.format_str", "modulename": "arc.present.loaders", "qualname": "Loader.format_str", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Loader.styler": {"fullname": "arc.present.loaders.Loader.styler", "modulename": "arc.present.loaders", "qualname": "Loader.styler", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Loader.done": {"fullname": "arc.present.loaders.Loader.done", "modulename": "arc.present.loaders", "qualname": "Loader.done", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Loader.percent": {"fullname": "arc.present.loaders.Loader.percent", "modulename": "arc.present.loaders", "qualname": "Loader.percent", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Loader.render": {"fullname": "arc.present.loaders.Loader.render", "modulename": "arc.present.loaders", "qualname": "Loader.render", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.present.loaders.Loader.update": {"fullname": "arc.present.loaders.Loader.update", "modulename": "arc.present.loaders", "qualname": "Loader.update", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.present.loaders.Loader.print": {"fullname": "arc.present.loaders.Loader.print", "modulename": "arc.present.loaders", "qualname": "Loader.print", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.present.loaders.Loader.clear": {"fullname": "arc.present.loaders.Loader.clear", "modulename": "arc.present.loaders", "qualname": "Loader.clear", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.present.loaders.BarLoader": {"fullname": "arc.present.loaders.BarLoader", "modulename": "arc.present.loaders", "qualname": "BarLoader", "type": "class", "doc": "<p></p>\n"}, "arc.present.loaders.BarLoader.__init__": {"fullname": "arc.present.loaders.BarLoader.__init__", "modulename": "arc.present.loaders", "qualname": "BarLoader.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "full", "empty", "args", "kwargs"], "funcdef": "def"}, "arc.present.loaders.BarLoader.FULL": {"fullname": "arc.present.loaders.BarLoader.FULL", "modulename": "arc.present.loaders", "qualname": "BarLoader.FULL", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.BarLoader.EMPTY": {"fullname": "arc.present.loaders.BarLoader.EMPTY", "modulename": "arc.present.loaders", "qualname": "BarLoader.EMPTY", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.BarLoader.render": {"fullname": "arc.present.loaders.BarLoader.render", "modulename": "arc.present.loaders", "qualname": "BarLoader.render", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.present.loaders.SlantLoader": {"fullname": "arc.present.loaders.SlantLoader", "modulename": "arc.present.loaders", "qualname": "SlantLoader", "type": "class", "doc": "<p></p>\n"}, "arc.present.loaders.SlantLoader.FULL": {"fullname": "arc.present.loaders.SlantLoader.FULL", "modulename": "arc.present.loaders", "qualname": "SlantLoader.FULL", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.SlantLoader.EMPTY": {"fullname": "arc.present.loaders.SlantLoader.EMPTY", "modulename": "arc.present.loaders", "qualname": "SlantLoader.EMPTY", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.RectangleLoader": {"fullname": "arc.present.loaders.RectangleLoader", "modulename": "arc.present.loaders", "qualname": "RectangleLoader", "type": "class", "doc": "<p></p>\n"}, "arc.present.loaders.RectangleLoader.FULL": {"fullname": "arc.present.loaders.RectangleLoader.FULL", "modulename": "arc.present.loaders", "qualname": "RectangleLoader.FULL", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.RectangleLoader.EMPTY": {"fullname": "arc.present.loaders.RectangleLoader.EMPTY", "modulename": "arc.present.loaders", "qualname": "RectangleLoader.EMPTY", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Pacman": {"fullname": "arc.present.loaders.Pacman", "modulename": "arc.present.loaders", "qualname": "Pacman", "type": "class", "doc": "<p></p>\n"}, "arc.present.loaders.Pacman.__init__": {"fullname": "arc.present.loaders.Pacman.__init__", "modulename": "arc.present.loaders", "qualname": "Pacman.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "args", "kwargs"], "funcdef": "def"}, "arc.present.loaders.Pacman.FULL": {"fullname": "arc.present.loaders.Pacman.FULL", "modulename": "arc.present.loaders", "qualname": "Pacman.FULL", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Pacman.EMPTY": {"fullname": "arc.present.loaders.Pacman.EMPTY", "modulename": "arc.present.loaders", "qualname": "Pacman.EMPTY", "type": "variable", "doc": "<p></p>\n"}, "arc.present.loaders.Pacman.pacman": {"fullname": "arc.present.loaders.Pacman.pacman", "modulename": "arc.present.loaders", "qualname": "Pacman.pacman", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.present.loaders.Pacman.update": {"fullname": "arc.present.loaders.Pacman.update", "modulename": "arc.present.loaders", "qualname": "Pacman.update", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "value"], "funcdef": "def"}, "arc.present.table": {"fullname": "arc.present.table", "modulename": "arc.present.table", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.present.table.ColumnBase": {"fullname": "arc.present.table.ColumnBase", "modulename": "arc.present.table", "qualname": "ColumnBase", "type": "class", "doc": "<p>ColumnBase Type</p>\n"}, "arc.present.table.ColumnBase.name": {"fullname": "arc.present.table.ColumnBase.name", "modulename": "arc.present.table", "qualname": "ColumnBase.name", "type": "variable", "doc": "<p></p>\n"}, "arc.present.table.Column": {"fullname": "arc.present.table.Column", "modulename": "arc.present.table", "qualname": "Column", "type": "class", "doc": "<p>Column Type</p>\n"}, "arc.present.table.Column.justify": {"fullname": "arc.present.table.Column.justify", "modulename": "arc.present.table", "qualname": "Column.justify", "type": "variable", "doc": "<p></p>\n"}, "arc.present.table.Column.width": {"fullname": "arc.present.table.Column.width", "modulename": "arc.present.table", "qualname": "Column.width", "type": "variable", "doc": "<p></p>\n"}, "arc.present.table.Column.name": {"fullname": "arc.present.table.Column.name", "modulename": "arc.present.table", "qualname": "Column.name", "type": "variable", "doc": "<p></p>\n"}, "arc.present.table.DEFAULT_COLUMN": {"fullname": "arc.present.table.DEFAULT_COLUMN", "modulename": "arc.present.table", "qualname": "DEFAULT_COLUMN", "type": "variable", "doc": "<p></p>\n"}, "arc.present.table.Table": {"fullname": "arc.present.table.Table", "modulename": "arc.present.table", "qualname": "Table", "type": "class", "doc": "<p>Present data in a table-like format</p>\n"}, "arc.present.table.Table.__init__": {"fullname": "arc.present.table.Table.__init__", "modulename": "arc.present.table", "qualname": "Table.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "columns", "rows", "format_column", "format_cell"], "funcdef": "def"}, "arc.present.table.Table.formatter": {"fullname": "arc.present.table.Table.formatter", "modulename": "arc.present.table", "qualname": "Table.formatter", "type": "function", "doc": "<p></p>\n", "parameters": ["string", "width", "align", "tcolor", "bcolor", "style"], "funcdef": "def"}, "arc.present.table.Table.resize_columns": {"fullname": "arc.present.table.Table.resize_columns", "modulename": "arc.present.table", "qualname": "Table.resize_columns", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "pad"], "funcdef": "def"}, "arc.prompt": {"fullname": "arc.prompt", "modulename": "arc.prompt", "qualname": "", "type": "module", "doc": "<p>Provides classes to ask the users questions, and recieve back their answers</p>\n"}, "arc.prompt.confirm": {"fullname": "arc.prompt.confirm", "modulename": "arc.prompt", "qualname": "confirm", "type": "function", "doc": "<p>Request a Y/N answer from the user</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>message (str):</strong>  Message to display to the user</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>bool: The user's answer to the question</p>\n</blockquote>\n", "parameters": ["message", "args", "kwargs"], "funcdef": "def"}, "arc.prompt.helpers": {"fullname": "arc.prompt.helpers", "modulename": "arc.prompt.helpers", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.prompt.helpers.clear_line": {"fullname": "arc.prompt.helpers.clear_line", "modulename": "arc.prompt.helpers", "qualname": "clear_line", "type": "function", "doc": "<p></p>\n", "parameters": ["amount"], "funcdef": "def"}, "arc.prompt.helpers.write": {"fullname": "arc.prompt.helpers.write", "modulename": "arc.prompt.helpers", "qualname": "write", "type": "function", "doc": "<p></p>\n", "parameters": ["string"], "funcdef": "def"}, "arc.prompt.prompt": {"fullname": "arc.prompt.prompt", "modulename": "arc.prompt.prompt", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.prompt.prompt.Prompt": {"fullname": "arc.prompt.prompt.Prompt", "modulename": "arc.prompt.prompt", "qualname": "Prompt", "type": "class", "doc": "<p>Core class to the <code>prompt</code> package.</p>\n\n<h6 id=\"usage\">Usage</h6>\n\n<blockquote>\n  <div class=\"codehilite\"><pre><span></span><code><span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"n\">Prompt</span><span class=\"p\">()</span>\n<span class=\"n\">question</span> <span class=\"o\">=</span> <span class=\"n\">MultipleChoiceQuestion</span><span class=\"p\">([</span><span class=\"s2\">&quot;Chocolate&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Vanilla&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Strawberry&quot;</span><span class=\"p\">])</span>\n<span class=\"n\">prompt</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"s2\">&quot;What&#39;s you favorite ice cream flavor?&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n  \n  <p>Would result in a prompt like:</p>\n\n<pre><code>What's you favorite ice cream flavor?\n[0] Chocolate\n[1] Vanilla\n[2] Strawberry\n\n&gt;\n</code></pre>\n</blockquote>\n"}, "arc.prompt.prompt.Prompt.__init__": {"fullname": "arc.prompt.prompt.Prompt.__init__", "modulename": "arc.prompt.prompt", "qualname": "Prompt.__init__", "type": "function", "doc": "<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>prompt (str, optional):</strong>  What to display before the cursor when\nasking a question. Defaults to <code>'&gt; '</code></li>\n<li><strong>show_emojis (bool, optional):</strong>  Whether or not to display the\nicons / emojis when printing messages with the display\nmethods below. Defaults to True.</li>\n<li><strong>color_output (bool, optional):</strong>  [description]. Whether or not\ndo color the output of each of the display methods below.\nDefaults to True.</li>\n</ul>\n", "parameters": ["self", "prompt", "show_emojis", "color_output"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.previous_answers": {"fullname": "arc.prompt.prompt.Prompt.previous_answers", "modulename": "arc.prompt.prompt", "qualname": "Prompt.previous_answers", "type": "variable", "doc": "<p>All questions asked by this Prompt\nhave their answers stored in here</p>\n"}, "arc.prompt.prompt.Prompt.ask": {"fullname": "arc.prompt.prompt.Prompt.ask", "modulename": "arc.prompt.prompt", "qualname": "Prompt.ask", "type": "function", "doc": "<p>Ask a question</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>question (Question[V]):</strong>  Question object to ask. Each question\nobject handles it's rendering and answering differently</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>V: The type that the particular Question returns</p>\n</blockquote>\n", "parameters": ["self", "question"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.confirm": {"fullname": "arc.prompt.prompt.Prompt.confirm", "modulename": "arc.prompt.prompt", "qualname": "Prompt.confirm", "type": "function", "doc": "<p>Request a Y/N answer from the user</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>desc (str):</strong>  Message to display to the user</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>bool: The user's answer to the question</p>\n</blockquote>\n", "parameters": ["self", "args", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.input": {"fullname": "arc.prompt.prompt.Prompt.input", "modulename": "arc.prompt.prompt", "qualname": "Prompt.input", "type": "function", "doc": "<p>Gather input from the user_input</p>\n\n<p>Is an alias for the <code>InputQuestion</code> type</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>desc (str):</strong>  Message to display to the user</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>str: The user's input</p>\n</blockquote>\n", "parameters": ["self", "args", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.beautify": {"fullname": "arc.prompt.prompt.Prompt.beautify", "modulename": "arc.prompt.prompt", "qualname": "Prompt.beautify", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "message", "color", "emoji", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.error": {"fullname": "arc.prompt.prompt.Prompt.error", "modulename": "arc.prompt.prompt", "qualname": "Prompt.error", "type": "function", "doc": "<p>Display an error message to the user</p>\n", "parameters": ["self", "message", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.ok": {"fullname": "arc.prompt.prompt.Prompt.ok", "modulename": "arc.prompt.prompt", "qualname": "Prompt.ok", "type": "function", "doc": "<p>Display a successful message to the user</p>\n", "parameters": ["self", "message", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.no": {"fullname": "arc.prompt.prompt.Prompt.no", "modulename": "arc.prompt.prompt", "qualname": "Prompt.no", "type": "function", "doc": "<p>Display an unsuccessful message to the user</p>\n", "parameters": ["self", "message", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.act": {"fullname": "arc.prompt.prompt.Prompt.act", "modulename": "arc.prompt.prompt", "qualname": "Prompt.act", "type": "function", "doc": "<p>Display an action message to the user</p>\n", "parameters": ["self", "message", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.warn": {"fullname": "arc.prompt.prompt.Prompt.warn", "modulename": "arc.prompt.prompt", "qualname": "Prompt.warn", "type": "function", "doc": "<p>Display a warning message to the user</p>\n", "parameters": ["self", "message", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.subtle": {"fullname": "arc.prompt.prompt.Prompt.subtle", "modulename": "arc.prompt.prompt", "qualname": "Prompt.subtle", "type": "function", "doc": "<p>\"Display a subtle (light grey) message to the user</p>\n", "parameters": ["self", "message", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.snake": {"fullname": "arc.prompt.prompt.Prompt.snake", "modulename": "arc.prompt.prompt", "qualname": "Prompt.snake", "type": "function", "doc": "<p>Display a Pythonic message to the user</p>\n", "parameters": ["self", "message", "kwargs"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.emoji": {"fullname": "arc.prompt.prompt.Prompt.emoji", "modulename": "arc.prompt.prompt", "qualname": "Prompt.emoji", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "emoji"], "funcdef": "def"}, "arc.prompt.prompt.Prompt.colored": {"fullname": "arc.prompt.prompt.Prompt.colored", "modulename": "arc.prompt.prompt", "qualname": "Prompt.colored", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "color"], "funcdef": "def"}, "arc.prompt.questions": {"fullname": "arc.prompt.questions", "modulename": "arc.prompt.questions", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.prompt.questions.is_int": {"fullname": "arc.prompt.questions.is_int", "modulename": "arc.prompt.questions", "qualname": "is_int", "type": "function", "doc": "<p>Asserts that the given answer is a number.\nIf it is a number, cast to an int and call\nthe decorated function.</p>\n", "parameters": ["f"], "funcdef": "def"}, "arc.prompt.questions.is_list": {"fullname": "arc.prompt.questions.is_list", "modulename": "arc.prompt.questions", "qualname": "is_list", "type": "function", "doc": "<p>Splits the answer on commas</p>\n", "parameters": ["f"], "funcdef": "def"}, "arc.prompt.questions.QuestionError": {"fullname": "arc.prompt.questions.QuestionError", "modulename": "arc.prompt.questions", "qualname": "QuestionError", "type": "class", "doc": "<p>Base Arc Exception</p>\n"}, "arc.prompt.questions.Question": {"fullname": "arc.prompt.questions.Question", "modulename": "arc.prompt.questions", "qualname": "Question", "type": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n"}, "arc.prompt.questions.Question.multi_line": {"fullname": "arc.prompt.questions.Question.multi_line", "modulename": "arc.prompt.questions", "qualname": "Question.multi_line", "type": "variable", "doc": "<p></p>\n"}, "arc.prompt.questions.Question.sensitive": {"fullname": "arc.prompt.questions.Question.sensitive", "modulename": "arc.prompt.questions", "qualname": "Question.sensitive", "type": "variable", "doc": "<p>Sensitive questions are those  who's answer\nshouldn't be echoed to the terminal like passwords</p>\n"}, "arc.prompt.questions.Question.render": {"fullname": "arc.prompt.questions.Question.render", "modulename": "arc.prompt.questions", "qualname": "Question.render", "type": "function", "doc": "<p>Returns a string repersentation of the question</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.prompt.questions.Question.handle_answer": {"fullname": "arc.prompt.questions.Question.handle_answer", "modulename": "arc.prompt.questions", "qualname": "Question.handle_answer", "type": "function", "doc": "<p>Handles the user's input for the question</p>\n", "parameters": ["self", "answer"], "funcdef": "def"}, "arc.prompt.questions.InputQuestion": {"fullname": "arc.prompt.questions.InputQuestion", "modulename": "arc.prompt.questions", "qualname": "InputQuestion", "type": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n"}, "arc.prompt.questions.InputQuestion.__init__": {"fullname": "arc.prompt.questions.InputQuestion.__init__", "modulename": "arc.prompt.questions", "qualname": "InputQuestion.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "desc", "empty", "sensitive", "multi_line"], "funcdef": "def"}, "arc.prompt.questions.InputQuestion.render": {"fullname": "arc.prompt.questions.InputQuestion.render", "modulename": "arc.prompt.questions", "qualname": "InputQuestion.render", "type": "function", "doc": "<p>Returns a string repersentation of the question</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.prompt.questions.InputQuestion.handle_answer": {"fullname": "arc.prompt.questions.InputQuestion.handle_answer", "modulename": "arc.prompt.questions", "qualname": "InputQuestion.handle_answer", "type": "function", "doc": "<p>Handles the user's input for the question</p>\n", "parameters": ["self", "answer"], "funcdef": "def"}, "arc.prompt.questions.MultipleChoiceQuestion": {"fullname": "arc.prompt.questions.MultipleChoiceQuestion", "modulename": "arc.prompt.questions", "qualname": "MultipleChoiceQuestion", "type": "class", "doc": "<p>Question with multiple possible options</p>\n\n<pre><code>MultipleChoiceQuestion([\"Option 1\", \"Option 2\", \"Option 3\",])\n[0] Option 1\n[1] Option 2\n[3] Option 3\n</code></pre>\n\n<p>if <code>multiple_answer = True</code>, the user can choose multiple options (1,2,3)</p>\n"}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"fullname": "arc.prompt.questions.MultipleChoiceQuestion.__init__", "modulename": "arc.prompt.questions", "qualname": "MultipleChoiceQuestion.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "desc", "choices", "multiple_answer"], "funcdef": "def"}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"fullname": "arc.prompt.questions.MultipleChoiceQuestion.render", "modulename": "arc.prompt.questions", "qualname": "MultipleChoiceQuestion.render", "type": "function", "doc": "<p>Returns a string repersentation of the question</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"fullname": "arc.prompt.questions.MultipleChoiceQuestion.handle_answer", "modulename": "arc.prompt.questions", "qualname": "MultipleChoiceQuestion.handle_answer", "type": "function", "doc": "<p>Handles the user's input for the question</p>\n", "parameters": ["self", "answer"], "funcdef": "def"}, "arc.prompt.questions.RangeQuestion": {"fullname": "arc.prompt.questions.RangeQuestion", "modulename": "arc.prompt.questions", "qualname": "RangeQuestion", "type": "class", "doc": "<p>Question for a number in a given range</p>\n"}, "arc.prompt.questions.RangeQuestion.__init__": {"fullname": "arc.prompt.questions.RangeQuestion.__init__", "modulename": "arc.prompt.questions", "qualname": "RangeQuestion.__init__", "type": "function", "doc": "<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>min:</strong>  the smallest number possible</li>\n<li><strong>max:</strong>  the largest  number possible</li>\n</ul>\n", "parameters": ["self", "desc", "min", "max"], "funcdef": "def"}, "arc.prompt.questions.RangeQuestion.render": {"fullname": "arc.prompt.questions.RangeQuestion.render", "modulename": "arc.prompt.questions", "qualname": "RangeQuestion.render", "type": "function", "doc": "<p>Returns a string repersentation of the question</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.prompt.questions.RangeQuestion.handle_answer": {"fullname": "arc.prompt.questions.RangeQuestion.handle_answer", "modulename": "arc.prompt.questions", "qualname": "RangeQuestion.handle_answer", "type": "function", "doc": "<p></p>\n", "parameters": ["inst", "answer", "args", "kwargs"], "funcdef": "def"}, "arc.prompt.questions.ConfirmQuestion": {"fullname": "arc.prompt.questions.ConfirmQuestion", "modulename": "arc.prompt.questions", "qualname": "ConfirmQuestion", "type": "class", "doc": "<p>Question to get a yes / no from the user</p>\n\n<p><code>confirm()</code> is an alias for asking this question</p>\n"}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"fullname": "arc.prompt.questions.ConfirmQuestion.multi_line", "modulename": "arc.prompt.questions", "qualname": "ConfirmQuestion.multi_line", "type": "variable", "doc": "<p></p>\n"}, "arc.prompt.questions.ConfirmQuestion.result": {"fullname": "arc.prompt.questions.ConfirmQuestion.result", "modulename": "arc.prompt.questions", "qualname": "ConfirmQuestion.result", "type": "variable", "doc": "<p></p>\n"}, "arc.prompt.questions.ConfirmQuestion.render": {"fullname": "arc.prompt.questions.ConfirmQuestion.render", "modulename": "arc.prompt.questions", "qualname": "ConfirmQuestion.render", "type": "function", "doc": "<p>Returns a string repersentation of the question</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"fullname": "arc.prompt.questions.ConfirmQuestion.handle_answer", "modulename": "arc.prompt.questions", "qualname": "ConfirmQuestion.handle_answer", "type": "function", "doc": "<p>Handles the user's input for the question</p>\n", "parameters": ["self", "answer"], "funcdef": "def"}, "arc.run": {"fullname": "arc.run", "modulename": "arc.run", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.run.run": {"fullname": "arc.run.run", "modulename": "arc.run", "qualname": "run", "type": "function", "doc": "<p>Core function of the ARC API.\nLoads up the config file, parses the user input\nFinds the command referenced, then passes over control to it</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>command (Command):</strong>  command object to run</li>\n<li><strong>execute (str):</strong>  string to parse and execute. If it's not provided\n<code>sys.argv</code> will be used</li>\n<li><strong>arcfile (str):</strong>  file path to an arc config file to load,\nwill ignore if path does not exsit</li>\n</ul>\n", "parameters": ["command", "execute", "arcfile"], "funcdef": "def"}, "arc.run.get_input": {"fullname": "arc.run.get_input", "modulename": "arc.run", "qualname": "get_input", "type": "function", "doc": "<p>Retrieves the users' input.</p>\n\n<p>If <code>execute</code> is provided, it is split using shell-like syntax.\nIf it is absent, <code>sys.argv</code> is returned</p>\n", "parameters": ["execute"], "funcdef": "def"}, "arc.run.get_command_namespace": {"fullname": "arc.run.get_command_namespace", "modulename": "arc.run", "qualname": "get_command_namespace", "type": "function", "doc": "<p>Checks to see if the first argument from the user is a valid\nnamespace name. If it is not, it will return an emtpy namespace list and\ncli.missing_command will be executed.</p>\n", "parameters": ["user_input"], "funcdef": "def"}, "arc.run.find_command": {"fullname": "arc.run.find_command", "modulename": "arc.run", "qualname": "find_command", "type": "function", "doc": "<p>Walks down the subcommand tree using the proveded list of <code>command_namespace</code>.\nAs it traverses the tree, it merges each levels context together, which will result\nin the final context to pass to the command in the end.</p>\n\n<p>When it hits the bottom of the <code>command_namespace</code> list\n(so long as none of them were invalid namespaces) it has found the called command\nand will return it.</p>\n", "parameters": ["command", "command_namespace"], "funcdef": "def"}, "arc.types": {"fullname": "arc.types", "modulename": "arc.types", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.types.ArcType": {"fullname": "arc.types.ArcType", "modulename": "arc.types", "qualname": "ArcType", "type": "class", "doc": "<p>Class that each Type sublcasses\nto provide a signal to the converter process</p>\n"}, "arc.types.ArcType.__init__": {"fullname": "arc.types.ArcType.__init__", "modulename": "arc.types", "qualname": "ArcType.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.types.needs_cleanup": {"fullname": "arc.types.needs_cleanup", "modulename": "arc.types", "qualname": "needs_cleanup", "type": "function", "doc": "<p></p>\n", "parameters": ["kind"], "funcdef": "def"}, "arc.types.file": {"fullname": "arc.types.file", "modulename": "arc.types.file", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.types.file.File": {"fullname": "arc.types.file.File", "modulename": "arc.types.file", "qualname": "File", "type": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n"}, "arc.types.file.File.__init__": {"fullname": "arc.types.file.File.__init__", "modulename": "arc.types.file", "qualname": "File.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "file_path", "modes"], "funcdef": "def"}, "arc.types.file.File.READ": {"fullname": "arc.types.file.File.READ", "modulename": "arc.types.file", "qualname": "File.READ", "type": "variable", "doc": "<p></p>\n"}, "arc.types.file.File.WRITE": {"fullname": "arc.types.file.File.WRITE", "modulename": "arc.types.file", "qualname": "File.WRITE", "type": "variable", "doc": "<p></p>\n"}, "arc.types.file.File.APPEND": {"fullname": "arc.types.file.File.APPEND", "modulename": "arc.types.file", "qualname": "File.APPEND", "type": "variable", "doc": "<p></p>\n"}, "arc.types.file.File.CREATE": {"fullname": "arc.types.file.File.CREATE", "modulename": "arc.types.file", "qualname": "File.CREATE", "type": "variable", "doc": "<p></p>\n"}, "arc.types.file.File.close": {"fullname": "arc.types.file.File.close", "modulename": "arc.types.file", "qualname": "File.close", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.types.file.File.open": {"fullname": "arc.types.file.File.open", "modulename": "arc.types.file", "qualname": "File.open", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "mode"], "funcdef": "def"}, "arc.types.paths": {"fullname": "arc.types.paths", "modulename": "arc.types.paths", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.types.paths.ValidPath": {"fullname": "arc.types.paths.ValidPath", "modulename": "arc.types.paths", "qualname": "ValidPath", "type": "class", "doc": "<p>Custom filepath type that the Conversion\nprocess will validate before passing to the\nCommand function</p>\n"}, "arc.types.paths.ValidPath.__init__": {"fullname": "arc.types.paths.ValidPath.__init__", "modulename": "arc.types.paths", "qualname": "ValidPath.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.types.range": {"fullname": "arc.types.range", "modulename": "arc.types.range", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.types.range.Range": {"fullname": "arc.types.range.Range", "modulename": "arc.types.range", "qualname": "Range", "type": "class", "doc": "<p>int([x]) -> integer\nint(x, base=10) -> integer</p>\n\n<p>Convert a number or string to an integer, or return 0 if no arguments\nare given.  If x is a number, return x.__int__().  For floating point\nnumbers, this truncates towards zero.</p>\n\n<p>If x is not a number or if base is given, then x must be a string,\nbytes, or bytearray instance representing an integer literal in the\ngiven base.  The literal can be preceded by '+' or '-' and be surrounded\nby whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\nBase 0 means to interpret the base from the string as an integer literal.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"s1\">&#39;0b100&#39;</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">4</span>\n</code></pre></div>\n"}, "arc.types.range.Range.__init__": {"fullname": "arc.types.range.Range.__init__", "modulename": "arc.types.range", "qualname": "Range.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "value", "smallest", "biggest"], "funcdef": "def"}, "arc.types.range.Range.range": {"fullname": "arc.types.range.Range.range", "modulename": "arc.types.range", "qualname": "Range.range", "type": "function", "doc": "<p>Returns the result of `range(smallest, biggest)</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.types.range.Range.range_with_picked": {"fullname": "arc.types.range.Range.range_with_picked", "modulename": "arc.types.range", "qualname": "Range.range_with_picked", "type": "function", "doc": "<p>Iterator that returns each integer in the specified range, along\nwith whether or not it was the value picked</p>\n", "parameters": ["self"], "funcdef": "def"}, "arc.utilities": {"fullname": "arc.utilities", "modulename": "arc.utilities", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.utilities.debug": {"fullname": "arc.utilities.debug", "modulename": "arc.utilities.debug", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.utilities.files": {"fullname": "arc.utilities.files", "modulename": "arc.utilities.files", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.utilities.https": {"fullname": "arc.utilities.https", "modulename": "arc.utilities.https", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.utils": {"fullname": "arc.utils", "modulename": "arc.utils", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "arc.utils.no_op": {"fullname": "arc.utils.no_op", "modulename": "arc.utils", "qualname": "no_op", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "arc.utils.timer": {"fullname": "arc.utils.timer", "modulename": "arc.utils", "qualname": "timer", "type": "function", "doc": "<p>Decorator for timing functions\nwill only time if config.debug is set to True</p>\n", "parameters": ["name"], "funcdef": "def"}, "arc.utils.symbol": {"fullname": "arc.utils.symbol", "modulename": "arc.utils", "qualname": "symbol", "type": "class", "doc": "<p></p>\n"}, "arc.utils.symbol.__init__": {"fullname": "arc.utils.symbol.__init__", "modulename": "arc.utils", "qualname": "symbol.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name"], "funcdef": "def"}, "arc.utils.symbol.name": {"fullname": "arc.utils.symbol.name", "modulename": "arc.utils", "qualname": "symbol.name", "type": "variable", "doc": "<p></p>\n"}, "arc.utils.indent": {"fullname": "arc.utils.indent", "modulename": "arc.utils", "qualname": "indent", "type": "function", "doc": "<p>Indents the block of text provided by the distance</p>\n", "parameters": ["string", "distance", "split"], "funcdef": "def"}, "arc.utils.handle": {"fullname": "arc.utils.handle", "modulename": "arc.utils", "qualname": "handle", "type": "class", "doc": "<p></p>\n"}, "arc.utils.handle.__init__": {"fullname": "arc.utils.handle.__init__", "modulename": "arc.utils", "qualname": "handle.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "exceptions", "exit_code"], "funcdef": "def"}, "arc.utils.format_exception": {"fullname": "arc.utils.format_exception", "modulename": "arc.utils", "qualname": "format_exception", "type": "function", "doc": "<p></p>\n", "parameters": ["e"], "funcdef": "def"}, "arc.utils.unwrap_type": {"fullname": "arc.utils.unwrap_type", "modulename": "arc.utils", "qualname": "unwrap_type", "type": "function", "doc": "<p>Handles unwrapping <code>GenericTypes</code>, <code>SpecialForms</code>, etc...\nTo retrive the inner origin type.</p>\n\n<p>For Example:</p>\n\n<ul>\n<li><code>list[int] -&gt; list</code></li>\n<li><code>Union[int, str] -&gt; Union</code></li>\n<li><code>File[File.Read] -&gt; File</code></li>\n<li><code>list -&gt; list</code></li>\n</ul>\n", "parameters": ["annotation"], "funcdef": "def"}, "arc.utils.is_alias": {"fullname": "arc.utils.is_alias", "modulename": "arc.utils", "qualname": "is_alias", "type": "function", "doc": "<p></p>\n", "parameters": ["alias"], "funcdef": "def"}, "arc.utils.header": {"fullname": "arc.utils.header", "modulename": "arc.utils", "qualname": "header", "type": "function", "doc": "<p></p>\n", "parameters": ["contents"], "funcdef": "def"}}, "docInfo": {"arc": {"qualname": 0, "fullname": 1, "doc": 79}, "arc.application": {"qualname": 0, "fullname": 2, "doc": 8}, "arc.application.application": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.application.application.OpenEnum": {"qualname": 1, "fullname": 4, "doc": 1}, "arc.application.application.OpenEnum.SOURCE": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.application.application.OpenEnum.WIKI": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.application.application.OpenEnum.DOCS": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.application.application.InitEnum": {"qualname": 1, "fullname": 4, "doc": 1}, "arc.application.application.InitEnum.POETRY": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.application.application.classify": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.application.application.color_print": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.application.templates": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.autoload": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.autoload.Autoload": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.autoload.Autoload.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.autoload.Autoload.load": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.autoload.Autoload.path": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.callbacks": {"qualname": 0, "fullname": 2, "doc": 151}, "arc.callbacks.actions": {"qualname": 0, "fullname": 3, "doc": 6}, "arc.callbacks.actions.open_file": {"qualname": 1, "fullname": 4, "doc": 34}, "arc.callbacks.callbacks": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.callbacks.callbacks.register_wrapper": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.callbacks.callbacks.callback": {"qualname": 1, "fullname": 4, "doc": 11}, "arc.callbacks.callbacks.callback_helper": {"qualname": 1, "fullname": 4, "doc": 19}, "arc.callbacks.callbacks.before": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.callbacks.callbacks.after": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.callbacks.callbacks.around": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.callbacks.callbacks.skip": {"qualname": 1, "fullname": 4, "doc": 3}, "arc.callbacks.validators": {"qualname": 0, "fullname": 3, "doc": 8}, "arc.callbacks.validators.in_range": {"qualname": 1, "fullname": 4, "doc": 22}, "arc.callbacks.validators.valid_path": {"qualname": 1, "fullname": 4, "doc": 16}, "arc.cli": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.cli.CLI": {"qualname": 1, "fullname": 3, "doc": 3}, "arc.cli.CLI.__init__": {"qualname": 2, "fullname": 4, "doc": 40}, "arc.cli.CLI.default_action": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.cli.CLI.command": {"qualname": 2, "fullname": 4, "doc": 8}, "arc.cli.CLI.base": {"qualname": 2, "fullname": 4, "doc": 11}, "arc.cli.CLI.missing_command": {"qualname": 2, "fullname": 4, "doc": 10}, "arc.cli.CLI.autocomplete": {"qualname": 2, "fullname": 4, "doc": 40}, "arc.cli.CLI.autoload": {"qualname": 2, "fullname": 4, "doc": 7}, "arc.cli.CLI.helper": {"qualname": 2, "fullname": 4, "doc": 18}, "arc.cli.ArcFormatter": {"qualname": 1, "fullname": 3, "doc": 172}, "arc.cli.ArcFormatter.prefixes": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.cli.ArcFormatter.format": {"qualname": 2, "fullname": 4, "doc": 49}, "arc.color": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.color.Color": {"qualname": 1, "fullname": 3, "doc": 4}, "arc.color.Color.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.Color.ESCAPE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.Color.bright": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg": {"qualname": 1, "fullname": 3, "doc": 2}, "arc.color.fg.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.BLACK": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.RED": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.GREEN": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.YELLOW": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.BLUE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.MAGENTA": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.CYAN": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.WHITE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.GREY": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.ARC_BLUE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.fg.rgb": {"qualname": 2, "fullname": 4, "doc": 8}, "arc.color.fg.hex": {"qualname": 2, "fullname": 4, "doc": 8}, "arc.color.bg": {"qualname": 1, "fullname": 3, "doc": 2}, "arc.color.bg.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.BLACK": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.RED": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.GREEN": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.YELLOW": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.BLUE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.MAGENTA": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.CYAN": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.WHITE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.GREY": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.ARC_BLUE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.bg.rgb": {"qualname": 2, "fullname": 4, "doc": 8}, "arc.color.bg.hex": {"qualname": 2, "fullname": 4, "doc": 8}, "arc.color.effects": {"qualname": 1, "fullname": 3, "doc": 1}, "arc.color.effects.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.effects.CLEAR": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.effects.BOLD": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.effects.ITALIC": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.effects.UNDERLINE": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.color.effects.STRIKETHROUGH": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.command": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.command.namespace": {"qualname": 1, "fullname": 3, "doc": 33}, "arc.command.argument": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.command.argument.Argument": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.command.argument.Argument.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument.Argument.name": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument.Argument.convert": {"qualname": 2, "fullname": 5, "doc": 6}, "arc.command.argument.Argument.is_flag": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument.Argument.is_optional": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.command.argument_parser.ArgumentParser": {"qualname": 1, "fullname": 4, "doc": 40}, "arc.command.argument_parser.ArgumentParser.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ArgumentParser.args": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ArgumentParser.get_matchers": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ArgumentParser.parse": {"qualname": 2, "fullname": 5, "doc": 10}, "arc.command.argument_parser.ArgumentParser.handle_match": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ArgumentParser.fill_unmatched": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ArgumentParser.build_args": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"qualname": 2, "fullname": 5, "doc": 12}, "arc.command.argument_parser.ArgumentParser.get_or_raise": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ArgumentParser.get_match_values": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.FlagParser": {"qualname": 1, "fullname": 4, "doc": 6}, "arc.command.argument_parser.FlagParser.matchers": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.FlagParser.handle_flag": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.KeyArg": {"qualname": 1, "fullname": 4, "doc": 36}, "arc.command.argument_parser.KeyArg.name": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.KeyArg.value": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.KeywordParser": {"qualname": 1, "fullname": 4, "doc": 6}, "arc.command.argument_parser.KeywordParser.matchers": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.KeywordParser.arg_hook": {"qualname": 2, "fullname": 5, "doc": 12}, "arc.command.argument_parser.PositionalParser": {"qualname": 1, "fullname": 4, "doc": 6}, "arc.command.argument_parser.PositionalParser.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.PositionalParser.matchers": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.PositionalParser.current_pos": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.PositionalParser.var_args": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.PositionalParser.parse": {"qualname": 2, "fullname": 5, "doc": 10}, "arc.command.argument_parser.PositionalParser.handle_positional_argument": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.PositionalParser.arg_hook": {"qualname": 2, "fullname": 5, "doc": 12}, "arc.command.argument_parser.RawParser": {"qualname": 1, "fullname": 4, "doc": 40}, "arc.command.argument_parser.ParsingMethod": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.command.argument_parser.ParsingMethod.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"qualname": 2, "fullname": 5, "doc": 6}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"qualname": 2, "fullname": 5, "doc": 6}, "arc.command.argument_parser.ParsingMethod.RAW": {"qualname": 2, "fullname": 5, "doc": 40}, "arc.command.argument_parser.ParsingMethod.FLAG": {"qualname": 2, "fullname": 5, "doc": 6}, "arc.command.command": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.command.command.Command": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.command.command.Command.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command.Command.subcommands": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command.Command.subcommand_aliases": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command.Command.parser": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command.Command.function": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command.Command.run": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.command.command.Command.subcommand": {"qualname": 2, "fullname": 5, "doc": 72}, "arc.command.command.Command.base": {"qualname": 2, "fullname": 5, "doc": 5}, "arc.command.command.Command.install_commands": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command.Command.install_command": {"qualname": 2, "fullname": 5, "doc": 6}, "arc.command.command.Command.handle_command_aliases": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command.Command.ensure_function": {"qualname": 2, "fullname": 5, "doc": 7}, "arc.command.command_executor": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.command.command_executor.CommandExecutor": {"qualname": 1, "fullname": 4, "doc": 4}, "arc.command.command_executor.CommandExecutor.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.function": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.callbacks": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.non_inheritable": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.execute": {"qualname": 2, "fullname": 5, "doc": 13}, "arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.register_callbacks": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.register_callback": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.before_callbacks": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.after_callbacks": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.start_around_callbacks": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.command_executor.CommandExecutor.end_around_callbacks": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.context": {"qualname": 0, "fullname": 3, "doc": 297}, "arc.command.context.Context": {"qualname": 1, "fullname": 4, "doc": 4}, "arc.command.helpers": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.command.helpers.ParamProxy": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.command.helpers.ParamProxy.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.helpers.ArgBuilder": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.command.helpers.ArgBuilder.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.helpers.ArgBuilder.args": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.helpers.ArgBuilder.add_arg": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.helpers.ArgBuilder.is_hidden_arg": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.command.helpers.ArgBuilder.get_meta": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.config": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.config.ConfigBase": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.config.ConfigBase.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.config.ConfigBase.ENV_PREFIX": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.config.ConfigBase.last_loaded": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.config.ConfigBase.from_file": {"qualname": 2, "fullname": 4, "doc": 20}, "arc.config.ConfigBase.from_env": {"qualname": 2, "fullname": 4, "doc": 30}, "arc.config.ConfigBase.parse": {"qualname": 2, "fullname": 4, "doc": 22}, "arc.config.ConfigBase.set_values": {"qualname": 2, "fullname": 4, "doc": 20}, "arc.config.ConfigBase.post_load": {"qualname": 2, "fullname": 4, "doc": 8}, "arc.config.Config": {"qualname": 1, "fullname": 3, "doc": 10}, "arc.config.Config.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.config.Config.ENV_PREFIX": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.config.Config.namespace_sep": {"qualname": 2, "fullname": 4, "doc": 5}, "arc.config.Config.arg_assignment": {"qualname": 2, "fullname": 4, "doc": 10}, "arc.config.Config.flag_denoter": {"qualname": 2, "fullname": 4, "doc": 5}, "arc.config.Config.short_flag_denoter": {"qualname": 2, "fullname": 4, "doc": 5}, "arc.config.Config.mode": {"qualname": 2, "fullname": 4, "doc": 8}, "arc.config.Config.mode_map": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.config.config": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.convert": {"qualname": 0, "fullname": 2, "doc": 746}, "arc.convert.convert": {"qualname": 1, "fullname": 3, "doc": 18}, "arc.convert.converters": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.convert.converters.arc_converters": {"qualname": 0, "fullname": 4, "doc": 4}, "arc.convert.converters.arc_converters.FileConverter": {"qualname": 1, "fullname": 5, "doc": 6}, "arc.convert.converters.arc_converters.FileConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.arc_converters.RangeConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.arc_converters.RangeConverter.range": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.arc_converters.ValidPathConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.base_converter": {"qualname": 0, "fullname": 4, "doc": 0}, "arc.convert.converters.base_converter.BaseConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.base_converter.BaseConverter.annotation": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.base_converter.BaseConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.builtin_converters": {"qualname": 0, "fullname": 4, "doc": 19}, "arc.convert.converters.builtin_converters.EmptyConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.builtin_converters.StringConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.builtin_converters.IntConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.builtin_converters.FloatConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.builtin_converters.BytesConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.builtin_converters.BoolConverter": {"qualname": 1, "fullname": 5, "doc": 9}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.converter_mapping": {"qualname": 0, "fullname": 4, "doc": 0}, "arc.convert.converters.converter_mapping.converter_mapping": {"qualname": 1, "fullname": 5, "doc": 0}, "arc.convert.converters.converter_mapping.register": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.converter_mapping.get_converter": {"qualname": 1, "fullname": 5, "doc": 0}, "arc.convert.converters.generic_converters": {"qualname": 0, "fullname": 4, "doc": 0}, "arc.convert.converters.generic_converters.GenericConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.UnionConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.generic_converters.LiteralConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.generic_converters.CollectionConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.generic_converters.ListConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"qualname": 2, "fullname": 6, "doc": 13}, "arc.convert.converters.generic_converters.SetConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"qualname": 2, "fullname": 6, "doc": 14}, "arc.convert.converters.generic_converters.TupleConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"qualname": 2, "fullname": 6, "doc": 21}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"qualname": 2, "fullname": 6, "doc": 0}, "arc.convert.converters.lib_converters": {"qualname": 0, "fullname": 4, "doc": 4}, "arc.convert.converters.lib_converters.EnumConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.converters.lib_converters.PathConverter": {"qualname": 1, "fullname": 5, "doc": 5}, "arc.convert.converters.lib_converters.PathConverter.convert": {"qualname": 2, "fullname": 6, "doc": 7}, "arc.convert.input": {"qualname": 0, "fullname": 3, "doc": 13}, "arc.convert.input.base_input_func": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_TextIO": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_IO": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_BinaryIO": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_str": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_int": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_float": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_bytes": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_bool": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_Enum": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_Path": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_File": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_Range": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_ValidPath": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_list": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_set": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.convert.input.input_to_tuple": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.errors": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.errors.ArcError": {"qualname": 1, "fullname": 3, "doc": 3}, "arc.errors.ArcError.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.errors.ExecutionError": {"qualname": 1, "fullname": 3, "doc": 5}, "arc.errors.NoOpError": {"qualname": 1, "fullname": 3, "doc": 7}, "arc.errors.CommandError": {"qualname": 1, "fullname": 3, "doc": 4}, "arc.errors.ValidationError": {"qualname": 1, "fullname": 3, "doc": 7}, "arc.errors.ActionError": {"qualname": 1, "fullname": 3, "doc": 5}, "arc.errors.TokenizerError": {"qualname": 1, "fullname": 3, "doc": 3}, "arc.errors.TokenizerError.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.errors.ParserError": {"qualname": 1, "fullname": 3, "doc": 5}, "arc.errors.ConversionError": {"qualname": 1, "fullname": 3, "doc": 4}, "arc.errors.ConversionError.__init__": {"qualname": 2, "fullname": 4, "doc": 19}, "arc.help_text": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.help_text.display_help": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.help_text.generate_help": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.present": {"qualname": 0, "fullname": 2, "doc": 7}, "arc.present.box": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.present.box.Box": {"qualname": 1, "fullname": 4, "doc": 18}, "arc.present.box.Box.__init__": {"qualname": 2, "fullname": 5, "doc": 55}, "arc.present.box.Box.border": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.present.box.Box.horizontal_border": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.box.Box.format_line": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.box.Box.pad_line": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.data": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.present.loaders": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.present.loaders.Styler": {"qualname": 1, "fullname": 4, "doc": 3}, "arc.present.loaders.Styler.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Styler.style_full": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Styler.style_empty": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.default": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.present.loaders.Transiton": {"qualname": 1, "fullname": 4, "doc": 3}, "arc.present.loaders.Transiton.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Transiton.style_full": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.present.loaders.Loader.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.progress": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.segments": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.format_str": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.styler": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.done": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.percent": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.render": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.update": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.print": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Loader.clear": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.BarLoader": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.present.loaders.BarLoader.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.BarLoader.FULL": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.BarLoader.EMPTY": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.BarLoader.render": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.SlantLoader": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.present.loaders.SlantLoader.FULL": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.SlantLoader.EMPTY": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.RectangleLoader": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.present.loaders.RectangleLoader.FULL": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.RectangleLoader.EMPTY": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Pacman": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.present.loaders.Pacman.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Pacman.FULL": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Pacman.EMPTY": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Pacman.pacman": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.loaders.Pacman.update": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.table": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.present.table.ColumnBase": {"qualname": 1, "fullname": 4, "doc": 2}, "arc.present.table.ColumnBase.name": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.table.Column": {"qualname": 1, "fullname": 4, "doc": 2}, "arc.present.table.Column.justify": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.table.Column.width": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.table.Column.name": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.table.DEFAULT_COLUMN": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.present.table.Table": {"qualname": 1, "fullname": 4, "doc": 4}, "arc.present.table.Table.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.table.Table.formatter": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.present.table.Table.resize_columns": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt": {"qualname": 0, "fullname": 2, "doc": 8}, "arc.prompt.confirm": {"qualname": 1, "fullname": 3, "doc": 15}, "arc.prompt.helpers": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.prompt.helpers.clear_line": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.prompt.helpers.write": {"qualname": 1, "fullname": 4, "doc": 0}, "arc.prompt.prompt": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.prompt.prompt.Prompt": {"qualname": 1, "fullname": 4, "doc": 43}, "arc.prompt.prompt.Prompt.__init__": {"qualname": 2, "fullname": 5, "doc": 38}, "arc.prompt.prompt.Prompt.previous_answers": {"qualname": 2, "fullname": 5, "doc": 6}, "arc.prompt.prompt.Prompt.ask": {"qualname": 2, "fullname": 5, "doc": 22}, "arc.prompt.prompt.Prompt.confirm": {"qualname": 2, "fullname": 5, "doc": 15}, "arc.prompt.prompt.Prompt.input": {"qualname": 2, "fullname": 5, "doc": 16}, "arc.prompt.prompt.Prompt.beautify": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.prompt.Prompt.error": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.prompt.Prompt.ok": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.prompt.Prompt.no": {"qualname": 1, "fullname": 4, "doc": 4}, "arc.prompt.prompt.Prompt.act": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.prompt.Prompt.warn": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.prompt.Prompt.subtle": {"qualname": 2, "fullname": 5, "doc": 6}, "arc.prompt.prompt.Prompt.snake": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.prompt.Prompt.emoji": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.prompt.Prompt.colored": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.questions": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.prompt.questions.is_int": {"qualname": 1, "fullname": 4, "doc": 10}, "arc.prompt.questions.is_list": {"qualname": 1, "fullname": 4, "doc": 3}, "arc.prompt.questions.QuestionError": {"qualname": 1, "fullname": 4, "doc": 3}, "arc.prompt.questions.Question": {"qualname": 1, "fullname": 4, "doc": 9}, "arc.prompt.questions.Question.multi_line": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.questions.Question.sensitive": {"qualname": 2, "fullname": 5, "doc": 9}, "arc.prompt.questions.Question.render": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.Question.handle_answer": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.InputQuestion": {"qualname": 1, "fullname": 4, "doc": 9}, "arc.prompt.questions.InputQuestion.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.questions.InputQuestion.render": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.InputQuestion.handle_answer": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.MultipleChoiceQuestion": {"qualname": 1, "fullname": 4, "doc": 26}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.RangeQuestion": {"qualname": 1, "fullname": 4, "doc": 4}, "arc.prompt.questions.RangeQuestion.__init__": {"qualname": 2, "fullname": 5, "doc": 9}, "arc.prompt.questions.RangeQuestion.render": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.RangeQuestion.handle_answer": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.questions.ConfirmQuestion": {"qualname": 1, "fullname": 4, "doc": 7}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.questions.ConfirmQuestion.result": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.prompt.questions.ConfirmQuestion.render": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.run": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.run.run": {"qualname": 1, "fullname": 3, "doc": 44}, "arc.run.get_input": {"qualname": 1, "fullname": 3, "doc": 13}, "arc.run.get_command_namespace": {"qualname": 1, "fullname": 3, "doc": 15}, "arc.run.find_command": {"qualname": 1, "fullname": 3, "doc": 33}, "arc.types": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.types.ArcType": {"qualname": 1, "fullname": 3, "doc": 8}, "arc.types.ArcType.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.types.needs_cleanup": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.types.file": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.types.file.File": {"qualname": 1, "fullname": 4, "doc": 49}, "arc.types.file.File.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.file.File.READ": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.file.File.WRITE": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.file.File.APPEND": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.file.File.CREATE": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.file.File.close": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.file.File.open": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.paths": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.types.paths.ValidPath": {"qualname": 1, "fullname": 4, "doc": 10}, "arc.types.paths.ValidPath.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.range": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.types.range.Range": {"qualname": 1, "fullname": 4, "doc": 68}, "arc.types.range.Range.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "arc.types.range.Range.range": {"qualname": 2, "fullname": 5, "doc": 4}, "arc.types.range.Range.range_with_picked": {"qualname": 2, "fullname": 5, "doc": 10}, "arc.utilities": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.utilities.debug": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.utilities.files": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.utilities.https": {"qualname": 0, "fullname": 3, "doc": 0}, "arc.utils": {"qualname": 0, "fullname": 2, "doc": 0}, "arc.utils.no_op": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.utils.timer": {"qualname": 1, "fullname": 3, "doc": 8}, "arc.utils.symbol": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.utils.symbol.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.utils.symbol.name": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.utils.indent": {"qualname": 1, "fullname": 3, "doc": 5}, "arc.utils.handle": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.utils.handle.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "arc.utils.format_exception": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.utils.unwrap_type": {"qualname": 1, "fullname": 3, "doc": 24}, "arc.utils.is_alias": {"qualname": 1, "fullname": 3, "doc": 0}, "arc.utils.header": {"qualname": 1, "fullname": 3, "doc": 0}}, "length": 431, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.types.file.File.open": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.application.application.OpenEnum": {"tf": 1}, "arc.application.application.OpenEnum.SOURCE": {"tf": 1}, "arc.application.application.OpenEnum.WIKI": {"tf": 1}, "arc.application.application.OpenEnum.DOCS": {"tf": 1}}, "df": 4}}}}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"arc.prompt.prompt.Prompt.ok": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"arc.application.application.OpenEnum.SOURCE": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"arc.callbacks.callbacks.skip": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"arc.color.effects.STRIKETHROUGH": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.StringConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.start_around_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Styler.__init__": {"tf": 1}, "arc.present.loaders.Styler.style_full": {"tf": 1}, "arc.present.loaders.Styler.style_empty": {"tf": 1}, "arc.present.loaders.Loader.styler": {"tf": 1}}, "df": 5}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.loaders.Styler.style_full": {"tf": 1}, "arc.present.loaders.Transiton.style_full": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"arc.present.loaders.Styler.style_empty": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.command.Command.subcommands": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.command.Command.subcommand_aliases": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"arc.prompt.prompt.Prompt.subtle": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.config.ConfigBase.set_values": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.SetConverter": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.segments": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"arc.config.Config.short_flag_denoter": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.loaders.SlantLoader": {"tf": 1}, "arc.present.loaders.SlantLoader.FULL": {"tf": 1}, "arc.present.loaders.SlantLoader.EMPTY": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"arc.prompt.prompt.Prompt.snake": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.utils.symbol": {"tf": 1}, "arc.utils.symbol.__init__": {"tf": 1}, "arc.utils.symbol.name": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"arc.application.application.OpenEnum.WIKI": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.present.table.Column.width": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"arc.color.fg.WHITE": {"tf": 1}, "arc.color.bg.WHITE": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"arc.prompt.helpers.write": {"tf": 1}, "arc.types.file.File.WRITE": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.prompt.Prompt.warn": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"arc.application.application.OpenEnum.DOCS": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {"arc.present.loaders.Loader.done": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.default": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.default_action": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.table.DEFAULT_COLUMN": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"arc.help_text.display_help": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.application.application.InitEnum": {"tf": 1}, "arc.application.application.InitEnum.POETRY": {"tf": 1}}, "df": 2}}}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.callbacks.validators.in_range": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.command.Command.install_commands": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.IntConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.input": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.input.input_to_TextIO": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.input.input_to_tuple": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.input.input_to_IO": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_int": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.input.input_to_BinaryIO": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_bytes": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.input.input_to_bool": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.input.input_to_str": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_set": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_float": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.input.input_to_File": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.convert.input.input_to_Enum": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert.input.input_to_Path": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert.input.input_to_Range": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert.input.input_to_ValidPath": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_list": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.prompt.questions.InputQuestion.__init__": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}}, "df": 4}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.utils.indent": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.color.effects.ITALIC": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument.Argument.is_flag": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument.Argument.is_optional": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.helpers.ArgBuilder.is_hidden_arg": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.is_int": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.is_list": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"arc.utils.is_alias": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.application.application.InitEnum.POETRY": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser.__init__": {"tf": 1}, "arc.command.argument_parser.PositionalParser.matchers": {"tf": 1}, "arc.command.argument_parser.PositionalParser.current_pos": {"tf": 1}, "arc.command.argument_parser.PositionalParser.var_args": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.handle_positional_argument": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}}, "df": 8}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.config.ConfigBase.post_load": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.autoload.Autoload.path": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.lib_converters.PathConverter": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.argument_parser.ParsingMethod": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.__init__": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}}, "df": 6}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.parser": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ParserError": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {"arc.command.helpers.ParamProxy": {"tf": 1}, "arc.command.helpers.ParamProxy.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.box.Box.pad_line": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.loaders.Pacman": {"tf": 1}, "arc.present.loaders.Pacman.__init__": {"tf": 1}, "arc.present.loaders.Pacman.FULL": {"tf": 1}, "arc.present.loaders.Pacman.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman.pacman": {"tf": 1.4142135623730951}, "arc.present.loaders.Pacman.update": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"arc.cli.ArcFormatter.prefixes": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.present.loaders.Loader.progress": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.prompt.Prompt.beautify": {"tf": 1}, "arc.prompt.prompt.Prompt.error": {"tf": 1}, "arc.prompt.prompt.Prompt.ok": {"tf": 1}, "arc.prompt.prompt.Prompt.no": {"tf": 1}, "arc.prompt.prompt.Prompt.act": {"tf": 1}, "arc.prompt.prompt.Prompt.warn": {"tf": 1}, "arc.prompt.prompt.Prompt.subtle": {"tf": 1}, "arc.prompt.prompt.Prompt.snake": {"tf": 1}, "arc.prompt.prompt.Prompt.emoji": {"tf": 1}, "arc.prompt.prompt.Prompt.colored": {"tf": 1}}, "df": 16}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.print": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.percent": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"arc.application.application.classify": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"arc.cli.CLI": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.default_action": {"tf": 1}, "arc.cli.CLI.command": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}, "arc.cli.CLI.missing_command": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}}, "df": 9}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc.color.effects.CLEAR": {"tf": 1}, "arc.present.loaders.Loader.clear": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.helpers.clear_line": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.types.file.File.close": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.color.Color": {"tf": 1}, "arc.color.Color.__init__": {"tf": 1}, "arc.color.Color.ESCAPE": {"tf": 1}, "arc.color.Color.bright": {"tf": 1}, "arc.prompt.prompt.Prompt.colored": {"tf": 1}}, "df": 5, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.application.application.color_print": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.table.Column": {"tf": 1}, "arc.present.table.Column.justify": {"tf": 1}, "arc.present.table.Column.width": {"tf": 1}, "arc.present.table.Column.name": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.present.table.ColumnBase": {"tf": 1}, "arc.present.table.ColumnBase.name": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.CLI.command": {"tf": 1}, "arc.command.command.Command": {"tf": 1}, "arc.command.command.Command.__init__": {"tf": 1}, "arc.command.command.Command.subcommands": {"tf": 1}, "arc.command.command.Command.subcommand_aliases": {"tf": 1}, "arc.command.command.Command.parser": {"tf": 1}, "arc.command.command.Command.function": {"tf": 1}, "arc.command.command.Command.run": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.command.Command.base": {"tf": 1}, "arc.command.command.Command.install_commands": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1}, "arc.command.command.Command.handle_command_aliases": {"tf": 1}, "arc.command.command.Command.ensure_function": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.command.command_executor.CommandExecutor.__init__": {"tf": 1}, "arc.command.command_executor.CommandExecutor.function": {"tf": 1}, "arc.command.command_executor.CommandExecutor.callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.non_inheritable": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callback": {"tf": 1}, "arc.command.command_executor.CommandExecutor.before_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.after_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.start_around_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.end_around_callbacks": {"tf": 1}}, "df": 13}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.CommandError": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument.Argument.convert": {"tf": 1}, "arc.convert.convert": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}}, "df": 17, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert.converters.converter_mapping.converter_mapping": {"tf": 1}}, "df": 1}}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ConversionError": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context.Context": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"arc.config.Config": {"tf": 1}, "arc.config.Config.__init__": {"tf": 1}, "arc.config.Config.ENV_PREFIX": {"tf": 1}, "arc.config.Config.namespace_sep": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}, "arc.config.Config.flag_denoter": {"tf": 1}, "arc.config.Config.short_flag_denoter": {"tf": 1}, "arc.config.Config.mode": {"tf": 1}, "arc.config.Config.mode_map": {"tf": 1}, "arc.config.config": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.config.ConfigBase": {"tf": 1}, "arc.config.ConfigBase.__init__": {"tf": 1}, "arc.config.ConfigBase.ENV_PREFIX": {"tf": 1}, "arc.config.ConfigBase.last_loaded": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.config.ConfigBase.post_load": {"tf": 1}}, "df": 9}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}}, "df": 2, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.ConfirmQuestion": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.result": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 5}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.callbacks.callbacks.callback": {"tf": 1}, "arc.command.command_executor.CommandExecutor.callbacks": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"arc.color.fg.CYAN": {"tf": 1}, "arc.color.bg.CYAN": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {"arc.command.argument_parser.PositionalParser.current_pos": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.file.File.CREATE": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.autoload.Autoload": {"tf": 1}, "arc.autoload.Autoload.__init__": {"tf": 1}, "arc.autoload.Autoload.load": {"tf": 1}, "arc.autoload.Autoload.path": {"tf": 1}, "arc.cli.CLI.autoload": {"tf": 1}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks.callbacks.around": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.prefixes": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 3}}}}}}}, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.color.fg.ARC_BLUE": {"tf": 1}, "arc.color.bg.ARC_BLUE": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ArcError": {"tf": 1}, "arc.errors.ArcError.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.types.ArcType": {"tf": 1}, "arc.types.ArcType.__init__": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"arc.command.argument_parser.ArgumentParser.args": {"tf": 1}, "arc.command.helpers.ArgBuilder.args": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument.Argument": {"tf": 1}, "arc.command.argument.Argument.__init__": {"tf": 1}, "arc.command.argument.Argument.name": {"tf": 1}, "arc.command.argument.Argument.convert": {"tf": 1}, "arc.command.argument.Argument.is_flag": {"tf": 1}, "arc.command.argument.Argument.is_optional": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_matchers": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.handle_match": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.fill_unmatched": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.build_args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_or_raise": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_match_values": {"tf": 1}}, "df": 11}}}}}}}}}, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"arc.config.Config.arg_assignment": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.helpers.ArgBuilder": {"tf": 1}, "arc.command.helpers.ArgBuilder.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder.args": {"tf": 1}, "arc.command.helpers.ArgBuilder.add_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.is_hidden_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.get_meta": {"tf": 1}}, "df": 6}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.after_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.helpers.ArgBuilder.add_arg": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.base_converter.BaseConverter.annotation": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.act": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ActionError": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"arc.prompt.prompt.Prompt.ask": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.types.file.File.APPEND": {"tf": 1}}, "df": 1}}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"arc.autoload.Autoload.__init__": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.color.Color.__init__": {"tf": 1}, "arc.color.fg.__init__": {"tf": 1}, "arc.color.bg.__init__": {"tf": 1}, "arc.color.effects.__init__": {"tf": 1}, "arc.command.argument.Argument.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.__init__": {"tf": 1}, "arc.command.argument_parser.PositionalParser.__init__": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.__init__": {"tf": 1}, "arc.command.command.Command.__init__": {"tf": 1}, "arc.command.command_executor.CommandExecutor.__init__": {"tf": 1}, "arc.command.helpers.ParamProxy.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder.__init__": {"tf": 1}, "arc.config.ConfigBase.__init__": {"tf": 1}, "arc.config.Config.__init__": {"tf": 1}, "arc.errors.ArcError.__init__": {"tf": 1}, "arc.errors.TokenizerError.__init__": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.present.loaders.Styler.__init__": {"tf": 1}, "arc.present.loaders.Transiton.__init__": {"tf": 1}, "arc.present.loaders.Loader.__init__": {"tf": 1}, "arc.present.loaders.BarLoader.__init__": {"tf": 1}, "arc.present.loaders.Pacman.__init__": {"tf": 1}, "arc.present.table.Table.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.questions.InputQuestion.__init__": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.types.ArcType.__init__": {"tf": 1}, "arc.types.file.File.__init__": {"tf": 1}, "arc.types.paths.ValidPath.__init__": {"tf": 1}, "arc.types.range.Range.__init__": {"tf": 1}, "arc.utils.symbol.__init__": {"tf": 1}, "arc.utils.handle.__init__": {"tf": 1}}, "df": 36}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.autoload.Autoload.load": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders.Loader": {"tf": 1}, "arc.present.loaders.Loader.__init__": {"tf": 1}, "arc.present.loaders.Loader.progress": {"tf": 1}, "arc.present.loaders.Loader.segments": {"tf": 1}, "arc.present.loaders.Loader.format_str": {"tf": 1}, "arc.present.loaders.Loader.styler": {"tf": 1}, "arc.present.loaders.Loader.done": {"tf": 1}, "arc.present.loaders.Loader.percent": {"tf": 1}, "arc.present.loaders.Loader.render": {"tf": 1}, "arc.present.loaders.Loader.update": {"tf": 1}, "arc.present.loaders.Loader.print": {"tf": 1}, "arc.present.loaders.Loader.clear": {"tf": 1}}, "df": 12}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.config.ConfigBase.last_loaded": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.ListConverter": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}}, "df": 2}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.converter_mapping.register": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"arc.callbacks.callbacks.register_wrapper": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.register_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callback": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "d": {"docs": {"arc.color.fg.RED": {"tf": 1}, "arc.color.bg.RED": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders.Loader.render": {"tf": 1}, "arc.present.loaders.BarLoader.render": {"tf": 1}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.loaders.RectangleLoader": {"tf": 1}, "arc.present.loaders.RectangleLoader.FULL": {"tf": 1}, "arc.present.loaders.RectangleLoader.EMPTY": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.table.Table.resize_columns": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.ConfirmQuestion.result": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.types.file.File.READ": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"arc.color.fg.rgb": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.RawParser": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert.converters.arc_converters.RangeConverter.range": {"tf": 1}, "arc.types.range.Range": {"tf": 1}, "arc.types.range.Range.__init__": {"tf": 1}, "arc.types.range.Range.range": {"tf": 1.4142135623730951}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.arc_converters.RangeConverter": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.range": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.handle_answer": {"tf": 1}}, "df": 4}}}}}, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"arc.command.command.Command.run": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks.callbacks.before": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.before_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"arc.prompt.prompt.Prompt.beautify": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.CLI.base": {"tf": 1}, "arc.command.command.Command.base": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.base_converter.BaseConverter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.annotation": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}}, "df": 3}}}}}}}, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"arc.convert.input.base_input_func": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.loaders.BarLoader": {"tf": 1}, "arc.present.loaders.BarLoader.__init__": {"tf": 1}, "arc.present.loaders.BarLoader.FULL": {"tf": 1}, "arc.present.loaders.BarLoader.EMPTY": {"tf": 1}, "arc.present.loaders.BarLoader.render": {"tf": 1}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"arc.color.Color.bright": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.color.fg.BLACK": {"tf": 1}, "arc.color.bg.BLACK": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"arc.color.fg.BLUE": {"tf": 1}, "arc.color.bg.BLUE": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"arc.color.bg": {"tf": 1}, "arc.color.bg.__init__": {"tf": 1}, "arc.color.bg.BLACK": {"tf": 1}, "arc.color.bg.RED": {"tf": 1}, "arc.color.bg.GREEN": {"tf": 1}, "arc.color.bg.YELLOW": {"tf": 1}, "arc.color.bg.BLUE": {"tf": 1}, "arc.color.bg.MAGENTA": {"tf": 1}, "arc.color.bg.CYAN": {"tf": 1}, "arc.color.bg.WHITE": {"tf": 1}, "arc.color.bg.GREY": {"tf": 1}, "arc.color.bg.ARC_BLUE": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 14}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc.color.effects.BOLD": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}, "x": {"docs": {"arc.present.box.Box": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.present.box.Box.border": {"tf": 1}, "arc.present.box.Box.horizontal_border": {"tf": 1}, "arc.present.box.Box.format_line": {"tf": 1}, "arc.present.box.Box.pad_line": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.box.Box.border": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.ArgumentParser.build_args": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.callbacks.validators.valid_path": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.types.paths.ValidPath": {"tf": 1}, "arc.types.paths.ValidPath.__init__": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ValidationError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {"arc.command.argument_parser.KeyArg.value": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.PositionalParser.var_args": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.CLI.missing_command": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"arc.color.fg.MAGENTA": {"tf": 1}, "arc.color.bg.MAGENTA": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.FlagParser.matchers": {"tf": 1}, "arc.command.argument_parser.KeywordParser.matchers": {"tf": 1}, "arc.command.argument_parser.PositionalParser.matchers": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"arc.config.Config.mode": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.config.Config.mode_map": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.questions.Question.multi_line": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.CLI.helper": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"arc.color.fg.hex": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.utils.header": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"arc.utils.handle": {"tf": 1}, "arc.utils.handle.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser.handle_match": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.FlagParser.handle_flag": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {"arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {"arc.command.argument_parser.PositionalParser.handle_positional_argument": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.command.Command.handle_command_aliases": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.RangeQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 5}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.box.Box.horizontal_border": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.box.Box.format_line": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders.Loader.format_str": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.utils.format_exception": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"arc.present.table.Table.formatter": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"arc.color.fg": {"tf": 1}, "arc.color.fg.__init__": {"tf": 1}, "arc.color.fg.BLACK": {"tf": 1}, "arc.color.fg.RED": {"tf": 1}, "arc.color.fg.GREEN": {"tf": 1}, "arc.color.fg.YELLOW": {"tf": 1}, "arc.color.fg.BLUE": {"tf": 1}, "arc.color.fg.MAGENTA": {"tf": 1}, "arc.color.fg.CYAN": {"tf": 1}, "arc.color.fg.WHITE": {"tf": 1}, "arc.color.fg.GREY": {"tf": 1}, "arc.color.fg.ARC_BLUE": {"tf": 1}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}}, "df": 14}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser.fill_unmatched": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"arc.types.file.File": {"tf": 1}, "arc.types.file.File.__init__": {"tf": 1}, "arc.types.file.File.READ": {"tf": 1}, "arc.types.file.File.WRITE": {"tf": 1}, "arc.types.file.File.APPEND": {"tf": 1}, "arc.types.file.File.CREATE": {"tf": 1}, "arc.types.file.File.close": {"tf": 1}, "arc.types.file.File.open": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.FlagParser.matchers": {"tf": 1}, "arc.command.argument_parser.FlagParser.handle_flag": {"tf": 1}}, "df": 3}}}}, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"arc.config.Config.flag_denoter": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.command.command.Command.function": {"tf": 1}, "arc.command.command_executor.CommandExecutor.function": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.loaders.BarLoader.FULL": {"tf": 1}, "arc.present.loaders.SlantLoader.FULL": {"tf": 1}, "arc.present.loaders.RectangleLoader.FULL": {"tf": 1}, "arc.present.loaders.Pacman.FULL": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.color.Color.ESCAPE": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.color.effects": {"tf": 1}, "arc.color.effects.__init__": {"tf": 1}, "arc.color.effects.CLEAR": {"tf": 1}, "arc.color.effects.BOLD": {"tf": 1}, "arc.color.effects.ITALIC": {"tf": 1}, "arc.color.effects.UNDERLINE": {"tf": 1}, "arc.color.effects.STRIKETHROUGH": {"tf": 1}}, "df": 7}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command.Command.ensure_function": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.end_around_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"arc.config.ConfigBase.ENV_PREFIX": {"tf": 1}, "arc.config.Config.ENV_PREFIX": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.lib_converters.EnumConverter": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command_executor.CommandExecutor.execute": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ExecutionError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {"arc.present.loaders.BarLoader.EMPTY": {"tf": 1}, "arc.present.loaders.SlantLoader.EMPTY": {"tf": 1}, "arc.present.loaders.RectangleLoader.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman.EMPTY": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"arc.prompt.prompt.Prompt.emoji": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.prompt.Prompt.error": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.color.fg.GREEN": {"tf": 1}, "arc.color.bg.GREEN": {"tf": 1}}, "df": 2}}, "y": {"docs": {"arc.color.fg.GREY": {"tf": 1}, "arc.color.bg.GREY": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser.get_matchers": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.command.argument_parser.ArgumentParser.get_match_values": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"arc.command.helpers.ArgBuilder.get_meta": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser.get_or_raise": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.converter_mapping.get_converter": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.run.get_command_namespace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.run.get_input": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.GenericConverter": {"tf": 1}}, "df": 1}}}}}}}, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"arc.help_text.generate_help": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.color.fg.YELLOW": {"tf": 1}, "arc.color.bg.YELLOW": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.color.effects.UNDERLINE": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.UnionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.update": {"tf": 1}, "arc.present.loaders.Pacman.update": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"arc.command.argument.Argument.name": {"tf": 1}, "arc.command.argument_parser.KeyArg.name": {"tf": 1}, "arc.present.table.ColumnBase.name": {"tf": 1}, "arc.present.table.Column.name": {"tf": 1}, "arc.utils.symbol.name": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.command.namespace": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"arc.config.Config.namespace_sep": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command_executor.CommandExecutor.non_inheritable": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.NoOpError": {"tf": 1}}, "df": 1}}}}}}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"arc.utils.no_op": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"arc.types.needs_cleanup": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.argument_parser.KeyArg.name": {"tf": 1}, "arc.command.argument_parser.KeyArg.value": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser.matchers": {"tf": 1}, "arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}}, "df": 4}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.TupleConverter": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"tf": 1}}, "df": 3}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.TokenizerError": {"tf": 1}, "arc.errors.TokenizerError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.loaders.Transiton": {"tf": 1}, "arc.present.loaders.Transiton.__init__": {"tf": 1}, "arc.present.loaders.Transiton.style_full": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.table.Table": {"tf": 1}, "arc.present.table.Table.__init__": {"tf": 1}, "arc.present.table.Table.formatter": {"tf": 1}, "arc.present.table.Table.resize_columns": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.utils.timer": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"arc.present.table.Column.justify": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.Question.multi_line": {"tf": 1}, "arc.prompt.questions.Question.sensitive": {"tf": 1}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.Question.handle_answer": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.questions.QuestionError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"arc": {"tf": 1}, "arc.application": {"tf": 1}, "arc.application.application": {"tf": 1}, "arc.application.application.OpenEnum": {"tf": 1}, "arc.application.application.OpenEnum.SOURCE": {"tf": 1}, "arc.application.application.OpenEnum.WIKI": {"tf": 1}, "arc.application.application.OpenEnum.DOCS": {"tf": 1}, "arc.application.application.InitEnum": {"tf": 1}, "arc.application.application.InitEnum.POETRY": {"tf": 1}, "arc.application.application.classify": {"tf": 1}, "arc.application.application.color_print": {"tf": 1}, "arc.application.templates": {"tf": 1}, "arc.autoload": {"tf": 1}, "arc.autoload.Autoload": {"tf": 1}, "arc.autoload.Autoload.__init__": {"tf": 1}, "arc.autoload.Autoload.load": {"tf": 1}, "arc.autoload.Autoload.path": {"tf": 1}, "arc.callbacks": {"tf": 1}, "arc.callbacks.actions": {"tf": 1}, "arc.callbacks.actions.open_file": {"tf": 1}, "arc.callbacks.callbacks": {"tf": 1}, "arc.callbacks.callbacks.register_wrapper": {"tf": 1}, "arc.callbacks.callbacks.callback": {"tf": 1}, "arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.callbacks.callbacks.before": {"tf": 1}, "arc.callbacks.callbacks.after": {"tf": 1}, "arc.callbacks.callbacks.around": {"tf": 1}, "arc.callbacks.callbacks.skip": {"tf": 1}, "arc.callbacks.validators": {"tf": 1}, "arc.callbacks.validators.in_range": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.cli": {"tf": 1}, "arc.cli.CLI": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.default_action": {"tf": 1}, "arc.cli.CLI.command": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}, "arc.cli.CLI.missing_command": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.prefixes": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}, "arc.color": {"tf": 1}, "arc.color.Color": {"tf": 1}, "arc.color.Color.__init__": {"tf": 1}, "arc.color.Color.ESCAPE": {"tf": 1}, "arc.color.Color.bright": {"tf": 1}, "arc.color.fg": {"tf": 1}, "arc.color.fg.__init__": {"tf": 1}, "arc.color.fg.BLACK": {"tf": 1}, "arc.color.fg.RED": {"tf": 1}, "arc.color.fg.GREEN": {"tf": 1}, "arc.color.fg.YELLOW": {"tf": 1}, "arc.color.fg.BLUE": {"tf": 1}, "arc.color.fg.MAGENTA": {"tf": 1}, "arc.color.fg.CYAN": {"tf": 1}, "arc.color.fg.WHITE": {"tf": 1}, "arc.color.fg.GREY": {"tf": 1}, "arc.color.fg.ARC_BLUE": {"tf": 1}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg": {"tf": 1}, "arc.color.bg.__init__": {"tf": 1}, "arc.color.bg.BLACK": {"tf": 1}, "arc.color.bg.RED": {"tf": 1}, "arc.color.bg.GREEN": {"tf": 1}, "arc.color.bg.YELLOW": {"tf": 1}, "arc.color.bg.BLUE": {"tf": 1}, "arc.color.bg.MAGENTA": {"tf": 1}, "arc.color.bg.CYAN": {"tf": 1}, "arc.color.bg.WHITE": {"tf": 1}, "arc.color.bg.GREY": {"tf": 1}, "arc.color.bg.ARC_BLUE": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}, "arc.color.effects": {"tf": 1}, "arc.color.effects.__init__": {"tf": 1}, "arc.color.effects.CLEAR": {"tf": 1}, "arc.color.effects.BOLD": {"tf": 1}, "arc.color.effects.ITALIC": {"tf": 1}, "arc.color.effects.UNDERLINE": {"tf": 1}, "arc.color.effects.STRIKETHROUGH": {"tf": 1}, "arc.command": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.argument": {"tf": 1}, "arc.command.argument.Argument": {"tf": 1}, "arc.command.argument.Argument.__init__": {"tf": 1}, "arc.command.argument.Argument.name": {"tf": 1}, "arc.command.argument.Argument.convert": {"tf": 1}, "arc.command.argument.Argument.is_flag": {"tf": 1}, "arc.command.argument.Argument.is_optional": {"tf": 1}, "arc.command.argument_parser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_matchers": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.handle_match": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.fill_unmatched": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.build_args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_or_raise": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_match_values": {"tf": 1}, "arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.FlagParser.matchers": {"tf": 1}, "arc.command.argument_parser.FlagParser.handle_flag": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.argument_parser.KeyArg.name": {"tf": 1}, "arc.command.argument_parser.KeyArg.value": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser.matchers": {"tf": 1}, "arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser.__init__": {"tf": 1}, "arc.command.argument_parser.PositionalParser.matchers": {"tf": 1}, "arc.command.argument_parser.PositionalParser.current_pos": {"tf": 1}, "arc.command.argument_parser.PositionalParser.var_args": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.handle_positional_argument": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.__init__": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}, "arc.command.command": {"tf": 1}, "arc.command.command.Command": {"tf": 1}, "arc.command.command.Command.__init__": {"tf": 1}, "arc.command.command.Command.subcommands": {"tf": 1}, "arc.command.command.Command.subcommand_aliases": {"tf": 1}, "arc.command.command.Command.parser": {"tf": 1}, "arc.command.command.Command.function": {"tf": 1}, "arc.command.command.Command.run": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.command.Command.base": {"tf": 1}, "arc.command.command.Command.install_commands": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1}, "arc.command.command.Command.handle_command_aliases": {"tf": 1}, "arc.command.command.Command.ensure_function": {"tf": 1}, "arc.command.command_executor": {"tf": 1}, "arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.command.command_executor.CommandExecutor.__init__": {"tf": 1}, "arc.command.command_executor.CommandExecutor.function": {"tf": 1}, "arc.command.command_executor.CommandExecutor.callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.non_inheritable": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callback": {"tf": 1}, "arc.command.command_executor.CommandExecutor.before_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.after_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.start_around_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.end_around_callbacks": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.command.context.Context": {"tf": 1}, "arc.command.helpers": {"tf": 1}, "arc.command.helpers.ParamProxy": {"tf": 1}, "arc.command.helpers.ParamProxy.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder": {"tf": 1}, "arc.command.helpers.ArgBuilder.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder.args": {"tf": 1}, "arc.command.helpers.ArgBuilder.add_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.is_hidden_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.get_meta": {"tf": 1}, "arc.config": {"tf": 1}, "arc.config.ConfigBase": {"tf": 1}, "arc.config.ConfigBase.__init__": {"tf": 1}, "arc.config.ConfigBase.ENV_PREFIX": {"tf": 1}, "arc.config.ConfigBase.last_loaded": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.config.ConfigBase.post_load": {"tf": 1}, "arc.config.Config": {"tf": 1}, "arc.config.Config.__init__": {"tf": 1}, "arc.config.Config.ENV_PREFIX": {"tf": 1}, "arc.config.Config.namespace_sep": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}, "arc.config.Config.flag_denoter": {"tf": 1}, "arc.config.Config.short_flag_denoter": {"tf": 1}, "arc.config.Config.mode": {"tf": 1}, "arc.config.Config.mode_map": {"tf": 1}, "arc.config.config": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.convert.convert": {"tf": 1}, "arc.convert.converters": {"tf": 1}, "arc.convert.converters.arc_converters": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.range": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.annotation": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.converter_mapping": {"tf": 1}, "arc.convert.converters.converter_mapping.converter_mapping": {"tf": 1}, "arc.convert.converters.converter_mapping.register": {"tf": 1}, "arc.convert.converters.converter_mapping.get_converter": {"tf": 1}, "arc.convert.converters.generic_converters": {"tf": 1}, "arc.convert.converters.generic_converters.GenericConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"tf": 1}, "arc.convert.converters.lib_converters": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}, "arc.convert.input": {"tf": 1}, "arc.convert.input.base_input_func": {"tf": 1}, "arc.convert.input.input_to_TextIO": {"tf": 1}, "arc.convert.input.input_to_IO": {"tf": 1}, "arc.convert.input.input_to_BinaryIO": {"tf": 1}, "arc.convert.input.input_to_str": {"tf": 1}, "arc.convert.input.input_to_int": {"tf": 1}, "arc.convert.input.input_to_float": {"tf": 1}, "arc.convert.input.input_to_bytes": {"tf": 1}, "arc.convert.input.input_to_bool": {"tf": 1}, "arc.convert.input.input_to_Enum": {"tf": 1}, "arc.convert.input.input_to_Path": {"tf": 1}, "arc.convert.input.input_to_File": {"tf": 1}, "arc.convert.input.input_to_Range": {"tf": 1}, "arc.convert.input.input_to_ValidPath": {"tf": 1}, "arc.convert.input.input_to_list": {"tf": 1}, "arc.convert.input.input_to_set": {"tf": 1}, "arc.convert.input.input_to_tuple": {"tf": 1}, "arc.errors": {"tf": 1}, "arc.errors.ArcError": {"tf": 1}, "arc.errors.ArcError.__init__": {"tf": 1}, "arc.errors.ExecutionError": {"tf": 1}, "arc.errors.NoOpError": {"tf": 1}, "arc.errors.CommandError": {"tf": 1}, "arc.errors.ValidationError": {"tf": 1}, "arc.errors.ActionError": {"tf": 1}, "arc.errors.TokenizerError": {"tf": 1}, "arc.errors.TokenizerError.__init__": {"tf": 1}, "arc.errors.ParserError": {"tf": 1}, "arc.errors.ConversionError": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.help_text": {"tf": 1}, "arc.help_text.display_help": {"tf": 1}, "arc.help_text.generate_help": {"tf": 1}, "arc.present": {"tf": 1}, "arc.present.box": {"tf": 1}, "arc.present.box.Box": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.present.box.Box.border": {"tf": 1}, "arc.present.box.Box.horizontal_border": {"tf": 1}, "arc.present.box.Box.format_line": {"tf": 1}, "arc.present.box.Box.pad_line": {"tf": 1}, "arc.present.data": {"tf": 1}, "arc.present.loaders": {"tf": 1}, "arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Styler.__init__": {"tf": 1}, "arc.present.loaders.Styler.style_full": {"tf": 1}, "arc.present.loaders.Styler.style_empty": {"tf": 1}, "arc.present.loaders.default": {"tf": 1}, "arc.present.loaders.Transiton": {"tf": 1}, "arc.present.loaders.Transiton.__init__": {"tf": 1}, "arc.present.loaders.Transiton.style_full": {"tf": 1}, "arc.present.loaders.Loader": {"tf": 1}, "arc.present.loaders.Loader.__init__": {"tf": 1}, "arc.present.loaders.Loader.progress": {"tf": 1}, "arc.present.loaders.Loader.segments": {"tf": 1}, "arc.present.loaders.Loader.format_str": {"tf": 1}, "arc.present.loaders.Loader.styler": {"tf": 1}, "arc.present.loaders.Loader.done": {"tf": 1}, "arc.present.loaders.Loader.percent": {"tf": 1}, "arc.present.loaders.Loader.render": {"tf": 1}, "arc.present.loaders.Loader.update": {"tf": 1}, "arc.present.loaders.Loader.print": {"tf": 1}, "arc.present.loaders.Loader.clear": {"tf": 1}, "arc.present.loaders.BarLoader": {"tf": 1}, "arc.present.loaders.BarLoader.__init__": {"tf": 1}, "arc.present.loaders.BarLoader.FULL": {"tf": 1}, "arc.present.loaders.BarLoader.EMPTY": {"tf": 1}, "arc.present.loaders.BarLoader.render": {"tf": 1}, "arc.present.loaders.SlantLoader": {"tf": 1}, "arc.present.loaders.SlantLoader.FULL": {"tf": 1}, "arc.present.loaders.SlantLoader.EMPTY": {"tf": 1}, "arc.present.loaders.RectangleLoader": {"tf": 1}, "arc.present.loaders.RectangleLoader.FULL": {"tf": 1}, "arc.present.loaders.RectangleLoader.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman": {"tf": 1}, "arc.present.loaders.Pacman.__init__": {"tf": 1}, "arc.present.loaders.Pacman.FULL": {"tf": 1}, "arc.present.loaders.Pacman.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman.pacman": {"tf": 1}, "arc.present.loaders.Pacman.update": {"tf": 1}, "arc.present.table": {"tf": 1}, "arc.present.table.ColumnBase": {"tf": 1}, "arc.present.table.ColumnBase.name": {"tf": 1}, "arc.present.table.Column": {"tf": 1}, "arc.present.table.Column.justify": {"tf": 1}, "arc.present.table.Column.width": {"tf": 1}, "arc.present.table.Column.name": {"tf": 1}, "arc.present.table.DEFAULT_COLUMN": {"tf": 1}, "arc.present.table.Table": {"tf": 1}, "arc.present.table.Table.__init__": {"tf": 1}, "arc.present.table.Table.formatter": {"tf": 1}, "arc.present.table.Table.resize_columns": {"tf": 1}, "arc.prompt": {"tf": 1}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.helpers": {"tf": 1}, "arc.prompt.helpers.clear_line": {"tf": 1}, "arc.prompt.helpers.write": {"tf": 1}, "arc.prompt.prompt": {"tf": 1}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.prompt.Prompt.beautify": {"tf": 1}, "arc.prompt.prompt.Prompt.error": {"tf": 1}, "arc.prompt.prompt.Prompt.ok": {"tf": 1}, "arc.prompt.prompt.Prompt.no": {"tf": 1}, "arc.prompt.prompt.Prompt.act": {"tf": 1}, "arc.prompt.prompt.Prompt.warn": {"tf": 1}, "arc.prompt.prompt.Prompt.subtle": {"tf": 1}, "arc.prompt.prompt.Prompt.snake": {"tf": 1}, "arc.prompt.prompt.Prompt.emoji": {"tf": 1}, "arc.prompt.prompt.Prompt.colored": {"tf": 1}, "arc.prompt.questions": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.prompt.questions.is_list": {"tf": 1}, "arc.prompt.questions.QuestionError": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.Question.multi_line": {"tf": 1}, "arc.prompt.questions.Question.sensitive": {"tf": 1}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.prompt.questions.InputQuestion.__init__": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.result": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}, "arc.run": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.run.get_input": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}, "arc.run.find_command": {"tf": 1}, "arc.types": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.types.ArcType.__init__": {"tf": 1}, "arc.types.needs_cleanup": {"tf": 1}, "arc.types.file": {"tf": 1}, "arc.types.file.File": {"tf": 1}, "arc.types.file.File.__init__": {"tf": 1}, "arc.types.file.File.READ": {"tf": 1}, "arc.types.file.File.WRITE": {"tf": 1}, "arc.types.file.File.APPEND": {"tf": 1}, "arc.types.file.File.CREATE": {"tf": 1}, "arc.types.file.File.close": {"tf": 1}, "arc.types.file.File.open": {"tf": 1}, "arc.types.paths": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}, "arc.types.paths.ValidPath.__init__": {"tf": 1}, "arc.types.range": {"tf": 1}, "arc.types.range.Range": {"tf": 1}, "arc.types.range.Range.__init__": {"tf": 1}, "arc.types.range.Range.range": {"tf": 1}, "arc.types.range.Range.range_with_picked": {"tf": 1}, "arc.utilities": {"tf": 1}, "arc.utilities.debug": {"tf": 1}, "arc.utilities.files": {"tf": 1}, "arc.utilities.https": {"tf": 1}, "arc.utils": {"tf": 1}, "arc.utils.no_op": {"tf": 1}, "arc.utils.timer": {"tf": 1}, "arc.utils.symbol": {"tf": 1}, "arc.utils.symbol.__init__": {"tf": 1}, "arc.utils.symbol.name": {"tf": 1}, "arc.utils.indent": {"tf": 1}, "arc.utils.handle": {"tf": 1}, "arc.utils.handle.__init__": {"tf": 1}, "arc.utils.format_exception": {"tf": 1}, "arc.utils.unwrap_type": {"tf": 1}, "arc.utils.is_alias": {"tf": 1}, "arc.utils.header": {"tf": 1}}, "df": 431, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.prefixes": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 3}}}}}}}, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.color.fg.ARC_BLUE": {"tf": 1}, "arc.color.bg.ARC_BLUE": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.arc_converters": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.range": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}}, "df": 8}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ArcError": {"tf": 1}, "arc.errors.ArcError.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.types.ArcType": {"tf": 1}, "arc.types.ArcType.__init__": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks.callbacks.around": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"arc.command.argument_parser.ArgumentParser.args": {"tf": 1}, "arc.command.helpers.ArgBuilder.args": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument": {"tf": 1}, "arc.command.argument.Argument": {"tf": 1.4142135623730951}, "arc.command.argument.Argument.__init__": {"tf": 1.4142135623730951}, "arc.command.argument.Argument.name": {"tf": 1.4142135623730951}, "arc.command.argument.Argument.convert": {"tf": 1.4142135623730951}, "arc.command.argument.Argument.is_flag": {"tf": 1.4142135623730951}, "arc.command.argument.Argument.is_optional": {"tf": 1.4142135623730951}}, "df": 7, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_matchers": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.handle_match": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.fill_unmatched": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.build_args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_or_raise": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_match_values": {"tf": 1}, "arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.FlagParser.matchers": {"tf": 1}, "arc.command.argument_parser.FlagParser.handle_flag": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.argument_parser.KeyArg.name": {"tf": 1}, "arc.command.argument_parser.KeyArg.value": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser.matchers": {"tf": 1}, "arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser.__init__": {"tf": 1}, "arc.command.argument_parser.PositionalParser.matchers": {"tf": 1}, "arc.command.argument_parser.PositionalParser.current_pos": {"tf": 1}, "arc.command.argument_parser.PositionalParser.var_args": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.handle_positional_argument": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.__init__": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}}, "df": 37}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_matchers": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.handle_match": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.fill_unmatched": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.build_args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_or_raise": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_match_values": {"tf": 1}}, "df": 11}}}}}}}}}, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"arc.config.Config.arg_assignment": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.helpers.ArgBuilder": {"tf": 1}, "arc.command.helpers.ArgBuilder.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder.args": {"tf": 1}, "arc.command.helpers.ArgBuilder.add_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.is_hidden_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.get_meta": {"tf": 1}}, "df": 6}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"arc.application": {"tf": 1}, "arc.application.application": {"tf": 1.4142135623730951}, "arc.application.application.OpenEnum": {"tf": 1.4142135623730951}, "arc.application.application.OpenEnum.SOURCE": {"tf": 1.4142135623730951}, "arc.application.application.OpenEnum.WIKI": {"tf": 1.4142135623730951}, "arc.application.application.OpenEnum.DOCS": {"tf": 1.4142135623730951}, "arc.application.application.InitEnum": {"tf": 1.4142135623730951}, "arc.application.application.InitEnum.POETRY": {"tf": 1.4142135623730951}, "arc.application.application.classify": {"tf": 1.4142135623730951}, "arc.application.application.color_print": {"tf": 1.4142135623730951}, "arc.application.templates": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.types.file.File.APPEND": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.autoload": {"tf": 1}, "arc.autoload.Autoload": {"tf": 1.4142135623730951}, "arc.autoload.Autoload.__init__": {"tf": 1.4142135623730951}, "arc.autoload.Autoload.load": {"tf": 1.4142135623730951}, "arc.autoload.Autoload.path": {"tf": 1.4142135623730951}, "arc.cli.CLI.autoload": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.act": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks.actions": {"tf": 1}, "arc.callbacks.actions.open_file": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ActionError": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.after_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.helpers.ArgBuilder.add_arg": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.base_converter.BaseConverter.annotation": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"arc.prompt.prompt.Prompt.ask": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.types.file.File.open": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.application.application.OpenEnum": {"tf": 1}, "arc.application.application.OpenEnum.SOURCE": {"tf": 1}, "arc.application.application.OpenEnum.WIKI": {"tf": 1}, "arc.application.application.OpenEnum.DOCS": {"tf": 1}}, "df": 4}}}}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"arc.prompt.prompt.Prompt.ok": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"arc.application.application.OpenEnum.SOURCE": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"arc.callbacks.callbacks.skip": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"arc.color.effects.STRIKETHROUGH": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.StringConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.start_around_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Styler.__init__": {"tf": 1}, "arc.present.loaders.Styler.style_full": {"tf": 1}, "arc.present.loaders.Styler.style_empty": {"tf": 1}, "arc.present.loaders.Loader.styler": {"tf": 1}}, "df": 5}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.loaders.Styler.style_full": {"tf": 1}, "arc.present.loaders.Transiton.style_full": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"arc.present.loaders.Styler.style_empty": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.command.Command.subcommands": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.command.Command.subcommand_aliases": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"arc.prompt.prompt.Prompt.subtle": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.config.ConfigBase.set_values": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.SetConverter": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.segments": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"arc.config.Config.short_flag_denoter": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.loaders.SlantLoader": {"tf": 1}, "arc.present.loaders.SlantLoader.FULL": {"tf": 1}, "arc.present.loaders.SlantLoader.EMPTY": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"arc.prompt.prompt.Prompt.snake": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.utils.symbol": {"tf": 1}, "arc.utils.symbol.__init__": {"tf": 1}, "arc.utils.symbol.name": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"arc.application.application.OpenEnum.WIKI": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.present.table.Column.width": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"arc.color.fg.WHITE": {"tf": 1}, "arc.color.bg.WHITE": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"arc.prompt.helpers.write": {"tf": 1}, "arc.types.file.File.WRITE": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.prompt.Prompt.warn": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"arc.application.application.OpenEnum.DOCS": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {"arc.present.loaders.Loader.done": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.default": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.default_action": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.table.DEFAULT_COLUMN": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"arc.utilities.debug": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"arc.help_text.display_help": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"arc.present.data": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.application.application.InitEnum": {"tf": 1}, "arc.application.application.InitEnum.POETRY": {"tf": 1}}, "df": 2}}}}}}, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.callbacks.validators.in_range": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.command.Command.install_commands": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.IntConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input": {"tf": 1}, "arc.convert.input.base_input_func": {"tf": 1}, "arc.convert.input.input_to_TextIO": {"tf": 1}, "arc.convert.input.input_to_IO": {"tf": 1}, "arc.convert.input.input_to_BinaryIO": {"tf": 1}, "arc.convert.input.input_to_str": {"tf": 1}, "arc.convert.input.input_to_int": {"tf": 1}, "arc.convert.input.input_to_float": {"tf": 1}, "arc.convert.input.input_to_bytes": {"tf": 1}, "arc.convert.input.input_to_bool": {"tf": 1}, "arc.convert.input.input_to_Enum": {"tf": 1}, "arc.convert.input.input_to_Path": {"tf": 1}, "arc.convert.input.input_to_File": {"tf": 1}, "arc.convert.input.input_to_Range": {"tf": 1}, "arc.convert.input.input_to_ValidPath": {"tf": 1}, "arc.convert.input.input_to_list": {"tf": 1}, "arc.convert.input.input_to_set": {"tf": 1}, "arc.convert.input.input_to_tuple": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}}, "df": 19, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.input.input_to_TextIO": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.input.input_to_tuple": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.input.input_to_IO": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_int": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.input.input_to_BinaryIO": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_bytes": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.input.input_to_bool": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.input.input_to_str": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_set": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_float": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.input.input_to_File": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.convert.input.input_to_Enum": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert.input.input_to_Path": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert.input.input_to_Range": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert.input.input_to_ValidPath": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.input.input_to_list": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.prompt.questions.InputQuestion.__init__": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}}, "df": 4}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.utils.indent": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.color.effects.ITALIC": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument.Argument.is_flag": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument.Argument.is_optional": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.helpers.ArgBuilder.is_hidden_arg": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.is_int": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.is_list": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"arc.utils.is_alias": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.application.application.InitEnum.POETRY": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser.__init__": {"tf": 1}, "arc.command.argument_parser.PositionalParser.matchers": {"tf": 1}, "arc.command.argument_parser.PositionalParser.current_pos": {"tf": 1}, "arc.command.argument_parser.PositionalParser.var_args": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.handle_positional_argument": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}}, "df": 8}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.config.ConfigBase.post_load": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.autoload.Autoload.path": {"tf": 1}, "arc.types.paths": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}, "arc.types.paths.ValidPath.__init__": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.lib_converters.PathConverter": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.argument_parser.ParsingMethod": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.__init__": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}}, "df": 6}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.parser": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ParserError": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {"arc.command.helpers.ParamProxy": {"tf": 1}, "arc.command.helpers.ParamProxy.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.box.Box.pad_line": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.loaders.Pacman": {"tf": 1}, "arc.present.loaders.Pacman.__init__": {"tf": 1}, "arc.present.loaders.Pacman.FULL": {"tf": 1}, "arc.present.loaders.Pacman.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman.pacman": {"tf": 1.4142135623730951}, "arc.present.loaders.Pacman.update": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"arc.cli.ArcFormatter.prefixes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present": {"tf": 1}, "arc.present.box": {"tf": 1}, "arc.present.box.Box": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.present.box.Box.border": {"tf": 1}, "arc.present.box.Box.horizontal_border": {"tf": 1}, "arc.present.box.Box.format_line": {"tf": 1}, "arc.present.box.Box.pad_line": {"tf": 1}, "arc.present.data": {"tf": 1}, "arc.present.loaders": {"tf": 1}, "arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Styler.__init__": {"tf": 1}, "arc.present.loaders.Styler.style_full": {"tf": 1}, "arc.present.loaders.Styler.style_empty": {"tf": 1}, "arc.present.loaders.default": {"tf": 1}, "arc.present.loaders.Transiton": {"tf": 1}, "arc.present.loaders.Transiton.__init__": {"tf": 1}, "arc.present.loaders.Transiton.style_full": {"tf": 1}, "arc.present.loaders.Loader": {"tf": 1}, "arc.present.loaders.Loader.__init__": {"tf": 1}, "arc.present.loaders.Loader.progress": {"tf": 1}, "arc.present.loaders.Loader.segments": {"tf": 1}, "arc.present.loaders.Loader.format_str": {"tf": 1}, "arc.present.loaders.Loader.styler": {"tf": 1}, "arc.present.loaders.Loader.done": {"tf": 1}, "arc.present.loaders.Loader.percent": {"tf": 1}, "arc.present.loaders.Loader.render": {"tf": 1}, "arc.present.loaders.Loader.update": {"tf": 1}, "arc.present.loaders.Loader.print": {"tf": 1}, "arc.present.loaders.Loader.clear": {"tf": 1}, "arc.present.loaders.BarLoader": {"tf": 1}, "arc.present.loaders.BarLoader.__init__": {"tf": 1}, "arc.present.loaders.BarLoader.FULL": {"tf": 1}, "arc.present.loaders.BarLoader.EMPTY": {"tf": 1}, "arc.present.loaders.BarLoader.render": {"tf": 1}, "arc.present.loaders.SlantLoader": {"tf": 1}, "arc.present.loaders.SlantLoader.FULL": {"tf": 1}, "arc.present.loaders.SlantLoader.EMPTY": {"tf": 1}, "arc.present.loaders.RectangleLoader": {"tf": 1}, "arc.present.loaders.RectangleLoader.FULL": {"tf": 1}, "arc.present.loaders.RectangleLoader.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman": {"tf": 1}, "arc.present.loaders.Pacman.__init__": {"tf": 1}, "arc.present.loaders.Pacman.FULL": {"tf": 1}, "arc.present.loaders.Pacman.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman.pacman": {"tf": 1}, "arc.present.loaders.Pacman.update": {"tf": 1}, "arc.present.table": {"tf": 1}, "arc.present.table.ColumnBase": {"tf": 1}, "arc.present.table.ColumnBase.name": {"tf": 1}, "arc.present.table.Column": {"tf": 1}, "arc.present.table.Column.justify": {"tf": 1}, "arc.present.table.Column.width": {"tf": 1}, "arc.present.table.Column.name": {"tf": 1}, "arc.present.table.DEFAULT_COLUMN": {"tf": 1}, "arc.present.table.Table": {"tf": 1}, "arc.present.table.Table.__init__": {"tf": 1}, "arc.present.table.Table.formatter": {"tf": 1}, "arc.present.table.Table.resize_columns": {"tf": 1}}, "df": 59}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.present.loaders.Loader.progress": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt": {"tf": 1}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.helpers": {"tf": 1}, "arc.prompt.helpers.clear_line": {"tf": 1}, "arc.prompt.helpers.write": {"tf": 1}, "arc.prompt.prompt": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.previous_answers": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.ask": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.input": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.beautify": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.error": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.ok": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.no": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.act": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.warn": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.subtle": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.snake": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.emoji": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.colored": {"tf": 1.7320508075688772}, "arc.prompt.questions": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.prompt.questions.is_list": {"tf": 1}, "arc.prompt.questions.QuestionError": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.Question.multi_line": {"tf": 1}, "arc.prompt.questions.Question.sensitive": {"tf": 1}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.prompt.questions.InputQuestion.__init__": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.result": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 48}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.print": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.percent": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"arc.application.application.classify": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"arc.cli": {"tf": 1}, "arc.cli.CLI": {"tf": 1.4142135623730951}, "arc.cli.CLI.__init__": {"tf": 1.4142135623730951}, "arc.cli.CLI.default_action": {"tf": 1.4142135623730951}, "arc.cli.CLI.command": {"tf": 1.4142135623730951}, "arc.cli.CLI.base": {"tf": 1.4142135623730951}, "arc.cli.CLI.missing_command": {"tf": 1.4142135623730951}, "arc.cli.CLI.autocomplete": {"tf": 1.4142135623730951}, "arc.cli.CLI.autoload": {"tf": 1.4142135623730951}, "arc.cli.CLI.helper": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.prefixes": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 13}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc.color.effects.CLEAR": {"tf": 1}, "arc.present.loaders.Loader.clear": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.helpers.clear_line": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.types.file.File.close": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.color": {"tf": 1}, "arc.color.Color": {"tf": 1.4142135623730951}, "arc.color.Color.__init__": {"tf": 1.4142135623730951}, "arc.color.Color.ESCAPE": {"tf": 1.4142135623730951}, "arc.color.Color.bright": {"tf": 1.4142135623730951}, "arc.color.fg": {"tf": 1}, "arc.color.fg.__init__": {"tf": 1}, "arc.color.fg.BLACK": {"tf": 1}, "arc.color.fg.RED": {"tf": 1}, "arc.color.fg.GREEN": {"tf": 1}, "arc.color.fg.YELLOW": {"tf": 1}, "arc.color.fg.BLUE": {"tf": 1}, "arc.color.fg.MAGENTA": {"tf": 1}, "arc.color.fg.CYAN": {"tf": 1}, "arc.color.fg.WHITE": {"tf": 1}, "arc.color.fg.GREY": {"tf": 1}, "arc.color.fg.ARC_BLUE": {"tf": 1}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg": {"tf": 1}, "arc.color.bg.__init__": {"tf": 1}, "arc.color.bg.BLACK": {"tf": 1}, "arc.color.bg.RED": {"tf": 1}, "arc.color.bg.GREEN": {"tf": 1}, "arc.color.bg.YELLOW": {"tf": 1}, "arc.color.bg.BLUE": {"tf": 1}, "arc.color.bg.MAGENTA": {"tf": 1}, "arc.color.bg.CYAN": {"tf": 1}, "arc.color.bg.WHITE": {"tf": 1}, "arc.color.bg.GREY": {"tf": 1}, "arc.color.bg.ARC_BLUE": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}, "arc.color.effects": {"tf": 1}, "arc.color.effects.__init__": {"tf": 1}, "arc.color.effects.CLEAR": {"tf": 1}, "arc.color.effects.BOLD": {"tf": 1}, "arc.color.effects.ITALIC": {"tf": 1}, "arc.color.effects.UNDERLINE": {"tf": 1}, "arc.color.effects.STRIKETHROUGH": {"tf": 1}, "arc.prompt.prompt.Prompt.colored": {"tf": 1}}, "df": 41, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.application.application.color_print": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.table.Column": {"tf": 1}, "arc.present.table.Column.justify": {"tf": 1}, "arc.present.table.Column.width": {"tf": 1}, "arc.present.table.Column.name": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.present.table.ColumnBase": {"tf": 1}, "arc.present.table.ColumnBase.name": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.CLI.command": {"tf": 1}, "arc.command": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.argument": {"tf": 1}, "arc.command.argument.Argument": {"tf": 1}, "arc.command.argument.Argument.__init__": {"tf": 1}, "arc.command.argument.Argument.name": {"tf": 1}, "arc.command.argument.Argument.convert": {"tf": 1}, "arc.command.argument.Argument.is_flag": {"tf": 1}, "arc.command.argument.Argument.is_optional": {"tf": 1}, "arc.command.argument_parser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_matchers": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.handle_match": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.fill_unmatched": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.build_args": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_or_raise": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.get_match_values": {"tf": 1}, "arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.FlagParser.matchers": {"tf": 1}, "arc.command.argument_parser.FlagParser.handle_flag": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.argument_parser.KeyArg.name": {"tf": 1}, "arc.command.argument_parser.KeyArg.value": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser.matchers": {"tf": 1}, "arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser.__init__": {"tf": 1}, "arc.command.argument_parser.PositionalParser.matchers": {"tf": 1}, "arc.command.argument_parser.PositionalParser.current_pos": {"tf": 1}, "arc.command.argument_parser.PositionalParser.var_args": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.handle_positional_argument": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.__init__": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}, "arc.command.command": {"tf": 1.4142135623730951}, "arc.command.command.Command": {"tf": 1.7320508075688772}, "arc.command.command.Command.__init__": {"tf": 1.7320508075688772}, "arc.command.command.Command.subcommands": {"tf": 1.7320508075688772}, "arc.command.command.Command.subcommand_aliases": {"tf": 1.7320508075688772}, "arc.command.command.Command.parser": {"tf": 1.7320508075688772}, "arc.command.command.Command.function": {"tf": 1.7320508075688772}, "arc.command.command.Command.run": {"tf": 1.7320508075688772}, "arc.command.command.Command.subcommand": {"tf": 1.7320508075688772}, "arc.command.command.Command.base": {"tf": 1.7320508075688772}, "arc.command.command.Command.install_commands": {"tf": 1.7320508075688772}, "arc.command.command.Command.install_command": {"tf": 1.7320508075688772}, "arc.command.command.Command.handle_command_aliases": {"tf": 1.7320508075688772}, "arc.command.command.Command.ensure_function": {"tf": 1.7320508075688772}, "arc.command.command_executor": {"tf": 1}, "arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.command.command_executor.CommandExecutor.__init__": {"tf": 1}, "arc.command.command_executor.CommandExecutor.function": {"tf": 1}, "arc.command.command_executor.CommandExecutor.callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.non_inheritable": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callback": {"tf": 1}, "arc.command.command_executor.CommandExecutor.before_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.after_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.start_around_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.end_around_callbacks": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.command.context.Context": {"tf": 1}, "arc.command.helpers": {"tf": 1}, "arc.command.helpers.ParamProxy": {"tf": 1}, "arc.command.helpers.ParamProxy.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder": {"tf": 1}, "arc.command.helpers.ArgBuilder.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder.args": {"tf": 1}, "arc.command.helpers.ArgBuilder.add_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.is_hidden_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.get_meta": {"tf": 1}}, "df": 86, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command_executor": {"tf": 1}, "arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.command.command_executor.CommandExecutor.__init__": {"tf": 1}, "arc.command.command_executor.CommandExecutor.function": {"tf": 1}, "arc.command.command_executor.CommandExecutor.callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.non_inheritable": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callback": {"tf": 1}, "arc.command.command_executor.CommandExecutor.before_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.after_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.start_around_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.end_around_callbacks": {"tf": 1}}, "df": 14}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.command.command_executor.CommandExecutor.__init__": {"tf": 1}, "arc.command.command_executor.CommandExecutor.function": {"tf": 1}, "arc.command.command_executor.CommandExecutor.callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.non_inheritable": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.command.command_executor.CommandExecutor.inheritable_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callback": {"tf": 1}, "arc.command.command_executor.CommandExecutor.before_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.after_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.start_around_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.end_around_callbacks": {"tf": 1}}, "df": 13}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.CommandError": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument.Argument.convert": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.convert.convert": {"tf": 1.4142135623730951}, "arc.convert.converters": {"tf": 1.4142135623730951}, "arc.convert.converters.arc_converters": {"tf": 1.4142135623730951}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.arc_converters.RangeConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.arc_converters.RangeConverter.range": {"tf": 1.4142135623730951}, "arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.base_converter": {"tf": 1.4142135623730951}, "arc.convert.converters.base_converter.BaseConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.base_converter.BaseConverter.annotation": {"tf": 1.4142135623730951}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.StringConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.IntConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.converter_mapping": {"tf": 1.4142135623730951}, "arc.convert.converters.converter_mapping.converter_mapping": {"tf": 1.4142135623730951}, "arc.convert.converters.converter_mapping.register": {"tf": 1.4142135623730951}, "arc.convert.converters.converter_mapping.get_converter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.GenericConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.UnionConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.ListConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.SetConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.TupleConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"tf": 1.4142135623730951}, "arc.convert.converters.lib_converters": {"tf": 1.4142135623730951}, "arc.convert.converters.lib_converters.EnumConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.lib_converters.PathConverter": {"tf": 1.4142135623730951}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1.7320508075688772}, "arc.convert.input": {"tf": 1}, "arc.convert.input.base_input_func": {"tf": 1}, "arc.convert.input.input_to_TextIO": {"tf": 1}, "arc.convert.input.input_to_IO": {"tf": 1}, "arc.convert.input.input_to_BinaryIO": {"tf": 1}, "arc.convert.input.input_to_str": {"tf": 1}, "arc.convert.input.input_to_int": {"tf": 1}, "arc.convert.input.input_to_float": {"tf": 1}, "arc.convert.input.input_to_bytes": {"tf": 1}, "arc.convert.input.input_to_bool": {"tf": 1}, "arc.convert.input.input_to_Enum": {"tf": 1}, "arc.convert.input.input_to_Path": {"tf": 1}, "arc.convert.input.input_to_File": {"tf": 1}, "arc.convert.input.input_to_Range": {"tf": 1}, "arc.convert.input.input_to_ValidPath": {"tf": 1}, "arc.convert.input.input_to_list": {"tf": 1}, "arc.convert.input.input_to_set": {"tf": 1}, "arc.convert.input.input_to_tuple": {"tf": 1}}, "df": 77, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert.converters.converter_mapping": {"tf": 1}, "arc.convert.converters.converter_mapping.converter_mapping": {"tf": 1.4142135623730951}, "arc.convert.converters.converter_mapping.register": {"tf": 1}, "arc.convert.converters.converter_mapping.get_converter": {"tf": 1}}, "df": 4}}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ConversionError": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 1}, "arc.command.context.Context": {"tf": 1.4142135623730951}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"arc.config": {"tf": 1}, "arc.config.ConfigBase": {"tf": 1}, "arc.config.ConfigBase.__init__": {"tf": 1}, "arc.config.ConfigBase.ENV_PREFIX": {"tf": 1}, "arc.config.ConfigBase.last_loaded": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.config.ConfigBase.post_load": {"tf": 1}, "arc.config.Config": {"tf": 1.4142135623730951}, "arc.config.Config.__init__": {"tf": 1.4142135623730951}, "arc.config.Config.ENV_PREFIX": {"tf": 1.4142135623730951}, "arc.config.Config.namespace_sep": {"tf": 1.4142135623730951}, "arc.config.Config.arg_assignment": {"tf": 1.4142135623730951}, "arc.config.Config.flag_denoter": {"tf": 1.4142135623730951}, "arc.config.Config.short_flag_denoter": {"tf": 1.4142135623730951}, "arc.config.Config.mode": {"tf": 1.4142135623730951}, "arc.config.Config.mode_map": {"tf": 1.4142135623730951}, "arc.config.config": {"tf": 1.4142135623730951}}, "df": 20, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.config.ConfigBase": {"tf": 1}, "arc.config.ConfigBase.__init__": {"tf": 1}, "arc.config.ConfigBase.ENV_PREFIX": {"tf": 1}, "arc.config.ConfigBase.last_loaded": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.config.ConfigBase.post_load": {"tf": 1}}, "df": 9}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}}, "df": 2, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.ConfirmQuestion": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.result": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 5}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.actions": {"tf": 1}, "arc.callbacks.actions.open_file": {"tf": 1}, "arc.callbacks.callbacks": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.register_wrapper": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.callback": {"tf": 1.7320508075688772}, "arc.callbacks.callbacks.callback_helper": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.before": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.after": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.around": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.skip": {"tf": 1.4142135623730951}, "arc.callbacks.validators": {"tf": 1}, "arc.callbacks.validators.in_range": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.command.command_executor.CommandExecutor.callbacks": {"tf": 1}}, "df": 15, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"arc.color.fg.CYAN": {"tf": 1}, "arc.color.bg.CYAN": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {"arc.command.argument_parser.PositionalParser.current_pos": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.file.File.CREATE": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.application.templates": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.TupleConverter": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"tf": 1}}, "df": 3}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.TokenizerError": {"tf": 1}, "arc.errors.TokenizerError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.loaders.Transiton": {"tf": 1}, "arc.present.loaders.Transiton.__init__": {"tf": 1}, "arc.present.loaders.Transiton.style_full": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.table": {"tf": 1}, "arc.present.table.ColumnBase": {"tf": 1}, "arc.present.table.ColumnBase.name": {"tf": 1}, "arc.present.table.Column": {"tf": 1}, "arc.present.table.Column.justify": {"tf": 1}, "arc.present.table.Column.width": {"tf": 1}, "arc.present.table.Column.name": {"tf": 1}, "arc.present.table.DEFAULT_COLUMN": {"tf": 1}, "arc.present.table.Table": {"tf": 1.4142135623730951}, "arc.present.table.Table.__init__": {"tf": 1.4142135623730951}, "arc.present.table.Table.formatter": {"tf": 1.4142135623730951}, "arc.present.table.Table.resize_columns": {"tf": 1.4142135623730951}}, "df": 12}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"arc.types": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.types.ArcType.__init__": {"tf": 1}, "arc.types.needs_cleanup": {"tf": 1}, "arc.types.file": {"tf": 1}, "arc.types.file.File": {"tf": 1}, "arc.types.file.File.__init__": {"tf": 1}, "arc.types.file.File.READ": {"tf": 1}, "arc.types.file.File.WRITE": {"tf": 1}, "arc.types.file.File.APPEND": {"tf": 1}, "arc.types.file.File.CREATE": {"tf": 1}, "arc.types.file.File.close": {"tf": 1}, "arc.types.file.File.open": {"tf": 1}, "arc.types.paths": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}, "arc.types.paths.ValidPath.__init__": {"tf": 1}, "arc.types.range": {"tf": 1}, "arc.types.range.Range": {"tf": 1}, "arc.types.range.Range.__init__": {"tf": 1}, "arc.types.range.Range.range": {"tf": 1}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 21}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.utils.timer": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"arc.autoload.Autoload.__init__": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.color.Color.__init__": {"tf": 1}, "arc.color.fg.__init__": {"tf": 1}, "arc.color.bg.__init__": {"tf": 1}, "arc.color.effects.__init__": {"tf": 1}, "arc.command.argument.Argument.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.__init__": {"tf": 1}, "arc.command.argument_parser.PositionalParser.__init__": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.__init__": {"tf": 1}, "arc.command.command.Command.__init__": {"tf": 1}, "arc.command.command_executor.CommandExecutor.__init__": {"tf": 1}, "arc.command.helpers.ParamProxy.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder.__init__": {"tf": 1}, "arc.config.ConfigBase.__init__": {"tf": 1}, "arc.config.Config.__init__": {"tf": 1}, "arc.errors.ArcError.__init__": {"tf": 1}, "arc.errors.TokenizerError.__init__": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.present.loaders.Styler.__init__": {"tf": 1}, "arc.present.loaders.Transiton.__init__": {"tf": 1}, "arc.present.loaders.Loader.__init__": {"tf": 1}, "arc.present.loaders.BarLoader.__init__": {"tf": 1}, "arc.present.loaders.Pacman.__init__": {"tf": 1}, "arc.present.table.Table.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.questions.InputQuestion.__init__": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.types.ArcType.__init__": {"tf": 1}, "arc.types.file.File.__init__": {"tf": 1}, "arc.types.paths.ValidPath.__init__": {"tf": 1}, "arc.types.range.Range.__init__": {"tf": 1}, "arc.utils.symbol.__init__": {"tf": 1}, "arc.utils.handle.__init__": {"tf": 1}}, "df": 36}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.autoload.Autoload.load": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders": {"tf": 1}, "arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Styler.__init__": {"tf": 1}, "arc.present.loaders.Styler.style_full": {"tf": 1}, "arc.present.loaders.Styler.style_empty": {"tf": 1}, "arc.present.loaders.default": {"tf": 1}, "arc.present.loaders.Transiton": {"tf": 1}, "arc.present.loaders.Transiton.__init__": {"tf": 1}, "arc.present.loaders.Transiton.style_full": {"tf": 1}, "arc.present.loaders.Loader": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.__init__": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.progress": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.segments": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.format_str": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.styler": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.done": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.percent": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.render": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.update": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.print": {"tf": 1.4142135623730951}, "arc.present.loaders.Loader.clear": {"tf": 1.4142135623730951}, "arc.present.loaders.BarLoader": {"tf": 1}, "arc.present.loaders.BarLoader.__init__": {"tf": 1}, "arc.present.loaders.BarLoader.FULL": {"tf": 1}, "arc.present.loaders.BarLoader.EMPTY": {"tf": 1}, "arc.present.loaders.BarLoader.render": {"tf": 1}, "arc.present.loaders.SlantLoader": {"tf": 1}, "arc.present.loaders.SlantLoader.FULL": {"tf": 1}, "arc.present.loaders.SlantLoader.EMPTY": {"tf": 1}, "arc.present.loaders.RectangleLoader": {"tf": 1}, "arc.present.loaders.RectangleLoader.FULL": {"tf": 1}, "arc.present.loaders.RectangleLoader.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman": {"tf": 1}, "arc.present.loaders.Pacman.__init__": {"tf": 1}, "arc.present.loaders.Pacman.FULL": {"tf": 1}, "arc.present.loaders.Pacman.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman.pacman": {"tf": 1}, "arc.present.loaders.Pacman.update": {"tf": 1}}, "df": 38}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.config.ConfigBase.last_loaded": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.ListConverter": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}}, "df": 2}}}}}}}}}, "b": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.lib_converters": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}}, "df": 5}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.converter_mapping.register": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"arc.callbacks.callbacks.register_wrapper": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.register_callbacks": {"tf": 1}, "arc.command.command_executor.CommandExecutor.register_callback": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "d": {"docs": {"arc.color.fg.RED": {"tf": 1}, "arc.color.bg.RED": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders.Loader.render": {"tf": 1}, "arc.present.loaders.BarLoader.render": {"tf": 1}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.loaders.RectangleLoader": {"tf": 1}, "arc.present.loaders.RectangleLoader.FULL": {"tf": 1}, "arc.present.loaders.RectangleLoader.EMPTY": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.table.Table.resize_columns": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.ConfirmQuestion.result": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.types.file.File.READ": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"arc.color.fg.rgb": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.RawParser": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert.converters.arc_converters.RangeConverter.range": {"tf": 1}, "arc.types.range": {"tf": 1}, "arc.types.range.Range": {"tf": 1.4142135623730951}, "arc.types.range.Range.__init__": {"tf": 1.4142135623730951}, "arc.types.range.Range.range": {"tf": 1.7320508075688772}, "arc.types.range.Range.range_with_picked": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.arc_converters.RangeConverter": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.range": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.handle_answer": {"tf": 1}}, "df": 4}}}}}, "_": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"arc.command.command.Command.run": {"tf": 1}, "arc.run": {"tf": 1}, "arc.run.run": {"tf": 1.4142135623730951}, "arc.run.get_input": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}, "arc.run.find_command": {"tf": 1}}, "df": 6}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks.callbacks.before": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.before_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"arc.prompt.prompt.Prompt.beautify": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.CLI.base": {"tf": 1}, "arc.command.command.Command.base": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.base_converter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.annotation": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"arc.convert.input.base_input_func": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.base_converter.BaseConverter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.annotation": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.loaders.BarLoader": {"tf": 1}, "arc.present.loaders.BarLoader.__init__": {"tf": 1}, "arc.present.loaders.BarLoader.FULL": {"tf": 1}, "arc.present.loaders.BarLoader.EMPTY": {"tf": 1}, "arc.present.loaders.BarLoader.render": {"tf": 1}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"arc.color.Color.bright": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.color.fg.BLACK": {"tf": 1}, "arc.color.bg.BLACK": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"arc.color.fg.BLUE": {"tf": 1}, "arc.color.bg.BLUE": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"arc.color.bg": {"tf": 1}, "arc.color.bg.__init__": {"tf": 1}, "arc.color.bg.BLACK": {"tf": 1}, "arc.color.bg.RED": {"tf": 1}, "arc.color.bg.GREEN": {"tf": 1}, "arc.color.bg.YELLOW": {"tf": 1}, "arc.color.bg.BLUE": {"tf": 1}, "arc.color.bg.MAGENTA": {"tf": 1}, "arc.color.bg.CYAN": {"tf": 1}, "arc.color.bg.WHITE": {"tf": 1}, "arc.color.bg.GREY": {"tf": 1}, "arc.color.bg.ARC_BLUE": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 14}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc.color.effects.BOLD": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}, "x": {"docs": {"arc.present.box": {"tf": 1}, "arc.present.box.Box": {"tf": 1.4142135623730951}, "arc.present.box.Box.__init__": {"tf": 1.4142135623730951}, "arc.present.box.Box.border": {"tf": 1.4142135623730951}, "arc.present.box.Box.horizontal_border": {"tf": 1.4142135623730951}, "arc.present.box.Box.format_line": {"tf": 1.4142135623730951}, "arc.present.box.Box.pad_line": {"tf": 1.4142135623730951}}, "df": 7}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.box.Box.border": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.ArgumentParser.build_args": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks.validators": {"tf": 1}, "arc.callbacks.validators.in_range": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}}, "df": 3, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.callbacks.validators.valid_path": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.types.paths.ValidPath": {"tf": 1}, "arc.types.paths.ValidPath.__init__": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ValidationError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {"arc.command.argument_parser.KeyArg.value": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.PositionalParser.var_args": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.CLI.missing_command": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"arc.color.fg.MAGENTA": {"tf": 1}, "arc.color.bg.MAGENTA": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.FlagParser.matchers": {"tf": 1}, "arc.command.argument_parser.KeywordParser.matchers": {"tf": 1}, "arc.command.argument_parser.PositionalParser.matchers": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"arc.config.Config.mode": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.config.Config.mode_map": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.questions.Question.multi_line": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.CLI.helper": {"tf": 1}, "arc.command.helpers": {"tf": 1}, "arc.command.helpers.ParamProxy": {"tf": 1}, "arc.command.helpers.ParamProxy.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder": {"tf": 1}, "arc.command.helpers.ArgBuilder.__init__": {"tf": 1}, "arc.command.helpers.ArgBuilder.args": {"tf": 1}, "arc.command.helpers.ArgBuilder.add_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.is_hidden_arg": {"tf": 1}, "arc.command.helpers.ArgBuilder.get_meta": {"tf": 1}, "arc.prompt.helpers": {"tf": 1}, "arc.prompt.helpers.clear_line": {"tf": 1}, "arc.prompt.helpers.write": {"tf": 1}}, "df": 13}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"arc.help_text": {"tf": 1}, "arc.help_text.display_help": {"tf": 1}, "arc.help_text.generate_help": {"tf": 1}}, "df": 3}}}}}}}, "x": {"docs": {"arc.color.fg.hex": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.utils.header": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"arc.utils.handle": {"tf": 1}, "arc.utils.handle.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser.handle_match": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.FlagParser.handle_flag": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {"arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {"arc.command.argument_parser.PositionalParser.handle_positional_argument": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.command.Command.handle_command_aliases": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.RangeQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 5}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.box.Box.horizontal_border": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"arc.utilities.https": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.box.Box.format_line": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.loaders.Loader.format_str": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.utils.format_exception": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"arc.present.table.Table.formatter": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"arc.color.fg": {"tf": 1}, "arc.color.fg.__init__": {"tf": 1}, "arc.color.fg.BLACK": {"tf": 1}, "arc.color.fg.RED": {"tf": 1}, "arc.color.fg.GREEN": {"tf": 1}, "arc.color.fg.YELLOW": {"tf": 1}, "arc.color.fg.BLUE": {"tf": 1}, "arc.color.fg.MAGENTA": {"tf": 1}, "arc.color.fg.CYAN": {"tf": 1}, "arc.color.fg.WHITE": {"tf": 1}, "arc.color.fg.GREY": {"tf": 1}, "arc.color.fg.ARC_BLUE": {"tf": 1}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}}, "df": 14}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser.fill_unmatched": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"arc.types.file": {"tf": 1}, "arc.types.file.File": {"tf": 1.4142135623730951}, "arc.types.file.File.__init__": {"tf": 1.4142135623730951}, "arc.types.file.File.READ": {"tf": 1.4142135623730951}, "arc.types.file.File.WRITE": {"tf": 1.4142135623730951}, "arc.types.file.File.APPEND": {"tf": 1.4142135623730951}, "arc.types.file.File.CREATE": {"tf": 1.4142135623730951}, "arc.types.file.File.close": {"tf": 1.4142135623730951}, "arc.types.file.File.open": {"tf": 1.4142135623730951}, "arc.utilities.files": {"tf": 1}}, "df": 10, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.FlagParser.matchers": {"tf": 1}, "arc.command.argument_parser.FlagParser.handle_flag": {"tf": 1}}, "df": 3}}}}, "_": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"arc.config.Config.flag_denoter": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.command.command.Command.function": {"tf": 1}, "arc.command.command_executor.CommandExecutor.function": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.loaders.BarLoader.FULL": {"tf": 1}, "arc.present.loaders.SlantLoader.FULL": {"tf": 1}, "arc.present.loaders.RectangleLoader.FULL": {"tf": 1}, "arc.present.loaders.Pacman.FULL": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.color.Color.ESCAPE": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.color.effects": {"tf": 1}, "arc.color.effects.__init__": {"tf": 1}, "arc.color.effects.CLEAR": {"tf": 1}, "arc.color.effects.BOLD": {"tf": 1}, "arc.color.effects.ITALIC": {"tf": 1}, "arc.color.effects.UNDERLINE": {"tf": 1}, "arc.color.effects.STRIKETHROUGH": {"tf": 1}}, "df": 7}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command.Command.ensure_function": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.command_executor.CommandExecutor.end_around_callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"arc.config.ConfigBase.ENV_PREFIX": {"tf": 1}, "arc.config.Config.ENV_PREFIX": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.lib_converters.EnumConverter": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command_executor.CommandExecutor.execute": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.ExecutionError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {"arc.present.loaders.BarLoader.EMPTY": {"tf": 1}, "arc.present.loaders.SlantLoader.EMPTY": {"tf": 1}, "arc.present.loaders.RectangleLoader.EMPTY": {"tf": 1}, "arc.present.loaders.Pacman.EMPTY": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"arc.prompt.prompt.Prompt.emoji": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors": {"tf": 1}, "arc.errors.ArcError": {"tf": 1}, "arc.errors.ArcError.__init__": {"tf": 1}, "arc.errors.ExecutionError": {"tf": 1}, "arc.errors.NoOpError": {"tf": 1}, "arc.errors.CommandError": {"tf": 1}, "arc.errors.ValidationError": {"tf": 1}, "arc.errors.ActionError": {"tf": 1}, "arc.errors.TokenizerError": {"tf": 1}, "arc.errors.TokenizerError.__init__": {"tf": 1}, "arc.errors.ParserError": {"tf": 1}, "arc.errors.ConversionError": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.error": {"tf": 1}}, "df": 14}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.color.fg.GREEN": {"tf": 1}, "arc.color.bg.GREEN": {"tf": 1}}, "df": 2}}, "y": {"docs": {"arc.color.fg.GREY": {"tf": 1}, "arc.color.bg.GREY": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser.get_matchers": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.command.argument_parser.ArgumentParser.get_match_values": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"arc.command.helpers.ArgBuilder.get_meta": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser.get_or_raise": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.converter_mapping.get_converter": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.run.get_command_namespace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.run.get_input": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters": {"tf": 1}, "arc.convert.converters.generic_converters.GenericConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.args": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.basic_convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.generic_convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter.generic_convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.ListConverter": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.generic_convert": {"tf": 1.4142135623730951}}, "df": 21}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.GenericConverter": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"arc.help_text.generate_help": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.color.fg.YELLOW": {"tf": 1}, "arc.color.bg.YELLOW": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.color.effects.UNDERLINE": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.UnionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}}, "df": 2}}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.loaders.Loader.update": {"tf": 1}, "arc.present.loaders.Pacman.update": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.utilities": {"tf": 1}, "arc.utilities.debug": {"tf": 1}, "arc.utilities.files": {"tf": 1}, "arc.utilities.https": {"tf": 1}, "arc.utils": {"tf": 1}, "arc.utils.no_op": {"tf": 1}, "arc.utils.timer": {"tf": 1}, "arc.utils.symbol": {"tf": 1}, "arc.utils.symbol.__init__": {"tf": 1}, "arc.utils.symbol.name": {"tf": 1}, "arc.utils.indent": {"tf": 1}, "arc.utils.handle": {"tf": 1}, "arc.utils.handle.__init__": {"tf": 1}, "arc.utils.format_exception": {"tf": 1}, "arc.utils.unwrap_type": {"tf": 1}, "arc.utils.is_alias": {"tf": 1}, "arc.utils.header": {"tf": 1}}, "df": 17}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"arc.command.argument.Argument.name": {"tf": 1}, "arc.command.argument_parser.KeyArg.name": {"tf": 1}, "arc.present.table.ColumnBase.name": {"tf": 1}, "arc.present.table.Column.name": {"tf": 1}, "arc.utils.symbol.name": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.command.namespace": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"arc.config.Config.namespace_sep": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command_executor.CommandExecutor.non_inheritable": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.errors.NoOpError": {"tf": 1}}, "df": 1}}}}}}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"arc.utils.no_op": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"arc.types.needs_cleanup": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.argument_parser.KeyArg.name": {"tf": 1}, "arc.command.argument_parser.KeyArg.value": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser.matchers": {"tf": 1}, "arc.command.argument_parser.KeywordParser.handle_keyword_argument": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}}, "df": 4}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"arc.present.table.Column.justify": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.questions": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.prompt.questions.is_list": {"tf": 1}, "arc.prompt.questions.QuestionError": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1.4142135623730951}, "arc.prompt.questions.Question.multi_line": {"tf": 1.4142135623730951}, "arc.prompt.questions.Question.sensitive": {"tf": 1.4142135623730951}, "arc.prompt.questions.Question.render": {"tf": 1.4142135623730951}, "arc.prompt.questions.Question.handle_answer": {"tf": 1.4142135623730951}, "arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.prompt.questions.InputQuestion.__init__": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.__init__": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.multi_line": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.result": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 26, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.questions.QuestionError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"arc.present.box.Box.__init__": {"tf": 2}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.types.range.Range": {"tf": 2}}, "df": 4, "b": {"1": {"0": {"0": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "1": {"0": {"docs": {"arc.convert": {"tf": 1.4142135623730951}, "arc.types.range.Range": {"tf": 1}}, "df": 2}, "docs": {"arc.command.context": {"tf": 2.23606797749979}, "arc.convert": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1.7320508075688772}}, "df": 4, ",": {"2": {"docs": {}, "df": 0, ",": {"3": {"docs": {"arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "2": {"docs": {"arc.command.context": {"tf": 1.7320508075688772}, "arc.convert": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1.4142135623730951}, "arc.types.range.Range": {"tf": 1}}, "df": 5}, "3": {"6": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}, "9": {"docs": {"arc.callbacks": {"tf": 2}, "arc.command.context": {"tf": 4.358898943540674}, "arc.convert": {"tf": 5.0990195135927845}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.types.range.Range": {"tf": 1.4142135623730951}}, "df": 5}, "docs": {"arc": {"tf": 1}, "arc.convert": {"tf": 1.7320508075688772}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1.7320508075688772}}, "df": 3}, "4": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}, "5": {"docs": {"arc.command.context": {"tf": 1.4142135623730951}}, "df": 1}, "9": {"docs": {"arc": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks.validators.valid_path": {"tf": 1}}, "df": 1, "c": {"docs": {"arc": {"tf": 2}, "arc.application": {"tf": 1.4142135623730951}, "arc.callbacks": {"tf": 1.4142135623730951}, "arc.cli.CLI": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 2.6457513110645907}, "arc.config.Config": {"tf": 1}, "arc.convert": {"tf": 4.795831523312719}, "arc.convert.converters.arc_converters": {"tf": 1}, "arc.convert.input": {"tf": 1}, "arc.errors.ArcError": {"tf": 1}, "arc.errors.TokenizerError": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.prompt.questions.QuestionError": {"tf": 1}, "arc.run.run": {"tf": 1.4142135623730951}}, "df": 15, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}}, "df": 3}}}}}, "_": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.callbacks.callbacks.callback": {"tf": 1}, "arc.callbacks.validators.in_range": {"tf": 2.23606797749979}, "arc.callbacks.validators.valid_path": {"tf": 1.4142135623730951}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert.convert": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 22, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks": {"tf": 2}, "arc.callbacks.actions.open_file": {"tf": 2}, "arc.callbacks.validators.in_range": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.cli.CLI.missing_command": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.command.argument.Argument.convert": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1.4142135623730951}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1.4142135623730951}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 2}, "arc.config.Config": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1.4142135623730951}, "arc.config.Config.flag_denoter": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.convert.convert": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1.4142135623730951}, "arc.run.get_command_namespace": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 25, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}}, "df": 4}}}}}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {"arc.run.run": {"tf": 1}, "arc.run.get_input": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.callback": {"tf": 1}, "arc.convert.input": {"tf": 1}, "arc.present.box.Box": {"tf": 1}}, "df": 4, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.CLI.autoload": {"tf": 1}, "arc.command.namespace": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.application": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 2.23606797749979}, "arc.convert": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {"arc.callbacks": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks.actions": {"tf": 1}, "arc.errors.ActionError": {"tf": 1}, "arc.prompt.prompt.Prompt.act": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1.4142135623730951}, "arc.present.box.Box": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1.4142135623730951}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.convert.convert": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.7320508075688772}, "arc.cli.ArcFormatter.format": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"arc.cli.CLI.command": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion": {"tf": 1}}, "df": 3, "s": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.validators.in_range": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1}, "r": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "k": {"docs": {"arc.prompt": {"tf": 1}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1.4142135623730951}, "arc.prompt.questions.ConfirmQuestion": {"tf": 1}}, "df": 6}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}}, "df": 2}}, "c": {"docs": {"arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.run.get_input": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.config.Config.mode": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"arc.run.run": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 4}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt": {"tf": 1}, "arc.prompt.confirm": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1.4142135623730951}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.prompt.questions.is_list": {"tf": 1}, "arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 8}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.context": {"tf": 1}}, "df": 7}}}}}, "r": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.converter_mapping.register": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"arc.run.run": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"arc.callbacks": {"tf": 1.4142135623730951}, "arc.prompt": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter.format": {"tf": 1.4142135623730951}}, "df": 2, "'": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"arc.command.context": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks": {"tf": 1}, "arc.cli.CLI.command": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 2}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1.4142135623730951}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.run.get_input": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}, "arc.run.find_command": {"tf": 1}, "arc.types.file.File": {"tf": 1.4142135623730951}, "arc.types.range.Range": {"tf": 1.4142135623730951}, "arc.types.range.Range.range": {"tf": 1}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 30}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"arc.run.get_input": {"tf": 1}}, "df": 1}}, "v": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.convert": {"tf": 1.7320508075688772}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"arc.callbacks.callbacks.skip": {"tf": 1}, "arc.convert.input": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {"arc.callbacks.validators.valid_path": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.run.find_command": {"tf": 1}, "arc.types.range.Range.range": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, ")": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.command.command.Command.base": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"arc.convert": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}}, "df": 5}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1.4142135623730951}, "arc.config.Config": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"arc.convert": {"tf": 2.6457513110645907}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.prompt.Prompt.ask": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.callbacks.validators": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.errors.ExecutionError": {"tf": 1}, "arc.errors.NoOpError": {"tf": 1}, "arc.errors.CommandError": {"tf": 1}, "arc.errors.ValidationError": {"tf": 1}, "arc.errors.ActionError": {"tf": 1}, "arc.errors.ParserError": {"tf": 1}, "arc.errors.ConversionError": {"tf": 1}}, "df": 14}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert": {"tf": 3.1622776601683795}, "arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}}}}, "(": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.range.Range.range": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1.4142135623730951}, "arc.run.run": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"arc.color.fg.rgb": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert.converters.converter_mapping.register": {"tf": 1}}, "df": 4, "i": {"docs": {"arc": {"tf": 2.8284271247461903}, "arc.callbacks": {"tf": 2.23606797749979}, "arc.cli.CLI.__init__": {"tf": 1.7320508075688772}, "arc.cli.CLI.autocomplete": {"tf": 1.4142135623730951}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.context": {"tf": 4.47213595499958}, "arc.convert": {"tf": 7.54983443527075}, "arc.run.get_command_namespace": {"tf": 1}}, "df": 9, "'": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"arc": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.convert": {"tf": 2.23606797749979}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.cli.CLI": {"tf": 1}, "arc.color.Color": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1.4142135623730951}, "arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 2.6457513110645907}, "arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Transiton": {"tf": 1}, "arc.prompt": {"tf": 1}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.types.file.File": {"tf": 2}}, "df": 21}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.command.argument.Argument.convert": {"tf": 1}, "arc.convert": {"tf": 3.3166247903554}, "arc.convert.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.arc_converters": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.converter_mapping.register": {"tf": 1}, "arc.convert.converters.generic_converters.GenericConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.UnionConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.ListConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.SetConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.TupleConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.lib_converters": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter": {"tf": 1.7320508075688772}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}, "arc.convert.input": {"tf": 1.7320508075688772}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 47, "s": {"docs": {"arc": {"tf": 1}}, "df": 1}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {"arc.convert": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {"arc.convert": {"tf": 2.23606797749979}, "arc.errors.ConversionError": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.post_load": {"tf": 1}, "arc.config.Config": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.run.run": {"tf": 1.4142135623730951}, "arc.utils.timer": {"tf": 1}}, "df": 8, "u": {"docs": {}, "df": 0, "r": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.Config": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"arc.prompt.questions.ConfirmQuestion": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1, "t": {"docs": {"arc.cli.CLI.__init__": {"tf": 1.4142135623730951}, "arc.command.namespace": {"tf": 1.4142135623730951}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 5.656854249492381}, "arc.command.context.Context": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.run.find_command": {"tf": 1.4142135623730951}}, "df": 7, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.command.context": {"tf": 2}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}}, "df": 2, "t": {"docs": {"arc.present.box.Box.border": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": null}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": null}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"arc.prompt.questions.is_list": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc": {"tf": 1.4142135623730951}, "arc.application": {"tf": 1}, "arc.callbacks": {"tf": 3.4641016151377544}, "arc.callbacks.callbacks.callback": {"tf": 1}, "arc.callbacks.callbacks.skip": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.command": {"tf": 1.7320508075688772}, "arc.cli.CLI.base": {"tf": 1.4142135623730951}, "arc.cli.CLI.autocomplete": {"tf": 1.4142135623730951}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1.7320508075688772}, "arc.command.namespace": {"tf": 1.7320508075688772}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.command.Command.run": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.command.command.Command.base": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1}, "arc.command.command.Command.ensure_function": {"tf": 1}, "arc.command.context": {"tf": 2.449489742783178}, "arc.config.Config.namespace_sep": {"tf": 1}, "arc.convert": {"tf": 3.3166247903554}, "arc.errors.ExecutionError": {"tf": 1}, "arc.errors.CommandError": {"tf": 1}, "arc.errors.ValidationError": {"tf": 1}, "arc.run.run": {"tf": 2}, "arc.run.find_command": {"tf": 1.4142135623730951}, "arc.types.paths.ValidPath": {"tf": 1}}, "df": 28, "'": {"docs": {"arc.cli.CLI.helper": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1.4142135623730951}}, "df": 3}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.command.namespace": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.run.find_command": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "'": {"docs": {"arc.command.command_executor.CommandExecutor": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"arc.application": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.CLI": {"tf": 1}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.color.Color": {"tf": 1}, "arc.color.fg": {"tf": 1}, "arc.color.bg": {"tf": 1}, "arc.convert": {"tf": 3.1622776601683795}, "arc.present.box.Box": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 2}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 7, "=": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"arc.present.table.Column": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.present.table.ColumnBase": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.box.Box": {"tf": 1.4142135623730951}}, "df": 1, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.config.Config.namespace_sep": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}, "arc.config.Config.flag_denoter": {"tf": 1}, "arc.config.Config.short_flag_denoter": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.application": {"tf": 1}, "arc.callbacks.validators": {"tf": 1}, "arc.callbacks.validators.in_range": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter.format": {"tf": 1.4142135623730951}, "arc.command.namespace": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.run.find_command": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.callbacks": {"tf": 3}, "arc.callbacks.actions": {"tf": 1}, "arc.callbacks.callbacks.callback": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.callback_helper": {"tf": 1.4142135623730951}, "arc.callbacks.callbacks.skip": {"tf": 1}, "arc.callbacks.validators": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.errors.ValidationError": {"tf": 1}, "arc.errors.ActionError": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"arc.callbacks.callbacks.callback": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks.actions": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}, "t": {"docs": {"arc.prompt.questions.is_int": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.errors.NoOpError": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks": {"tf": 1.7320508075688772}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1.7320508075688772}, "arc.command.namespace": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.command.command.Command.ensure_function": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.present.box.Box": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, ")": {"docs": {}, "df": 0, "f": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.errors.CommandError": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.command.command.Command.base": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.config.Config.mode": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"arc.convert": {"tf": 2}, "arc.types.paths.ValidPath": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "x": {"docs": {"arc.command.context": {"tf": 3.7416573867739413}}, "df": 1, "=": {"2": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc": {"tf": 1}}, "df": 1}}, "p": {"docs": {"arc.cli.CLI.helper": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.errors.ParserError": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"arc": {"tf": 1}, "arc.callbacks.actions": {"tf": 1}, "arc.callbacks.validators": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.context": {"tf": 2.23606797749979}, "arc.convert": {"tf": 6.6332495807108}, "arc.convert.convert": {"tf": 1.4142135623730951}, "arc.convert.converters.arc_converters": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}, "arc.errors.ConversionError": {"tf": 1}, "arc.present.table.ColumnBase": {"tf": 1}, "arc.present.table.Column": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.types.file.File": {"tf": 2}, "arc.types.paths.ValidPath": {"tf": 1}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 35, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.types.file.File": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"2": {"docs": {"arc.command.context": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"arc": {"tf": 1.4142135623730951}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.command.context": {"tf": 2.6457513110645907}, "arc.config.Config.mode": {"tf": 1}}, "df": 4}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter.format": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.present.box.Box": {"tf": 1.7320508075688772}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.utils.indent": {"tf": 1}}, "df": 6, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.actions": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 1}}, "df": 3}}, "e": {"docs": {"arc.run.find_command": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1.7320508075688772}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.4142135623730951}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.utils.timer": {"tf": 1}}, "df": 7}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.input": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2, "=": {"2": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.ArcFormatter": {"tf": 2.8284271247461903}, "arc.cli.ArcFormatter.format": {"tf": 1.4142135623730951}, "arc.utils.timer": {"tf": 1.4142135623730951}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1, ")": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.convert.converters.builtin_converters": {"tf": 1}, "arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.builtin_converters": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1.7320508075688772}}, "df": 3, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.present.table.Table": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 2}, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 2}, "arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.callbacks.validators.in_range": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks": {"tf": 2.6457513110645907}, "arc.callbacks.callbacks.callback": {"tf": 1}, "arc.callbacks.callbacks.callback_helper": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter.format": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.command.namespace": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}, "arc.run.find_command": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 1}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {"arc.present.box.Box": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.box.Box.__init__": {"tf": 1.7320508075688772}, "arc.present.box.Box.border": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1}, "arc.convert.converters.generic_converters.GenericConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter": {"tf": 1}, "arc.errors.ArcError": {"tf": 1}, "arc.errors.TokenizerError": {"tf": 1}, "arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Transiton": {"tf": 1}, "arc.prompt.questions.QuestionError": {"tf": 1}, "arc.types.file.File": {"tf": 1}, "arc.types.range.Range": {"tf": 2.6457513110645907}}, "df": 30, "=": {"1": {"0": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.prompt": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.color.bg": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.range.Range.range": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"arc.convert": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.utils.indent": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.context": {"tf": 1.4142135623730951}, "arc.types.file.File": {"tf": 1}}, "df": 2, "t": {"docs": {"arc": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks": {"tf": 1.7320508075688772}, "arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.command.command.Command.base": {"tf": 1}, "arc.command.command.Command.ensure_function": {"tf": 1}, "arc.convert.converters.converter_mapping.register": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.utils.timer": {"tf": 1}}, "df": 7}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"arc": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.config.Config.mode": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {"arc": {"tf": 1}, "arc.callbacks": {"tf": 2}, "arc.callbacks.callbacks.callback_helper": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 2.23606797749979}, "arc.convert": {"tf": 3.4641016151377544}, "arc.types.file.File": {"tf": 1.4142135623730951}}, "df": 6, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1.4142135623730951}, "arc.cli.CLI.base": {"tf": 1}, "arc.cli.CLI.missing_command": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.command.namespace": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.7320508075688772}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.Config": {"tf": 1.4142135623730951}, "arc.present.box.Box.__init__": {"tf": 2}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.7320508075688772}, "arc.types.file.File": {"tf": 1.4142135623730951}, "arc.types.range.Range": {"tf": 1}}, "df": 18}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}, "arc.convert": {"tf": 2}, "arc.types.file.File": {"tf": 1}}, "df": 4, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {"arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.convert": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}}, "df": 16}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.utils.timer": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"arc": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"arc.command.context": {"tf": 1}, "arc.run.find_command": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"arc.callbacks": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser": {"tf": 1.4142135623730951}, "arc.command.argument_parser.RawParser": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1.4142135623730951}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 1.4142135623730951}, "arc.present.table.Table": {"tf": 1}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.namespace": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.context.Context": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 2}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1.4142135623730951}, "arc.present.box.Box.border": {"tf": 1}}, "df": 10}}}}}}, "(": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1}}}}, "*": {"docs": {}, "df": 0, "*": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "=": {"1": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.missing_command": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}, "arc.present": {"tf": 1}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 2}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.prompt.Prompt.error": {"tf": 1}, "arc.prompt.prompt.Prompt.ok": {"tf": 1}, "arc.prompt.prompt.Prompt.no": {"tf": 1}, "arc.prompt.prompt.Prompt.act": {"tf": 1}, "arc.prompt.prompt.Prompt.warn": {"tf": 1}, "arc.prompt.prompt.Prompt.subtle": {"tf": 1}, "arc.prompt.prompt.Prompt.snake": {"tf": 1}}, "df": 15}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"arc.utils.indent": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"arc.command.namespace": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"arc.command.context": {"tf": 1.7320508075688772}}, "df": 1}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.prompt.Prompt.ask": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}, "arc.errors.ExecutionError": {"tf": 1}}, "df": 2}}}, "[": {"docs": {}, "df": 0, "k": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"arc": {"tf": 1}, "arc.application": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.missing_command": {"tf": 1.4142135623730951}, "arc.cli.CLI.helper": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.convert.input": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.present": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}}, "df": 6, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {"arc": {"tf": 2}, "arc.callbacks": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 1}}, "df": 3}}}, "x": {"docs": {"arc.color.fg.hex": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.CLI.missing_command": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}, "arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.convert.converters.builtin_converters": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1.4142135623730951}, "arc.command.argument_parser.RawParser": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1}}, "df": 5}, "_": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc": {"tf": 1}, "arc.color.Color": {"tf": 1}, "arc.command.context.Context": {"tf": 1}}, "df": 3}, "s": {"docs": {"arc": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.command.command.Command.run": {"tf": 1}, "arc.command.context": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc": {"tf": 1}, "arc.callbacks": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.context": {"tf": 2}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.convert": {"tf": 3.4641016151377544}, "arc.present.box.Box": {"tf": 1}, "arc.types.file.File": {"tf": 1}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.application": {"tf": 1}, "arc.callbacks": {"tf": 3.1622776601683795}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.command.command.Command.run": {"tf": 1}, "arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.config.ConfigBase.post_load": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.errors.ExecutionError": {"tf": 1}, "arc.errors.NoOpError": {"tf": 1.4142135623730951}, "arc.errors.ActionError": {"tf": 1}, "arc.run.run": {"tf": 1.4142135623730951}, "arc.run.get_input": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}}, "df": 14}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}, "s": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument.Argument.convert": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.errors.ArcError": {"tf": 1}, "arc.errors.TokenizerError": {"tf": 1}, "arc.prompt.questions.QuestionError": {"tf": 1}, "arc.types.file.File": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.run.run": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.convert": {"tf": 2.23606797749979}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.application.application.OpenEnum": {"tf": 1}, "arc.application.application.InitEnum": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {"arc.callbacks": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 1.4142135623730951}, "arc.run.find_command": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 3}}}, "v": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.ConfigBase.post_load": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1, "n": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1.7320508075688772}, "arc.convert.input": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.run.find_command": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 10}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.errors.CommandError": {"tf": 1}, "arc.errors.ValidationError": {"tf": 1}, "arc.errors.ParserError": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.error": {"tf": 1}}, "df": 10}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"arc.run.get_command_namespace": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.color.effects": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"arc.types.file.File": {"tf": 1}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"arc.command.context": {"tf": 2.6457513110645907}, "arc.prompt.prompt.Prompt": {"tf": 1}}, "df": 2, "y": {"docs": {"arc.run.run": {"tf": 1}, "arc.run.get_input": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"arc": {"tf": 1}, "arc.callbacks": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"arc.run.get_input": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1.4142135623730951}, "arc.callbacks": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "p": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.convert": {"tf": 1.4142135623730951}, "arc.convert.converters.lib_converters": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1.4142135623730951}, "arc.callbacks.validators.in_range": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.color.Color": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1.4142135623730951}, "arc.run.run": {"tf": 1.4142135623730951}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 13, "(": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.callbacks.validators.valid_path": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1.7320508075688772}, "arc.cli.ArcFormatter.format": {"tf": 1.7320508075688772}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 2}, "arc.convert.convert": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.present.box.Box": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1.7320508075688772}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.types.range.Range": {"tf": 1.7320508075688772}}, "df": 33}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"arc.errors.ParserError": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.present.box.Box.border": {"tf": 1}}, "df": 3, "r": {"docs": {"arc.present.loaders.Styler": {"tf": 1}, "arc.present.loaders.Transiton": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.cli.CLI.missing_command": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.config.Config.short_flag_denoter": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1.4142135623730951}, "arc.run.get_input": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}, "t": {"docs": {"arc.callbacks": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}}, "df": 16}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"arc.callbacks": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}}, "df": 3}, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1.7320508075688772}, "arc.utils.timer": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "p": {"docs": {"arc.config.ConfigBase.post_load": {"tf": 1}}, "df": 1}}, "(": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 1.4142135623730951}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.config.Config.namespace_sep": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.errors.NoOpError": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.present": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.convert.converters.arc_converters": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"arc.callbacks": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.errors.NoOpError": {"tf": 1}}, "df": 5, "i": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 7}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.is_list": {"tf": 1}, "arc.run.get_input": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 3}}}, "l": {"docs": {"arc.types.ArcType": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"arc.present.box.Box.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.callbacks": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}, ":": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"arc.cli.CLI.helper": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.cli.CLI.command": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 2}, "arc.command.command.Command.install_command": {"tf": 1}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 2.23606797749979}, "arc.run.find_command": {"tf": 1}}, "df": 8, "'": {"docs": {"arc.cli.CLI.command": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"arc.prompt.prompt.Prompt.subtle": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.types.ArcType": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.prompt.prompt.Prompt.ok": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.validators.in_range": {"tf": 1.7320508075688772}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.CLI.base": {"tf": 1}, "arc.command.command.Command.ensure_function": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"arc": {"tf": 1}, "arc.callbacks": {"tf": 1}, "arc.command.context": {"tf": 2}, "arc.convert": {"tf": 2.6457513110645907}, "arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"3": {"docs": {"arc.callbacks": {"tf": 1}, "arc.command.context": {"tf": 2}, "arc.convert": {"tf": 2.449489742783178}}, "df": 3}, "docs": {"arc": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.prompt.prompt.Prompt.snake": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"arc": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc.convert": {"tf": 1.4142135623730951}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks.validators.in_range": {"tf": 1.4142135623730951}, "arc.config.Config.mode": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}, "t": {"docs": {"arc.config.ConfigBase.post_load": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1}, "arc.callbacks": {"tf": 2.23606797749979}, "arc.command.context": {"tf": 2.449489742783178}, "arc.convert": {"tf": 4.69041575982343}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 5, "(": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"arc.present.box.Box": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.actions.open_file": {"tf": 1.4142135623730951}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}, "arc.command.argument.Argument.convert": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1.7320508075688772}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1.7320508075688772}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1.7320508075688772}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.convert.convert": {"tf": 1.4142135623730951}, "arc.convert.input": {"tf": 1}, "arc.present": {"tf": 1}, "arc.present.box.Box": {"tf": 1}, "arc.prompt": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.run.get_input": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.utils.indent": {"tf": 1}}, "df": 27}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"arc.config.Config.flag_denoter": {"tf": 1}, "arc.config.Config.short_flag_denoter": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.types.ArcType": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}}, "df": 7, ")": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.config.Config.mode": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"arc.errors.ExecutionError": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 2.23606797749979}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.context": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.box.Box": {"tf": 1}, "arc.present.table.Table": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"arc.callbacks.actions": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 1.7320508075688772}, "arc.convert": {"tf": 1.4142135623730951}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.run.find_command": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}}, "df": 14, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.convert": {"tf": 3.4641016151377544}, "arc.run.run": {"tf": 1.4142135623730951}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.converters.arc_converters.FileConverter": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 2.8284271247461903}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1.7320508075688772}, "arc.config.Config.arg_assignment": {"tf": 1}, "arc.errors.ParserError": {"tf": 1}, "arc.run.run": {"tf": 1.4142135623730951}}, "df": 18, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1.7320508075688772}}, "df": 4, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 1.7320508075688772}}, "df": 1, "'": {"docs": {"arc.command.context": {"tf": 1.4142135623730951}}, "df": 1}, ":": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc.config.Config.namespace_sep": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.prompt.Prompt.ask": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"arc.present.box.Box.__init__": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "=": {"2": {"docs": {"arc.present.box.Box": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.context": {"tf": 2}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.config.Config.short_flag_denoter": {"tf": 1}, "arc.convert": {"tf": 1.7320508075688772}}, "df": 9, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"arc": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.callbacks.callback": {"tf": 1}, "arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.command.namespace": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.command.Command.base": {"tf": 1}, "arc.command.command.Command.ensure_function": {"tf": 1}, "arc.command.command_executor.CommandExecutor": {"tf": 1}, "arc.command.command_executor.CommandExecutor.execute": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 2.449489742783178}, "arc.convert.input": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}, "arc.utils.timer": {"tf": 1}}, "df": 23}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"arc.callbacks.actions.open_file": {"tf": 2}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 2}, "arc.config.ConfigBase.parse": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.post_load": {"tf": 1}, "arc.config.Config": {"tf": 1}, "arc.convert": {"tf": 5.196152422706632}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.run.run": {"tf": 1.7320508075688772}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 11, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.callbacks.validators.valid_path": {"tf": 1.4142135623730951}, "arc.types.paths.ValidPath": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.from_file": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"arc.callbacks.callbacks.callback": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.run.get_command_namespace": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.command.context": {"tf": 2.23606797749979}}, "df": 2, ":": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.7320508075688772}, "arc.cli.ArcFormatter.format": {"tf": 2.449489742783178}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.present.table.Table": {"tf": 1}}, "df": 5, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.color.fg": {"tf": 1}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.command.context": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.types.file.File": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks.validators": {"tf": 1}, "arc.errors.ActionError": {"tf": 1}, "arc.errors.ConversionError": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"arc.convert.converters.builtin_converters.BoolConverter": {"tf": 1.7320508075688772}}, "df": 1}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.input": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}, "arc.config.Config.flag_denoter": {"tf": 1.4142135623730951}, "arc.config.Config.short_flag_denoter": {"tf": 1}}, "df": 8}, "s": {"docs": {}, "df": 0, "k": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 2.6457513110645907}, "arc.types.range.Range": {"tf": 1}}, "df": 2, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "g": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1.4142135623730951}, "arc.cli.CLI.autocomplete": {"tf": 1.4142135623730951}, "arc.cli.CLI.helper": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 2}, "arc.command.namespace": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 2.23606797749979}, "arc.command.context": {"tf": 2.449489742783178}, "arc.config.Config.namespace_sep": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.convert.convert": {"tf": 1.4142135623730951}, "arc.run.get_command_namespace": {"tf": 1}}, "df": 16, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc": {"tf": 1.4142135623730951}, "arc.command.namespace": {"tf": 2.23606797749979}, "arc.command.context": {"tf": 2}, "arc.errors.NoOpError": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1.4142135623730951}, "arc.run.find_command": {"tf": 1}}, "df": 6}}}}, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}, "=": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.callbacks": {"tf": 2}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "e": {"docs": {"arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1.7320508075688772}}, "df": 2}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 1}, "arc.run.find_command": {"tf": 1}}, "df": 4}}, "_": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"arc.command.namespace": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2}}, "w": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 2}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1.4142135623730951}}, "df": 3}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.convert": {"tf": 3.4641016151377544}, "arc.prompt.questions.is_int": {"tf": 1.4142135623730951}, "arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1.4142135623730951}, "arc.types.range.Range": {"tf": 2}}, "df": 6, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}, "=": {"5": {"docs": {"arc.convert": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "=": {"1": {"docs": {}, "df": 0, ",": {"2": {"docs": {}, "df": 0, ",": {"3": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}}}}, "g": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters": {"tf": 1}, "arc.types.file.File": {"tf": 1.7320508075688772}}, "df": 8, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"arc": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.cli.CLI.base": {"tf": 1}, "arc.cli.CLI.helper": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.types.range.Range": {"tf": 1.7320508075688772}}, "df": 11}}}}, "t": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert": {"tf": 2.6457513110645907}, "arc.present.box.Box": {"tf": 1}, "arc.prompt.prompt.Prompt": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.types.range.Range": {"tf": 1.7320508075688772}, "arc.utils.unwrap_type": {"tf": 2}}, "df": 9}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}, "n": {"docs": {"arc.convert": {"tf": 1.7320508075688772}}, "df": 1}}, "y": {"docs": {"arc.prompt.prompt.Prompt.subtle": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.callbacks.callback": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 2.23606797749979}, "arc.cli.ArcFormatter.format": {"tf": 2}, "arc.command.namespace": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 2.8284271247461903}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.run.get_input": {"tf": 1}, "arc.run.find_command": {"tf": 1}, "arc.types.file.File": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.errors.ConversionError.__init__": {"tf": 1}, "arc.present": {"tf": 1}, "arc.prompt": {"tf": 1}, "arc.prompt.confirm": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.prompt.Prompt.error": {"tf": 1}, "arc.prompt.prompt.Prompt.ok": {"tf": 1}, "arc.prompt.prompt.Prompt.no": {"tf": 1}, "arc.prompt.prompt.Prompt.act": {"tf": 1}, "arc.prompt.prompt.Prompt.warn": {"tf": 1}, "arc.prompt.prompt.Prompt.subtle": {"tf": 1}, "arc.prompt.prompt.Prompt.snake": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.run.get_input": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}}, "df": 20, "'": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 9}, "_": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.input": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"arc.run.run": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks.validators": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 2.23606797749979}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {"arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.prompt.prompt.Prompt.no": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"arc.present": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {"arc": {"tf": 1}, "arc.callbacks": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.callbacks": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.validators.valid_path": {"tf": 1.4142135623730951}, "arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.convert": {"tf": 1.4142135623730951}, "arc.errors.ValidationError": {"tf": 1.4142135623730951}, "arc.run.get_command_namespace": {"tf": 1}, "arc.types.paths.ValidPath": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "y": {"docs": {"arc.callbacks.validators": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.callbacks.validators": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"arc.convert": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "u": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.validators.in_range": {"tf": 1.4142135623730951}, "arc.callbacks.validators.valid_path": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1.7320508075688772}, "arc.color.fg.rgb": {"tf": 1}, "arc.color.fg.hex": {"tf": 1}, "arc.color.bg.rgb": {"tf": 1}, "arc.color.bg.hex": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.argument.Argument.convert": {"tf": 1.4142135623730951}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.Config": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}, "arc.config.Config.mode": {"tf": 1}, "arc.convert": {"tf": 3.3166247903554}, "arc.convert.convert": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1.7320508075688772}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 23}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.config.ConfigBase.from_env": {"tf": 1.7320508075688772}, "arc.types.file.File": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.CLI.__init__": {"tf": 1.7320508075688772}, "arc.cli.CLI.missing_command": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "t": {"docs": {"arc.types.file.File": {"tf": 2.23606797749979}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"arc": {"tf": 1}, "arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1}, "arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.config.ConfigBase.post_load": {"tf": 1.4142135623730951}, "arc.run.run": {"tf": 1.4142135623730951}}, "df": 8}}, "g": {"docs": {"arc.cli.ArcFormatter": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 2.8284271247461903}, "arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 2, "'": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {"arc.callbacks": {"tf": 2.23606797749979}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert": {"tf": 2.6457513110645907}}, "df": 5}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.validators.in_range": {"tf": 1.7320508075688772}, "arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.CLI.helper": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.run.find_command": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1.4142135623730951}, "arc.present.box.Box.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.command.argument_parser.ArgumentParser.parse": {"tf": 1}, "arc.command.argument_parser.PositionalParser.parse": {"tf": 1}, "arc.command.context": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.parse": {"tf": 1.4142135623730951}}, "df": 5, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, ")": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 2.449489742783178}, "arc.convert.converters.builtin_converters": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.run.get_command_namespace": {"tf": 1}, "arc.run.find_command": {"tf": 1.4142135623730951}, "arc.utils.unwrap_type": {"tf": 1.7320508075688772}}, "df": 8, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}, "arc.config.ConfigBase.parse": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}, "arc.convert.converters.builtin_converters": {"tf": 1}, "arc.utils.unwrap_type": {"tf": 1}}, "df": 3}}}}, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "b": {"docs": {"arc.convert": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.convert": {"tf": 1}, "arc.convert.converters.lib_converters": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert": {"tf": 2.449489742783178}, "arc.types.range.Range": {"tf": 1.7320508075688772}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.subtle": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"arc": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.convert": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc": {"tf": 1.4142135623730951}}, "df": 1}}, "k": {"docs": {"arc.convert": {"tf": 1.7320508075688772}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.callbacks.callbacks.callback": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert.input": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"arc.callbacks": {"tf": 1}, "arc.callbacks.callbacks.callback_helper": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.warn": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 2}}, "df": 1}, "k": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.4142135623730951}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"arc.present.box.Box.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "'": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "'": {"docs": {"arc.prompt.questions.Question.sensitive": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"arc": {"tf": 1.7320508075688772}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1}, "arc.command.context": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.ensure_function": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"arc": {"tf": 1}, "arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {}, "df": 0, "m": {"docs": {"arc.cli.CLI.helper": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter.format": {"tf": 1}, "arc.present": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks": {"tf": 1}, "arc.convert": {"tf": 2.6457513110645907}, "arc.errors.ValidationError": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1.4142135623730951}, "arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}, "arc.run.run": {"tf": 1}, "arc.run.get_input": {"tf": 1}}, "df": 10, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.input": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.command.context": {"tf": 2}, "arc.convert.converters.arc_converters.RangeConverter": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter": {"tf": 1}, "arc.convert.converters.generic_converters.GenericConverter": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.MutableCollectionConverter": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter": {"tf": 1}, "arc.prompt.questions.Question": {"tf": 1}, "arc.prompt.questions.InputQuestion": {"tf": 1}, "arc.types.file.File": {"tf": 1}}, "df": 23}}}}}, "t": {"docs": {"arc.callbacks.validators.in_range": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 2.8284271247461903}, "arc.prompt.questions.is_int": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"arc.callbacks.callbacks.callback_helper": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"arc.cli.CLI.base": {"tf": 1}, "arc.command.command.Command.run": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.types.range.Range": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {"arc.convert": {"tf": 1}, "arc.present.box.Box.__init__": {"tf": 1}, "arc.types.range.Range": {"tf": 2.23606797749979}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 4}}, "(": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "x": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}, "x": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1.7320508075688772}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.errors.ConversionError.__init__": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}, "d": {"docs": {"arc.convert": {"tf": 1}, "arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.utils.indent": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"arc.run.find_command": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1}, "arc.callbacks": {"tf": 1}, "arc.command.context": {"tf": 2}, "arc.convert": {"tf": 4.898979485566356}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.argument_parser.ArgumentParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.KeywordParser.arg_hook": {"tf": 1}, "arc.command.argument_parser.PositionalParser.arg_hook": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 1}}}}, "'": {"docs": {}, "df": 0, "m": {"docs": {"arc.callbacks": {"tf": 2}}, "df": 1}}, "t": {"docs": {}, "df": 0, "'": {"docs": {"arc.callbacks.validators.valid_path": {"tf": 1}, "arc.cli.CLI.autocomplete": {"tf": 1}, "arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.convert": {"tf": 1.7320508075688772}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 23, "l": {"docs": {}, "df": 0, "l": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.types.range.Range.range_with_picked": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "'": {"docs": {"arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"arc.config.ConfigBase.set_values": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.run.run": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"arc": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"arc": {"tf": 1.4142135623730951}, "arc.callbacks": {"tf": 3.1622776601683795}, "arc.command.context": {"tf": 4}, "arc.convert": {"tf": 5.0990195135927845}, "arc.prompt.prompt.Prompt": {"tf": 2.8284271247461903}}, "df": 5}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt": {"tf": 1}, "arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.previous_answers": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 2.23606797749979}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.questions.Question.sensitive": {"tf": 1}, "arc.prompt.questions.Question.render": {"tf": 1}, "arc.prompt.questions.Question.handle_answer": {"tf": 1}, "arc.prompt.questions.InputQuestion.render": {"tf": 1}, "arc.prompt.questions.InputQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.render": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion.handle_answer": {"tf": 1}, "arc.prompt.questions.RangeQuestion": {"tf": 1}, "arc.prompt.questions.RangeQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion": {"tf": 1.4142135623730951}, "arc.prompt.questions.ConfirmQuestion.render": {"tf": 1}, "arc.prompt.questions.ConfirmQuestion.handle_answer": {"tf": 1}}, "df": 20, "[": {"docs": {}, "df": 0, "v": {"docs": {"arc.prompt.prompt.Prompt.ask": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {"arc.callbacks": {"tf": 2}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"arc": {"tf": 1}, "arc.convert": {"tf": 1}, "arc.types.file.File": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {"arc.callbacks": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1.4142135623730951}, "arc.config.ConfigBase.from_env": {"tf": 1}, "arc.config.Config.mode": {"tf": 1}, "arc.convert": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "l": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}, "arc.convert.converters.builtin_converters": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.cli.ArcFormatter": {"tf": 2.449489742783178}, "arc.cli.ArcFormatter.format": {"tf": 1.4142135623730951}, "arc.prompt.confirm": {"tf": 1.4142135623730951}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.input": {"tf": 1}, "arc.prompt.prompt.Prompt.error": {"tf": 1}, "arc.prompt.prompt.Prompt.ok": {"tf": 1}, "arc.prompt.prompt.Prompt.no": {"tf": 1}, "arc.prompt.prompt.Prompt.act": {"tf": 1}, "arc.prompt.prompt.Prompt.warn": {"tf": 1}, "arc.prompt.prompt.Prompt.subtle": {"tf": 1}, "arc.prompt.prompt.Prompt.snake": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, ")": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1.4142135623730951}, "arc.convert": {"tf": 1}, "arc.convert.converters.arc_converters.FileConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.RangeConverter.convert": {"tf": 1}, "arc.convert.converters.arc_converters.ValidPathConverter.convert": {"tf": 1}, "arc.convert.converters.base_converter.BaseConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.EmptyConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.StringConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.IntConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.FloatConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BytesConverter.convert": {"tf": 1}, "arc.convert.converters.builtin_converters.BoolConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.UnionConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.LiteralConverter.convert": {"tf": 1}, "arc.convert.converters.generic_converters.CollectionConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.EnumConverter.convert": {"tf": 1}, "arc.convert.converters.lib_converters.PathConverter.convert": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.4142135623730951}}, "df": 18}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"arc.command.context": {"tf": 1}, "arc.run.find_command": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1.7320508075688772}, "arc.command.argument_parser.RawParser": {"tf": 1.7320508075688772}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1.7320508075688772}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1.7320508075688772}, "arc.command.argument_parser.RawParser": {"tf": 1.7320508075688772}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "p": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.types.file.File": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}}}}}}}}}}}, "[": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "y": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ")": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"arc.config.ConfigBase.from_file": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.run.get_command_namespace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {"arc.prompt.questions.RangeQuestion.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"arc.convert": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"arc.command.command.Command.ensure_function": {"tf": 1}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "\"": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"arc.prompt.questions.MultipleChoiceQuestion": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {"arc.convert.converters.generic_converters.ListConverter.convert_to": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 2}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"arc.command.context": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks": {"tf": 1.4142135623730951}, "arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "r": {"docs": {"arc.cli.CLI.autocomplete": {"tf": 1}}, "df": 1}, "v": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"arc.prompt.questions.ConfirmQuestion": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.convert": {"tf": 2.23606797749979}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "n": {"docs": {"arc.prompt.confirm": {"tf": 1}, "arc.prompt.prompt.Prompt.confirm": {"tf": 1}}, "df": 2}}}, "k": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "y": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.command.context": {"tf": 1.7320508075688772}, "arc.config.ConfigBase.parse": {"tf": 1}, "arc.types.file.File": {"tf": 1.4142135623730951}}, "df": 5, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"arc.callbacks": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.argument_parser.KeyArg": {"tf": 1}, "arc.config.Config.arg_assignment": {"tf": 1}}, "df": 4}}}}, "=": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"arc.config.ConfigBase.parse": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}, "arc.command.context": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {"arc.cli.ArcFormatter": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.convert.convert": {"tf": 1}, "arc.convert.converters.converter_mapping.register": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"arc.types.file.File": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks.actions.open_file": {"tf": 2}, "arc.convert": {"tf": 1}}, "df": 2}, "r": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"arc.callbacks.actions.open_file": {"tf": 1}, "arc.command.namespace": {"tf": 1}, "arc.command.command.Command.subcommand": {"tf": 2.23606797749979}, "arc.command.context": {"tf": 1}, "arc.config.ConfigBase.from_env": {"tf": 1.4142135623730951}, "arc.convert.convert": {"tf": 1}, "arc.prompt.prompt.Prompt.__init__": {"tf": 1.7320508075688772}, "arc.prompt.questions.MultipleChoiceQuestion": {"tf": 2.6457513110645907}}, "df": 8}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.CLI.__init__": {"tf": 1}, "arc.cli.CLI.command": {"tf": 1}, "arc.cli.CLI.autoload": {"tf": 1}, "arc.command.command.Command.install_command": {"tf": 1.4142135623730951}, "arc.command.context": {"tf": 1}, "arc.command.context.Context": {"tf": 1}, "arc.config.ConfigBase.set_values": {"tf": 1}, "arc.config.Config": {"tf": 1}, "arc.convert": {"tf": 2}, "arc.convert.converters.arc_converters.FileConverter": {"tf": 1}, "arc.convert.converters.generic_converters.SetConverter.convert_to": {"tf": 1.4142135623730951}, "arc.convert.converters.generic_converters.TupleConverter.convert_to": {"tf": 1}, "arc.prompt.prompt.Prompt.ask": {"tf": 1.4142135623730951}, "arc.run.run": {"tf": 1}}, "df": 14, "'": {"docs": {"arc.command.argument_parser.KeyArg": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.cli.ArcFormatter.format": {"tf": 1}, "arc.command.argument_parser.FlagParser": {"tf": 1}, "arc.command.argument_parser.KeywordParser": {"tf": 1}, "arc.command.argument_parser.PositionalParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.KEYWORD": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.POSITIONAL": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.FLAG": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"arc.prompt.prompt.Prompt.__init__": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.argument_parser.ArgumentParser": {"tf": 1}, "arc.command.argument_parser.RawParser": {"tf": 1}, "arc.command.argument_parser.ParsingMethod.RAW": {"tf": 1}, "arc.command.context": {"tf": 1}, "arc.run.run": {"tf": 1}}, "df": 5, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"arc.command.context": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"arc.command.context": {"tf": 2}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"arc.utils.unwrap_type": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"arc.convert": {"tf": 1.4142135623730951}, "arc.types.file.File": {"tf": 1}}, "df": 2, "c": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"arc.command.command.Command.subcommand": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"arc.convert": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"arc.types.file.File": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "_": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"arc.present.box.Box": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"arc.present.box.Box.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "x": {"docs": {"arc.types.range.Range": {"tf": 2}}, "df": 1}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"arc.types.range.Range": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer", "stopWordFilter", "stemmer"], "_isPrebuiltIndex": true}